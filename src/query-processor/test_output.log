warning: profiles for the non root package will be ignored, specify profiles at the workspace root:
package:   /Users/dmf/repos/doc-rag/src/response-generator/Cargo.toml
workspace: /Users/dmf/repos/doc-rag/Cargo.toml
warning: output filename collision.
The example target `basic_usage` in package `response-generator v0.1.0 (/Users/dmf/repos/doc-rag/src/response-generator)` has the same output filename as the example target `basic_usage` in package `embedder v0.1.0 (/Users/dmf/repos/doc-rag/src/embedder)`.
Colliding filename is: /Users/dmf/repos/doc-rag/target/debug/examples/basic_usage
The targets should have unique names.
Consider changing their names to be unique or compiling them separately.
This may become a hard error in the future; see <https://github.com/rust-lang/cargo/issues/6313>.
warning: output filename collision.
The example target `basic_usage` in package `response-generator v0.1.0 (/Users/dmf/repos/doc-rag/src/response-generator)` has the same output filename as the example target `basic_usage` in package `embedder v0.1.0 (/Users/dmf/repos/doc-rag/src/embedder)`.
Colliding filename is: /Users/dmf/repos/doc-rag/target/debug/examples/basic_usage.dSYM
The targets should have unique names.
Consider changing their names to be unique or compiling them separately.
This may become a hard error in the future; see <https://github.com/rust-lang/cargo/issues/6313>.
warning: output filename collision.
The example target `basic_usage` in package `storage v0.1.0 (/Users/dmf/repos/doc-rag/src/storage)` has the same output filename as the example target `basic_usage` in package `response-generator v0.1.0 (/Users/dmf/repos/doc-rag/src/response-generator)`.
Colliding filename is: /Users/dmf/repos/doc-rag/target/debug/examples/basic_usage
The targets should have unique names.
Consider changing their names to be unique or compiling them separately.
This may become a hard error in the future; see <https://github.com/rust-lang/cargo/issues/6313>.
warning: output filename collision.
The example target `basic_usage` in package `storage v0.1.0 (/Users/dmf/repos/doc-rag/src/storage)` has the same output filename as the example target `basic_usage` in package `response-generator v0.1.0 (/Users/dmf/repos/doc-rag/src/response-generator)`.
Colliding filename is: /Users/dmf/repos/doc-rag/target/debug/examples/basic_usage.dSYM
The targets should have unique names.
Consider changing their names to be unique or compiling them separately.
This may become a hard error in the future; see <https://github.com/rust-lang/cargo/issues/6313>.
warning: field `session` is never read
  --> src/embedder/src/models.rs:40:5
   |
36 | pub struct OnnxEmbeddingModel {
   |            ------------------ field in this struct
...
40 |     session: (),
   |     ^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `boundary_detector` is never read
  --> src/chunker/src/lib.rs:94:5
   |
91 | pub struct DocumentChunker {
   |            --------------- field in this struct
...
94 |     boundary_detector: BoundaryDetector,
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: fields `language_detector`, `content_analyzers`, `quality_assessor`, and `semantic_tagger` are never read
  --> src/chunker/src/metadata.rs:20:5
   |
16 | pub struct MetadataExtractor {
   |            ----------------- fields in this struct
...
20 |     language_detector: LanguageDetector,
   |     ^^^^^^^^^^^^^^^^^
21 |     /// Content type analyzers
22 |     content_analyzers: ContentTypeAnalyzers,
   |     ^^^^^^^^^^^^^^^^^
23 |     /// Quality assessment metrics
24 |     quality_assessor: QualityAssessor,
   |     ^^^^^^^^^^^^^^^^
25 |     /// Semantic tag extractors
26 |     semantic_tagger: SemanticTagger,
   |     ^^^^^^^^^^^^^^^
   |
   = note: `MetadataExtractor` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `emails`, `words`, and `line_breaks` are never read
  --> src/chunker/src/metadata.rs:49:5
   |
31 | struct MetadataPatterns {
   |        ---------------- fields in this struct
...
49 |     emails: Regex,
   |     ^^^^^^
...
55 |     words: Regex,
   |     ^^^^^
56 |     /// Line breaks
57 |     line_breaks: Regex,
   |     ^^^^^^^^^^^
   |
   = note: `MetadataPatterns` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `language_indicators` and `character_patterns` are never read
  --> src/chunker/src/metadata.rs:64:5
   |
62 | struct LanguageDetector {
   |        ---------------- fields in this struct
63 |     /// Common words by language
64 |     language_indicators: HashMap<String, HashSet<String>>,
   |     ^^^^^^^^^^^^^^^^^^^
65 |     /// Character frequency patterns
66 |     character_patterns: HashMap<String, Regex>,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: `LanguageDetector` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `code_language_patterns`, `table_analyzers`, `list_detectors`, and `math_detectors` are never read
  --> src/chunker/src/metadata.rs:73:5
   |
71 | struct ContentTypeAnalyzers {
   |        -------------------- fields in this struct
72 |     /// Code language detection patterns
73 |     code_language_patterns: HashMap<String, Regex>,
   |     ^^^^^^^^^^^^^^^^^^^^^^
74 |     /// Table structure analyzers
75 |     table_analyzers: TableAnalyzers,
   |     ^^^^^^^^^^^^^^^
76 |     /// List type detectors
77 |     list_detectors: ListDetectors,
   |     ^^^^^^^^^^^^^^
78 |     /// Mathematical content detectors
79 |     math_detectors: MathDetectors,
   |     ^^^^^^^^^^^^^^
   |
   = note: `ContentTypeAnalyzers` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `markdown_table`, `csv_pattern`, `html_table`, and `tsv_pattern` are never read
  --> src/chunker/src/metadata.rs:86:5
   |
84 | struct TableAnalyzers {
   |        -------------- fields in this struct
85 |     /// Markdown table pattern
86 |     markdown_table: Regex,
   |     ^^^^^^^^^^^^^^
87 |     /// CSV-like pattern
88 |     csv_pattern: Regex,
   |     ^^^^^^^^^^^
89 |     /// HTML table pattern
90 |     html_table: Regex,
   |     ^^^^^^^^^^
91 |     /// TSV pattern
92 |     tsv_pattern: Regex,
   |     ^^^^^^^^^^^
   |
   = note: `TableAnalyzers` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `ordered_list`, `unordered_list`, `definition_list`, and `checklist` are never read
   --> src/chunker/src/metadata.rs:99:5
    |
97  | struct ListDetectors {
    |        ------------- fields in this struct
98  |     /// Ordered list pattern
99  |     ordered_list: Regex,
    |     ^^^^^^^^^^^^
100 |     /// Unordered list pattern (bullet points)
101 |     unordered_list: Regex,
    |     ^^^^^^^^^^^^^^
102 |     /// Definition list pattern
103 |     definition_list: Regex,
    |     ^^^^^^^^^^^^^^^
104 |     /// Checklist pattern
105 |     checklist: Regex,
    |     ^^^^^^^^^
    |
    = note: `ListDetectors` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `latex_blocks`, `inline_math`, `math_symbols`, and `equations` are never read
   --> src/chunker/src/metadata.rs:112:5
    |
110 | struct MathDetectors {
    |        ------------- fields in this struct
111 |     /// LaTeX math blocks
112 |     latex_blocks: Regex,
    |     ^^^^^^^^^^^^
113 |     /// Inline math
114 |     inline_math: Regex,
    |     ^^^^^^^^^^^
115 |     /// Mathematical symbols
116 |     math_symbols: Regex,
    |     ^^^^^^^^^^^^
117 |     /// Equations
118 |     equations: Regex,
    |     ^^^^^^^^^
    |
    = note: `MathDetectors` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `readability_metrics`, `completeness_indicators`, and `structure_metrics` are never read
   --> src/chunker/src/metadata.rs:125:5
    |
123 | struct QualityAssessor {
    |        --------------- fields in this struct
124 |     /// Readability metrics
125 |     readability_metrics: ReadabilityMetrics,
    |     ^^^^^^^^^^^^^^^^^^^
126 |     /// Completeness indicators
127 |     completeness_indicators: CompletenessIndicators,
    |     ^^^^^^^^^^^^^^^^^^^^^^^
128 |     /// Structure quality metrics
129 |     structure_metrics: StructureMetrics,
    |     ^^^^^^^^^^^^^^^^^
    |
    = note: `QualityAssessor` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `sentence_length_weights`, `complexity_patterns`, and `readability_thresholds` are never read
   --> src/chunker/src/metadata.rs:136:5
    |
134 | struct ReadabilityMetrics {
    |        ------------------ fields in this struct
135 |     /// Average sentence length weights
136 |     sentence_length_weights: Vec<f32>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^
137 |     /// Word complexity indicators
138 |     complexity_patterns: Regex,
    |     ^^^^^^^^^^^^^^^^^^^
139 |     /// Readability thresholds
140 |     readability_thresholds: HashMap<String, f32>,
    |     ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `ReadabilityMetrics` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `sentence_endings`, `paragraph_completeness`, and `fragment_indicators` are never read
   --> src/chunker/src/metadata.rs:147:5
    |
145 | struct CompletenessIndicators {
    |        ---------------------- fields in this struct
146 |     /// Sentence ending patterns
147 |     sentence_endings: Regex,
    |     ^^^^^^^^^^^^^^^^
148 |     /// Paragraph completeness patterns
149 |     paragraph_completeness: Regex,
    |     ^^^^^^^^^^^^^^^^^^^^^^
150 |     /// Fragment indicators
151 |     fragment_indicators: Regex,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = note: `CompletenessIndicators` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `structure_patterns` and `quality_weights` are never read
   --> src/chunker/src/metadata.rs:158:5
    |
156 | struct StructureMetrics {
    |        ---------------- fields in this struct
157 |     /// Well-formed structure patterns
158 |     structure_patterns: HashMap<String, Regex>,
    |     ^^^^^^^^^^^^^^^^^^
159 |     /// Quality weights
160 |     quality_weights: HashMap<String, f32>,
    |     ^^^^^^^^^^^^^^^
    |
    = note: `StructureMetrics` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `domain_vocabularies`, `topic_patterns`, and `entity_patterns` are never read
   --> src/chunker/src/metadata.rs:167:5
    |
165 | struct SemanticTagger {
    |        -------------- fields in this struct
166 |     /// Domain-specific vocabularies
167 |     domain_vocabularies: HashMap<String, HashSet<String>>,
    |     ^^^^^^^^^^^^^^^^^^^
168 |     /// Topic classification patterns
169 |     topic_patterns: HashMap<String, Regex>,
    |     ^^^^^^^^^^^^^^
170 |     /// Named entity patterns
171 |     entity_patterns: HashMap<String, Regex>,
    |     ^^^^^^^^^^^^^^^
    |
    = note: `SemanticTagger` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `config` is never read
  --> src/chunker/src/neural_trainer_stub.rs:33:5
   |
32 | pub struct NeuralTrainer {
   |            ------------- field in this struct
33 |     config: TrainingConfig,
   |     ^^^^^^
   |
   = note: `NeuralTrainer` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: `embedder` (lib) generated 1 warning
warning: `chunker` (lib) generated 14 warnings
warning: unused import: `citation::Source`
 --> src/response-generator/src/builder.rs:6:5
  |
6 |     citation::Source,
  |     ^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `error`
 --> src/response-generator/src/citation.rs:6:46
  |
6 | use tracing::{debug, instrument, warn, info, error};
  |                                              ^^^^^

warning: unused import: `ResponseError`
 --> src/response-generator/src/fact_cache_impl.rs:8:28
  |
8 | use crate::error::{Result, ResponseError};
  |                            ^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/response-generator/src/fact_cache_optimized.rs:9:5
  |
9 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `RwLock`
  --> src/response-generator/src/fact_cache_optimized.rs:13:19
   |
13 | use tokio::sync::{RwLock, Semaphore};
   |                   ^^^^^^

warning: unused import: `warn`
  --> src/response-generator/src/fact_cache_optimized.rs:14:28
   |
14 | use tracing::{debug, info, warn};
   |                            ^^^^

warning: unused import: `uuid::Uuid`
  --> src/response-generator/src/fact_cache_optimized.rs:15:5
   |
15 | use uuid::Uuid;
   |     ^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
  --> src/response-generator/src/mongodb_integration.rs:11:5
   |
11 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `uuid::Uuid`
  --> src/response-generator/src/mongodb_integration.rs:15:5
   |
15 | use uuid::Uuid;
   |     ^^^^^^^^^^

warning: unused imports: `DateTime` and `Utc`
  --> src/response-generator/src/mongodb_integration.rs:16:14
   |
16 | use chrono::{DateTime, Utc};
   |              ^^^^^^^^  ^^^

warning: unused import: `async_trait::async_trait`
  --> src/response-generator/src/mongodb_integration.rs:18:5
   |
18 | use async_trait::async_trait;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `error`
  --> src/response-generator/src/mongodb_integration.rs:19:27
   |
19 | use tracing::{info, warn, error, debug, instrument};
   |                           ^^^^^

warning: unused variable: `context`
   --> src/response-generator/src/lib.rs:282:13
    |
282 |         let context = ProcessingContext::new(&request);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `builder`
   --> src/response-generator/src/lib.rs:285:17
    |
285 |         let mut builder = ResponseBuilder::new(request.clone());
    |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_builder`

warning: variable does not need to be mutable
   --> src/response-generator/src/lib.rs:285:13
    |
285 |         let mut builder = ResponseBuilder::new(request.clone());
    |             ----^^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> src/response-generator/src/pipeline.rs:359:13
    |
359 |         let mut current_builder = builder;
    |             ----^^^^^^^^^^^^^^^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> src/response-generator/src/cache.rs:259:23
    |
259 |             if let Ok(mut cache) = self.fact_cache.lock() {
    |                       ----^^^^^
    |                       |
    |                       help: remove this `mut`

warning: unused variable: `ttl`
   --> src/response-generator/src/cache.rs:327:65
    |
327 |     pub async fn set(&self, key: &str, data: serde_json::Value, ttl: Option<Duration>) -> Result<()> {
    |                                                                 ^^^ help: if this is intentional, prefix it with an underscore: `_ttl`

warning: unused variable: `context_key`
   --> src/response-generator/src/cache.rs:362:21
    |
362 |                 let context_key = format!("context:{}", blake3::hash(format!("{:?}", request.context).as_bytes()).to_hex());
    |                     ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context_key`

warning: unused variable: `context_data`
   --> src/response-generator/src/cache.rs:363:21
    |
363 |                 let context_data = serde_json::json!({
    |                     ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context_data`

warning: unused variable: `i`
    --> src/response-generator/src/citation.rs:1456:14
     |
1456 |         for (i, sentence) in sentences.iter().enumerate() {
     |              ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: variable does not need to be mutable
    --> src/response-generator/src/citation.rs:1451:13
     |
1451 |         let mut recommended_citations = Vec::new();
     |             ----^^^^^^^^^^^^^^^^^^^^^
     |             |
     |             help: remove this `mut`

warning: unused variable: `l1_ttl`
   --> src/response-generator/src/fact_cache_optimized.rs:703:13
    |
703 |         let l1_ttl = Duration::from_millis(config.l1_ttl_ms);
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_l1_ttl`

warning: unused variable: `misses`
   --> src/response-generator/src/fact_cache_optimized.rs:752:13
    |
752 |         let misses = self.metrics.misses.load(Ordering::Relaxed);
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_misses`

warning: unused variable: `mongo_performance`
   --> src/response-generator/src/mongodb_integration.rs:619:9
    |
619 |         mongo_performance: &QueryPerformanceMetrics,
    |         ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_mongo_performance`

warning: unused variable: `context`
   --> src/response-generator/src/pipeline.rs:102:9
    |
102 |         context: &ProcessingContext,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
   --> src/response-generator/src/pipeline.rs:119:44
    |
119 |     async fn validate_preconditions(&self, context: &ProcessingContext) -> Result<()> {
    |                                            ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
   --> src/response-generator/src/pipeline.rs:124:29
    |
124 |     async fn cleanup(&self, context: &ProcessingContext) -> Result<()> {
    |                             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
   --> src/response-generator/src/pipeline.rs:512:9
    |
512 |         context: &ProcessingContext,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
   --> src/response-generator/src/pipeline.rs:554:9
    |
554 |         context: &ProcessingContext,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
   --> src/response-generator/src/pipeline.rs:567:9
    |
567 |         context: &ProcessingContext,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
   --> src/response-generator/src/pipeline.rs:621:9
    |
621 |         context: &ProcessingContext,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
   --> src/response-generator/src/pipeline.rs:663:9
    |
663 |         context: &ProcessingContext,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `request`
   --> src/response-generator/src/validator.rs:477:9
    |
477 |         request: &GenerationRequest,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_request`

warning: unused variable: `request`
   --> src/response-generator/src/validator.rs:569:9
    |
569 |         request: &GenerationRequest,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_request`

warning: unused variable: `request`
   --> src/response-generator/src/validator.rs:655:9
    |
655 |         request: &GenerationRequest,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_request`

warning: unused variable: `request`
   --> src/response-generator/src/validator.rs:849:9
    |
849 |         request: &GenerationRequest,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_request`

warning: unused variable: `request`
    --> src/response-generator/src/validator.rs:1001:9
     |
1001 |         request: &GenerationRequest,
     |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_request`

warning: field `citation_tracker` is never read
  --> src/response-generator/src/lib.rs:93:5
   |
88 | pub struct ResponseGenerator {
   |            ----------------- field in this struct
...
93 |     citation_tracker: CitationTracker,
   |     ^^^^^^^^^^^^^^^^
   |
   = note: `ResponseGenerator` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: field `content` is never read
   --> src/response-generator/src/lib.rs:556:5
    |
553 | struct TextSegment {
    |        ----------- field in this struct
...
556 |     content: String,
    |     ^^^^^^^
    |
    = note: `TextSegment` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `relevance_score` is never read
  --> src/response-generator/src/builder.rs:49:5
   |
47 | struct RankedContext {
   |        ------------- field in this struct
48 |     chunk: ContextChunk,
49 |     relevance_score: f64,
   |     ^^^^^^^^^^^^^^^
   |
   = note: `RankedContext` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `confidence` is never read
  --> src/response-generator/src/builder.rs:67:5
   |
56 | struct ContentSection {
   |        -------------- field in this struct
...
67 |     confidence: f64,
   |     ^^^^^^^^^^
   |
   = note: `ContentSection` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `query_type` and `expected_sections` are never read
   --> src/response-generator/src/builder.rs:794:5
    |
793 | struct QueryAnalysis {
    |        ------------- fields in this struct
794 |     query_type: QueryType,
    |     ^^^^^^^^^^
...
797 |     expected_sections: Vec<SectionType>,
    |     ^^^^^^^^^^^^^^^^^
    |
    = note: `QueryAnalysis` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `context_mgr` is never read
  --> src/response-generator/src/cache.rs:24:5
   |
19 | pub struct FACTCacheManager {
   |            ---------------- field in this struct
...
24 |     context_mgr: Arc<SimpleContextManager>,
   |     ^^^^^^^^^^^
   |
   = note: `FACTCacheManager` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `config` is never read
    --> src/response-generator/src/citation.rs:1204:5
     |
1203 | pub struct CitationQualityAssurance {
     |            ------------------------ field in this struct
1204 |     config: CitationConfig,
     |     ^^^^^^
     |
     = note: `CitationQualityAssurance` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `evidence_patterns` is never read
    --> src/response-generator/src/citation.rs:1213:5
     |
1210 | pub struct CitationCoverageAnalyzer {
     |            ------------------------ field in this struct
...
1213 |     evidence_patterns: Vec<String>,
     |     ^^^^^^^^^^^^^^^^^
     |
     = note: `CitationCoverageAnalyzer` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: function `serialize` is never used
   --> src/response-generator/src/config.rs:585:12
    |
585 |     pub fn serialize<S>(duration: &Duration, serializer: S) -> Result<S::Ok, S::Error>
    |            ^^^^^^^^^

warning: function `deserialize` is never used
   --> src/response-generator/src/config.rs:592:12
    |
592 |     pub fn deserialize<'de, D>(deserializer: D) -> Result<Duration, D::Error>
    |            ^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
  --> src/storage/src/lib.rs:13:5
   |
13 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `AggregateOptions`, `Bson`, `CreateIndexOptions`, `DeleteResult`, `Document`, `FindOptions`, `InsertManyResult`, `UpdateResult`, `from_document`, and `to_document`
  --> src/storage/src/lib.rs:20:30
   |
20 |     options::{ClientOptions, CreateIndexOptions, IndexOptions, AggregateOptions, FindOptions},
   |                              ^^^^^^^^^^^^^^^^^^                ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^
21 |     bson::{doc, Document, Bson, from_document, to_document},
   |                 ^^^^^^^^  ^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^^^
22 |     IndexModel,
23 |     results::{InsertManyResult, UpdateResult, DeleteResult},
   |               ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `futures::stream::TryStreamExt`
  --> src/storage/src/lib.rs:25:5
   |
25 | use futures::stream::TryStreamExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `DateTime` and `Utc`
  --> src/storage/src/lib.rs:28:14
   |
28 | use chrono::{DateTime, Utc};
   |              ^^^^^^^^  ^^^

warning: unused import: `async_trait::async_trait`
  --> src/storage/src/lib.rs:30:5
   |
30 | use async_trait::async_trait;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `debug`
  --> src/storage/src/lib.rs:31:34
   |
31 | use tracing::{info, warn, error, debug, instrument};
   |                                  ^^^^^

warning: unused imports: `Collection`, `DeleteOptions`, `DeleteResult`, `InsertManyResult`, `ReadPreference`, `UpdateResult`, and `from_document`
  --> src/storage/src/operations.rs:10:40
   |
10 |     bson::{doc, Document, to_document, from_document},
   |                                        ^^^^^^^^^^^^^
11 |     options::{
12 |         FindOptions, UpdateOptions, DeleteOptions, InsertManyOptions,
   |                                     ^^^^^^^^^^^^^
13 |         ReadPreference, WriteConcern, ReadConcern, TransactionOptions,
   |         ^^^^^^^^^^^^^^
14 |     },
15 |     results::{InsertManyResult, UpdateResult, DeleteResult},
   |               ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^^
16 |     ClientSession, Collection,
   |                    ^^^^^^^^^^

warning: unused imports: `Deserialize` and `Serialize`
  --> src/storage/src/operations.rs:19:13
   |
19 | use serde::{Deserialize, Serialize};
   |             ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `anyhow`
  --> src/storage/src/operations.rs:22:31
   |
22 | use anyhow::{Result, Context, anyhow};
   |                               ^^^^^^

warning: unused import: `MetadataDocument`
  --> src/storage/src/operations.rs:26:43
   |
26 | use crate::{VectorStorage, ChunkDocument, MetadataDocument, BulkInsertRequest, BulkInsertResponse, BulkInsertError};
   |                                           ^^^^^^^^^^^^^^^^

warning: unused import: `Duration`
 --> src/storage/src/search.rs:9:17
  |
9 | use std::time::{Duration, Instant};
  |                 ^^^^^^^^

warning: unused imports: `Bson`, `Cursor`, and `FindOptions`
  --> src/storage/src/search.rs:13:27
   |
13 |     bson::{doc, Document, Bson},
   |                           ^^^^
14 |     options::{AggregateOptions, FindOptions},
   |                                 ^^^^^^^^^^^
15 |     Cursor,
   |     ^^^^^^

warning: unused import: `TryStreamExt`
  --> src/storage/src/search.rs:17:34
   |
17 | use futures::stream::{StreamExt, TryStreamExt};
   |                                  ^^^^^^^^^^^^

warning: unused imports: `debug`, `error`, and `warn`
  --> src/storage/src/search.rs:23:21
   |
23 | use tracing::{info, warn, error, debug, instrument};
   |                     ^^^^  ^^^^^  ^^^^^

warning: unused imports: `Array1` and `Array2`
  --> src/storage/src/search.rs:24:15
   |
24 | use ndarray::{Array1, Array2};
   |               ^^^^^^  ^^^^^^

warning: unused import: `ChunkMetadata`
  --> src/storage/src/search.rs:26:43
   |
26 | use crate::{VectorStorage, ChunkDocument, ChunkMetadata};
   |                                           ^^^^^^^^^^^^^

warning: unused import: `Arc`
 --> src/storage/src/metrics.rs:3:17
  |
3 | use std::sync::{Arc, RwLock};
  |                 ^^^

warning: unused imports: `AggregateOptions`, `Bson`, `Client as MongoClient`, `ClientOptions`, `CreateIndexOptions`, `DeleteResult`, `FindOptions`, `ReadConcern`, `ReadPreference`, and `WriteConcern`
  --> src/storage/src/mongodb_optimizer.rs:22:5
   |
22 |     Client as MongoClient,
   |     ^^^^^^^^^^^^^^^^^^^^^
...
25 |     bson::{doc, Document, Bson},
   |                           ^^^^
26 |     options::{
27 |         ClientOptions, IndexOptions, CreateIndexOptions, FindOptions, AggregateOptions,
   |         ^^^^^^^^^^^^^                ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^
28 |         ReadPreference, WriteConcern, ReadConcern,
   |         ^^^^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^
...
31 |     results::{CreateIndexResult, DeleteResult},
   |                                  ^^^^^^^^^^^^

warning: unused import: `futures::stream::TryStreamExt`
  --> src/storage/src/mongodb_optimizer.rs:33:5
   |
33 | use futures::stream::TryStreamExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `uuid::Uuid`
  --> src/storage/src/mongodb_optimizer.rs:35:5
   |
35 | use uuid::Uuid;
   |     ^^^^^^^^^^

warning: unused import: `anyhow`
  --> src/storage/src/mongodb_optimizer.rs:37:31
   |
37 | use anyhow::{Result, Context, anyhow};
   |                               ^^^^^^

warning: unused imports: `debug` and `error`
  --> src/storage/src/mongodb_optimizer.rs:39:27
   |
39 | use tracing::{info, warn, error, debug, instrument};
   |                           ^^^^^  ^^^^^

warning: unused imports: `ChunkDocument`, `SearchFilters`, and `StorageConfig`
  --> src/storage/src/mongodb_optimizer.rs:41:28
   |
41 | use crate::{VectorStorage, ChunkDocument, SearchQuery, SearchFilters, StorageConfig};
   |                            ^^^^^^^^^^^^^               ^^^^^^^^^^^^^  ^^^^^^^^^^^^^

warning: ambiguous glob re-exports
  --> src/storage/src/lib.rs:45:9
   |
45 | pub use config::*;
   |         ^^^^^^^^^ the name `MonitoringConfig` in the type namespace is first re-exported here
46 | pub use metrics::*;
47 | pub use mongodb_optimizer::*;
   |         -------------------- but the name `MonitoringConfig` in the type namespace is also re-exported here
   |
   = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: constant `OPERATION_TIMEOUT` is never used
  --> src/storage/src/lib.rs:53:7
   |
53 | const OPERATION_TIMEOUT: Duration = Duration::from_secs(30);
   |       ^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: fields `metadata_collection` and `config` are never read
  --> src/storage/src/lib.rs:61:5
   |
57 | pub struct VectorStorage {
   |            ------------- fields in this struct
...
61 |     metadata_collection: Collection<MetadataDocument>,
   |     ^^^^^^^^^^^^^^^^^^^
...
64 |     config: StorageConfig,
   |     ^^^^^^
   |
   = note: `VectorStorage` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `metrics` is never read
   --> src/storage/src/mongodb_optimizer.rs:140:5
    |
137 | pub struct MongoDBOptimizer {
    |            ---------------- field in this struct
...
140 |     metrics: Arc<StorageMetrics>,
    |     ^^^^^^^

warning: `response-generator` (lib) generated 48 warnings (run `cargo fix --lib -p response-generator` to apply 16 suggestions)
warning: `storage` (lib) generated 27 warnings (run `cargo fix --lib -p storage` to apply 23 suggestions)
   Compiling query-processor v0.1.0 (/Users/dmf/repos/doc-rag/src/query-processor)
warning: unused imports: `debug` and `error`
  --> src/integration/src/byzantine_consensus.rs:12:27
   |
12 | use tracing::{info, warn, error, debug};
   |                           ^^^^^  ^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: value assigned to `rounds` is never read
   --> src/integration/src/byzantine_consensus.rs:195:17
    |
195 |         let mut rounds = 0;
    |                 ^^^^^^
    |
    = help: maybe it is overwritten before being read?
    = note: `#[warn(unused_assignments)]` on by default

warning: field `byzantine_consensus` is never read
   --> src/integration/src/lib.rs:156:5
    |
148 | pub struct SystemIntegration {
    |            ----------------- field in this struct
...
156 |     byzantine_consensus: Arc<ByzantineConsensusValidator>,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = note: `SystemIntegration` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis
    = note: `#[warn(dead_code)]` on by default

warning: field `daa_orchestrator` is never read
   --> src/integration/src/pipeline.rs:500:5
    |
497 | struct QueryProcessingStage {
    |        -------------------- field in this struct
...
500 |     daa_orchestrator: Arc<RwLock<DAAOrchestrator>>,
    |     ^^^^^^^^^^^^^^^^

warning: field `daa_orchestrator` is never read
   --> src/integration/src/pipeline.rs:563:5
    |
560 | struct ChunkingStage {
    |        ------------- field in this struct
...
563 |     daa_orchestrator: Arc<RwLock<DAAOrchestrator>>,
    |     ^^^^^^^^^^^^^^^^

warning: field `daa_orchestrator` is never read
   --> src/integration/src/pipeline.rs:627:13
    |
627 |             daa_orchestrator: Arc<RwLock<DAAOrchestrator>>,
    |             ^^^^^^^^^^^^^^^^
...
712 | impl_stage!(EmbeddingStage, "embedding", 20, 20);
    | ------------------------------------------------
    | |           |
    | |           field in this struct
    | in this macro invocation
    |
    = note: this warning originates in the macro `impl_stage` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: field `daa_orchestrator` is never read
   --> src/integration/src/pipeline.rs:627:13
    |
627 |             daa_orchestrator: Arc<RwLock<DAAOrchestrator>>,
    |             ^^^^^^^^^^^^^^^^
...
713 | impl_stage!(VectorSearchStage, "vector-search", 15, 40);
    | -------------------------------------------------------
    | |           |
    | |           field in this struct
    | in this macro invocation
    |
    = note: this warning originates in the macro `impl_stage` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: field `daa_orchestrator` is never read
   --> src/integration/src/pipeline.rs:627:13
    |
627 |             daa_orchestrator: Arc<RwLock<DAAOrchestrator>>,
    |             ^^^^^^^^^^^^^^^^
...
714 | impl_stage!(ResponseGenerationStage, "response-generation", 25, 25);
    | -------------------------------------------------------------------
    | |           |
    | |           field in this struct
    | in this macro invocation
    |
    = note: this warning originates in the macro `impl_stage` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: field `daa_orchestrator` is never read
   --> src/integration/src/pipeline.rs:627:13
    |
627 |             daa_orchestrator: Arc<RwLock<DAAOrchestrator>>,
    |             ^^^^^^^^^^^^^^^^
...
715 | impl_stage!(CitationValidationStage, "citation-validation", 10, 50);
    | -------------------------------------------------------------------
    | |           |
    | |           field in this struct
    | in this macro invocation
    |
    = note: this warning originates in the macro `impl_stage` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: field `limit` is never read
   --> src/integration/src/gateway.rs:102:5
    |
98  | struct RateLimitState {
    |        -------------- field in this struct
...
102 |     limit: u32,
    |     ^^^^^
    |
    = note: `RateLimitState` has derived impls for the traits `Default`, `Clone`, and `Debug`, but these are intentionally ignored during dead code analysis

warning: method `update_metrics` is never used
   --> src/integration/src/gateway.rs:295:14
    |
155 | impl ApiGateway {
    | --------------- method in this implementation
...
295 |     async fn update_metrics(&self, endpoint: &str, success: bool, duration: Duration) {
    |              ^^^^^^^^^^^^^^

warning: function `auth_middleware` is never used
   --> src/integration/src/gateway.rs:589:10
    |
589 | async fn auth_middleware(
    |          ^^^^^^^^^^^^^^^

warning: function `rate_limit_middleware` is never used
   --> src/integration/src/gateway.rs:615:10
    |
615 | async fn rate_limit_middleware(
    |          ^^^^^^^^^^^^^^^^^^^^^

warning: function `request_context_middleware` is never used
   --> src/integration/src/gateway.rs:657:10
    |
657 | async fn request_context_middleware(
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `metrics_middleware` is never used
   --> src/integration/src/gateway.rs:687:10
    |
687 | async fn metrics_middleware(
    |          ^^^^^^^^^^^^^^^^^^

warning: struct `MemInfo` is never constructed
   --> src/integration/src/metrics.rs:632:16
    |
632 |     pub struct MemInfo {
    |                ^^^^^^^

warning: struct `LoadAvg` is never constructed
   --> src/integration/src/metrics.rs:637:16
    |
637 |     pub struct LoadAvg {
    |                ^^^^^^^

warning: function `mem_info` is never used
   --> src/integration/src/metrics.rs:643:12
    |
643 |     pub fn mem_info() -> Result<MemInfo, &'static str> {
    |            ^^^^^^^^

warning: function `loadavg` is never used
   --> src/integration/src/metrics.rs:648:12
    |
648 |     pub fn loadavg() -> Result<LoadAvg, &'static str> {
    |            ^^^^^^^

warning: function `cpu_num` is never used
   --> src/integration/src/metrics.rs:653:12
    |
653 |     pub fn cpu_num() -> Result<u32, &'static str> {
    |            ^^^^^^^

warning: fields `receiver` and `subscribers` are never read
   --> src/integration/src/message_bus.rs:263:5
    |
257 | struct TopicQueue {
    |        ---------- fields in this struct
...
263 |     receiver: Arc<RwLock<Option<mpsc::UnboundedReceiver<Message>>>>,
    |     ^^^^^^^^
...
267 |     subscribers: Vec<String>,
    |     ^^^^^^^^^^^

warning: fields `query`, `cached_response`, and `system_health` are never read
   --> src/integration/src/mrap.rs:318:5
    |
317 | struct MonitoringResult {
    |        ---------------- fields in this struct
318 |     query: String,
    |     ^^^^^
319 |     cache_hit: bool,
320 |     cached_response: Option<fact::CachedResponse>,
    |     ^^^^^^^^^^^^^^^
321 |     system_health: SystemHealth,
    |     ^^^^^^^^^^^^^
    |
    = note: `MonitoringResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `intent` is never read
   --> src/integration/src/mrap.rs:326:5
    |
325 | struct ReasoningResult {
    |        --------------- field in this struct
326 |     intent: String,
    |     ^^^^^^
    |
    = note: `ReasoningResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `processing_time_ms` is never read
   --> src/integration/src/mrap.rs:335:5
    |
332 | struct ActionResult {
    |        ------------ field in this struct
...
335 |     processing_time_ms: u64,
    |     ^^^^^^^^^^^^^^^^^^
    |
    = note: `ActionResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `validation_time_ms` is never read
   --> src/integration/src/mrap.rs:342:5
    |
339 | struct ReflectionResult {
    |        ---------------- field in this struct
...
342 |     validation_time_ms: u64,
    |     ^^^^^^^^^^^^^^^^^^
    |
    = note: `ReflectionResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `system_improved` is never read
   --> src/integration/src/mrap.rs:348:5
    |
346 | struct AdaptationResult {
    |        ---------------- field in this struct
347 |     adaptations_count: usize,
348 |     system_improved: bool,
    |     ^^^^^^^^^^^^^^^
    |
    = note: `AdaptationResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: missing documentation for a type alias
  --> src/integration/src/lib.rs:42:1
   |
42 | pub type Result<T> = std::result::Result<T, IntegrationError>;
   | ^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> src/integration/src/lib.rs:32:9
   |
32 | #![warn(missing_docs)]
   |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/daa_orchestrator.rs:64:5
   |
64 |     pub id: Uuid,
   |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/daa_orchestrator.rs:65:5
   |
65 |     pub name: String,
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/daa_orchestrator.rs:66:5
   |
66 |     pub component_type: ComponentType,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/daa_orchestrator.rs:67:5
   |
67 |     pub endpoint: String,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/daa_orchestrator.rs:68:5
   |
68 |     pub health_status: ComponentHealthStatus,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/daa_orchestrator.rs:69:5
   |
69 |     pub last_health_check: Option<chrono::DateTime<chrono::Utc>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/daa_orchestrator.rs:75:5
   |
75 |     McpAdapter,
   |     ^^^^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/daa_orchestrator.rs:76:5
   |
76 |     Chunker,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/daa_orchestrator.rs:77:5
   |
77 |     Embedder,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/daa_orchestrator.rs:78:5
   |
78 |     Storage,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/daa_orchestrator.rs:79:5
   |
79 |     QueryProcessor,
   |     ^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/daa_orchestrator.rs:80:5
   |
80 |     ResponseGenerator,
   |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/daa_orchestrator.rs:86:5
   |
86 |     Healthy,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/daa_orchestrator.rs:87:5
   |
87 |     Degraded,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/daa_orchestrator.rs:88:5
   |
88 |     Unhealthy,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/daa_orchestrator.rs:89:5
   |
89 |     Unknown,
   |     ^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/daa_orchestrator.rs:95:5
   |
95 |     pub components_registered: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/daa_orchestrator.rs:96:5
   |
96 |     pub coordination_events: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/daa_orchestrator.rs:97:5
   |
97 |     pub consensus_operations: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/daa_orchestrator.rs:98:5
   |
98 |     pub fault_recoveries: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/daa_orchestrator.rs:99:5
   |
99 |     pub adaptive_adjustments: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:101:5
    |
101 |     pub mrap_loops_completed: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:102:5
    |
102 |     pub monitoring_cycles: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:103:5
    |
103 |     pub reasoning_decisions: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:104:5
    |
104 |     pub actions_executed: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:105:5
    |
105 |     pub reflections_performed: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:106:5
    |
106 |     pub adaptations_made: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:107:5
    |
107 |     pub average_loop_time_ms: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:108:5
    |
108 |     pub successful_recoveries: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:109:5
    |
109 |     pub failed_recoveries: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:115:5
    |
115 |     Optimal,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:116:5
    |
116 |     Degraded,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:117:5
    |
117 |     Critical,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:118:5
    |
118 |     Failed,
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:124:5
    |
124 |     Low,
    |     ^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:125:5
    |
125 |     Medium, 
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:126:5
    |
126 |     High,
    |     ^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:127:5
    |
127 |     Critical,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:133:5
    |
133 |     Restart,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:134:5
    |
134 |     Scale,
    |     ^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:135:5
    |
135 |     Reconfigure,
    |     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:136:5
    |
136 |     Isolate,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:137:5
    |
137 |     Failover,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:138:5
    |
138 |     HealthCheck,
    |     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:139:5
    |
139 |     OptimizePerformance,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:140:5
    |
140 |     UpdateStrategy,
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:146:5
    |
146 |     pub action_id: Uuid,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:147:5
    |
147 |     pub action_type: ActionType,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:148:5
    |
148 |     pub target: String,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:149:5
    |
149 |     pub success: bool,
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:150:5
    |
150 |     pub execution_time: Duration,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:151:5
    |
151 |     pub details: String,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:152:5
    |
152 |     pub metrics_before: SystemMetrics,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:153:5
    |
153 |     pub metrics_after: Option<SystemMetrics>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:159:5
    |
159 |     pub timestamp: u64,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:160:5
    |
160 |     pub cpu_usage: f64,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:161:5
    |
161 |     pub memory_usage: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:162:5
    |
162 |     pub response_time_ms: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:163:5
    |
163 |     pub error_rate: f64,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:164:5
    |
164 |     pub throughput: f64,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:165:5
    |
165 |     pub component_health_scores: HashMap<String, f64>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:171:5
    |
171 |     pub loop_id: Uuid,
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:173:5
    |
173 |     pub start_time: Instant,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:174:5
    |
174 |     pub current_phase: MRAPPhase,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:175:5
    |
175 |     pub system_state: SystemHealthState,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:176:5
    |
176 |     pub identified_issues: Vec<SystemIssue>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:177:5
    |
177 |     pub planned_actions: Vec<PlannedAction>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:178:5
    |
178 |     pub executed_actions: Vec<ActionResult>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:179:5
    |
179 |     pub adaptations: Vec<AdaptationStrategy>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:180:5
    |
180 |     pub performance_delta: Option<f64>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:186:5
    |
186 |     Monitor,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:187:5
    |
187 |     Reason,
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:188:5
    |
188 |     Act,
    |     ^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:189:5
    |
189 |     Reflect,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/daa_orchestrator.rs:190:5
    |
190 |     Adapt,
    |     ^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:196:5
    |
196 |     pub id: Uuid,
    |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:197:5
    |
197 |     pub component: String,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:198:5
    |
198 |     pub issue_type: String,
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:199:5
    |
199 |     pub severity: IssueSeverity,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:200:5
    |
200 |     pub description: String,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:201:5
    |
201 |     pub metrics: SystemMetrics,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:203:5
    |
203 |     pub detected_at: Instant,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:209:5
    |
209 |     pub id: Uuid,
    |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:210:5
    |
210 |     pub action_type: ActionType,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:211:5
    |
211 |     pub target: String,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:212:5
    |
212 |     pub parameters: HashMap<String, Value>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:213:5
    |
213 |     pub expected_outcome: String,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:214:5
    |
214 |     pub priority: u8,
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:215:5
    |
215 |     pub timeout: Duration,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:221:5
    |
221 |     pub id: Uuid,
    |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:222:5
    |
222 |     pub strategy_type: String,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:223:5
    |
223 |     pub target_component: Option<String>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:224:5
    |
224 |     pub parameters: HashMap<String, Value>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:225:5
    |
225 |     pub expected_improvement: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/daa_orchestrator.rs:227:5
    |
227 |     pub implementation_time: Instant,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:22:5
   |
22 |     pub threshold: f64,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:23:5
   |
23 |     pub timeout_ms: u64,
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:24:5
   |
24 |     pub max_rounds: u32,
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:25:5
   |
25 |     pub min_nodes: usize,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:41:5
   |
41 |     pub id: Uuid,
   |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:42:5
   |
42 |     pub name: String,
   |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:43:5
   |
43 |     pub weight: f64,
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:44:5
   |
44 |     pub is_healthy: bool,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:45:5
   |
45 |     pub last_vote: Option<Vote>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:51:5
   |
51 |     pub node_id: Uuid,
   |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:52:5
   |
52 |     pub proposal_id: Uuid,
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:53:5
   |
53 |     pub value: bool,
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:54:5
   |
54 |     pub confidence: f64,
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:55:5
   |
55 |     pub timestamp: u64,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:61:5
   |
61 |     pub id: Uuid,
   |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:62:5
   |
62 |     pub content: String,
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:63:5
   |
63 |     pub proposer: Uuid,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:64:5
   |
64 |     pub timestamp: u64,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:65:5
   |
65 |     pub required_threshold: f64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:71:5
   |
71 |     pub proposal_id: Uuid,
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:72:5
   |
72 |     pub accepted: bool,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:73:5
   |
73 |     pub vote_percentage: f64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:74:5
   |
74 |     pub participating_nodes: usize,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:75:5
   |
75 |     pub total_nodes: usize,
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:76:5
   |
76 |     pub rounds: u32,
   |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:82:5
   |
82 |     pub total_proposals: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:83:5
   |
83 |     pub accepted_proposals: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:84:5
   |
84 |     pub rejected_proposals: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:85:5
   |
85 |     pub byzantine_faults_detected: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:86:5
   |
86 |     pub average_consensus_time_ms: f64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:87:5
   |
87 |     pub successful_validations: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/byzantine_consensus.rs:88:5
   |
88 |     pub failed_validations: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/pipeline.rs:80:5
   |
80 |     Healthy,
   |     ^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/pipeline.rs:81:5
   |
81 |     Degraded,
   |     ^^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/pipeline.rs:82:5
   |
82 |     Unhealthy,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/pipeline.rs:83:5
   |
83 |     Disabled,
   |     ^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/health.rs:56:9
   |
56 |         component: String,
   |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/health.rs:57:9
   |
57 |         previous_status: ComponentHealthStatus,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/health.rs:61:9
   |
61 |         component: String,
   |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/health.rs:62:9
   |
62 |         error: String,
   |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/health.rs:63:9
   |
63 |         consecutive_failures: usize,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/health.rs:67:9
   |
67 |         component: String,
   |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/health.rs:68:9
   |
68 |         downtime: Duration,
   |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/health.rs:72:9
   |
72 |         old_status: HealthStatus,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/health.rs:73:9
   |
73 |         new_status: HealthStatus,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/health.rs:74:9
   |
74 |         affected_components: Vec<String>,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/health.rs:78:9
   |
78 |         component: String,
   |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/health.rs:79:9
   |
79 |         metric: String,
   |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/health.rs:80:9
   |
80 |         threshold: f64,
   |         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/health.rs:81:9
   |
81 |         current: f64,
   |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/error.rs:19:9
   |
19 |         stage: String,
   |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/error.rs:20:9
   |
20 |         error: String,
   |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/error.rs:26:9
   |
26 |         stage: String,
   |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/error.rs:27:9
   |
27 |         timeout: Duration,
   |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/error.rs:105:9
    |
105 |         dependency: String,
    |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/error.rs:106:9
    |
106 |         error: String,
    |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/error.rs:127:28
    |
127 |     InitializationFailed { reason: String },
    |                            ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/error.rs:131:24
    |
131 |     AgentSpawnFailed { reason: String },
    |                        ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/error.rs:140:9
    |
140 |         resource: String,
    |         ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/error.rs:141:9
    |
141 |         details: String,
    |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/error.rs:352:9
    |
352 |         max_retries: usize,
    |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/error.rs:353:9
    |
353 |         base_delay_ms: u64,
    |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/error.rs:354:9
    |
354 |         max_delay_ms: u64,
    |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/error.rs:358:9
    |
358 |         max_retries: usize,
    |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/error.rs:359:9
    |
359 |         delay_ms: u64,
    |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/error.rs:365:9
    |
365 |         failure_threshold: usize,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/error.rs:366:9
    |
366 |         timeout_ms: u64,
    |         ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/error.rs:367:9
    |
367 |         half_open_max_calls: usize,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/config.rs:582:5
    |
582 |     FileError { path: String, error: String },
    |     ^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/config.rs:582:17
    |
582 |     FileError { path: String, error: String },
    |                 ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/config.rs:582:31
    |
582 |     FileError { path: String, error: String },
    |                               ^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/config.rs:585:5
    |
585 |     ParseError { format: String, error: String },
    |     ^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/config.rs:585:18
    |
585 |     ParseError { format: String, error: String },
    |                  ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/config.rs:585:34
    |
585 |     ParseError { format: String, error: String },
    |                                  ^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/config.rs:588:5
    |
588 |     UnsupportedFormat(String),
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/config.rs:591:5
    |
591 |     InvalidValue { key: String, value: String, error: String },
    |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/config.rs:591:20
    |
591 |     InvalidValue { key: String, value: String, error: String },
    |                    ^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/config.rs:591:33
    |
591 |     InvalidValue { key: String, value: String, error: String },
    |                                 ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/config.rs:591:48
    |
591 |     InvalidValue { key: String, value: String, error: String },
    |                                                ^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/config.rs:594:5
    |
594 |     ValidationError { field: String, message: String },
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/config.rs:594:23
    |
594 |     ValidationError { field: String, message: String },
    |                       ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/integration/src/config.rs:594:38
    |
594 |     ValidationError { field: String, message: String },
    |                                      ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/config.rs:597:5
    |
597 |     MissingRequired(String),
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/config.rs:600:5
    |
600 |     EnvironmentError(String),
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/metrics.rs:220:5
    |
220 |     Increasing,
    |     ^^^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/metrics.rs:221:5
    |
221 |     Decreasing,
    |     ^^^^^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/metrics.rs:222:5
    |
222 |     Stable,
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/integration/src/metrics.rs:223:5
    |
223 |     Unknown,
    |     ^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/message_bus.rs:19:5
   |
19 |     Low = 1,
   |     ^^^

warning: missing documentation for a variant
  --> src/integration/src/message_bus.rs:20:5
   |
20 |     Normal = 2,
   |     ^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/message_bus.rs:21:5
   |
21 |     High = 3,
   |     ^^^^

warning: missing documentation for a variant
  --> src/integration/src/message_bus.rs:22:5
   |
22 |     Critical = 4,
   |     ^^^^^^^^

warning: missing documentation for a struct
  --> src/integration/src/temp_types.rs:10:1
   |
10 | pub struct QueryRequest {
   | ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:11:5
   |
11 |     pub id: Uuid,
   |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:12:5
   |
12 |     pub query: String,
   |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:13:5
   |
13 |     pub filters: Option<HashMap<String, String>>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:14:5
   |
14 |     pub format: Option<ResponseFormat>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:15:5
   |
15 |     pub timeout_ms: Option<u64>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> src/integration/src/temp_types.rs:19:1
   |
19 | pub struct QueryResponse {
   | ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:20:5
   |
20 |     pub request_id: Uuid,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:21:5
   |
21 |     pub response: String,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:22:5
   |
22 |     pub confidence: f64,
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:23:5
   |
23 |     pub citations: Vec<Citation>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:24:5
   |
24 |     pub processing_time_ms: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:25:5
   |
25 |     pub component_times: HashMap<String, u64>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:26:5
   |
26 |     pub format: ResponseFormat,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> src/integration/src/temp_types.rs:30:1
   |
30 | pub struct Citation {
   | ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:31:5
   |
31 |     pub id: Uuid,
   |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:32:5
   |
32 |     pub source: String,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:33:5
   |
33 |     pub reference: String,
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:34:5
   |
34 |     pub relevance: f64,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/temp_types.rs:35:5
   |
35 |     pub excerpt: String,
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an enum
  --> src/integration/src/temp_types.rs:39:1
   |
39 | pub enum ResponseFormat {
   | ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/temp_types.rs:40:5
   |
40 |     Json,
   |     ^^^^

warning: missing documentation for a variant
  --> src/integration/src/temp_types.rs:41:5
   |
41 |     Text,
   |     ^^^^

warning: missing documentation for a variant
  --> src/integration/src/temp_types.rs:42:5
   |
42 |     Markdown,
   |     ^^^^^^^^

warning: missing documentation for a struct
  --> src/integration/src/temp_types.rs:52:1
   |
52 | pub struct McpAdapterClient;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> src/integration/src/temp_types.rs:53:1
   |
53 | pub struct ChunkerClient;
   | ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> src/integration/src/temp_types.rs:54:1
   |
54 | pub struct EmbedderClient;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> src/integration/src/temp_types.rs:55:1
   |
55 | pub struct StorageClient;
   | ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> src/integration/src/temp_types.rs:56:1
   |
56 | pub struct QueryProcessorClient;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
  --> src/integration/src/temp_types.rs:57:1
   |
57 | pub struct ResponseGeneratorClient;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> src/integration/src/temp_types.rs:60:5
   |
60 |     pub fn new(_endpoint: &str) -> Self { Self }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> src/integration/src/temp_types.rs:61:5
   |
61 |     pub async fn health_check(&self) -> bool { true }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> src/integration/src/temp_types.rs:65:5
   |
65 |     pub fn new(_endpoint: &str) -> Self { Self }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> src/integration/src/temp_types.rs:66:5
   |
66 |     pub async fn health_check(&self) -> bool { true }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> src/integration/src/temp_types.rs:70:5
   |
70 |     pub fn new(_endpoint: &str) -> Self { Self }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> src/integration/src/temp_types.rs:71:5
   |
71 |     pub async fn health_check(&self) -> bool { true }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> src/integration/src/temp_types.rs:75:5
   |
75 |     pub fn new(_endpoint: &str) -> Self { Self }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> src/integration/src/temp_types.rs:76:5
   |
76 |     pub async fn health_check(&self) -> bool { true }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> src/integration/src/temp_types.rs:80:5
   |
80 |     pub fn new(_endpoint: &str) -> Self { Self }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> src/integration/src/temp_types.rs:81:5
   |
81 |     pub async fn health_check(&self) -> bool { true }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> src/integration/src/temp_types.rs:85:5
   |
85 |     pub fn new(_endpoint: &str) -> Self { Self }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
  --> src/integration/src/temp_types.rs:86:5
   |
86 |     pub async fn health_check(&self) -> bool { true }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/mrap.rs:32:5
   |
32 |     pub cpu_usage: f64,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/mrap.rs:33:5
   |
33 |     pub memory_usage: f64,
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/mrap.rs:34:5
   |
34 |     pub cache_hit_rate: f64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/mrap.rs:35:5
   |
35 |     pub response_time_ms: u64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/mrap.rs:36:5
   |
36 |     pub error_rate: f64,
   |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/mrap.rs:42:5
   |
42 |     pub query_id: String,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/mrap.rs:43:5
   |
43 |     pub query_text: String,
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/mrap.rs:44:5
   |
44 |     pub intent_confidence: f64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/mrap.rs:45:5
   |
45 |     pub processing_stage: ProcessingStage,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/mrap.rs:51:5
   |
51 |     Monitoring,
   |     ^^^^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/mrap.rs:52:5
   |
52 |     Reasoning,
   |     ^^^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/mrap.rs:53:5
   |
53 |     Acting,
   |     ^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/mrap.rs:54:5
   |
54 |     Reflecting,
   |     ^^^^^^^^^^

warning: missing documentation for a variant
  --> src/integration/src/mrap.rs:55:5
   |
55 |     Adapting,
   |     ^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/mrap.rs:61:5
   |
61 |     pub timestamp: u64,
   |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/mrap.rs:62:5
   |
62 |     pub improvement: String,
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/integration/src/mrap.rs:63:5
   |
63 |     pub impact_score: f64,
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: `integration` (lib) generated 273 warnings (run `cargo fix --lib -p integration` to apply 1 suggestion)
   Compiling integration v0.1.0 (/Users/dmf/repos/doc-rag/src/integration)
warning: unused import: `std::sync::Arc`
 --> src/integration/src/main.rs:6:5
  |
6 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `tracing_opentelemetry::OpenTelemetryLayer`
  --> src/integration/src/main.rs:73:17
   |
73 |             use tracing_opentelemetry::OpenTelemetryLayer;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `opentelemetry::trace::TracerProvider`
  --> src/integration/src/main.rs:74:17
   |
74 |             use opentelemetry::trace::TracerProvider;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `jaeger_endpoint`
  --> src/integration/src/main.rs:71:19
   |
71 |         if let Ok(jaeger_endpoint) = std::env::var("JAEGER_ENDPOINT") {
   |                   ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_jaeger_endpoint`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `integration` (bin "integration-server") generated 4 warnings (run `cargo fix --bin "integration-server"` to apply 3 suggestions)
warning: unused import: `tokio_test`
   --> src/storage/src/operations.rs:548:9
    |
548 |     use tokio_test;
    |         ^^^^^^^^^^

warning: unused import: `tokio_test`
   --> src/storage/src/lib.rs:338:9
    |
338 |     use tokio_test;
    |         ^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/storage/src/config.rs:611:13
    |
611 |         let mut temp_file = NamedTempFile::new().unwrap();
    |             ----^^^^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `config`
    --> src/storage/src/mongodb_optimizer.rs:1067:13
     |
1067 |         let config = MongoOptimizationConfig::default();
     |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`
     |
     = note: `#[warn(unused_variables)]` on by default

warning: comparison is useless due to type limits
   --> src/storage/src/metrics.rs:651:17
    |
651 |         assert!(snapshot.uptime_seconds >= 0);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_comparisons)]` on by default

warning: `integration` (bin "integration-server" test) generated 4 warnings (4 duplicates)
warning: `storage` (lib test) generated 32 warnings (27 duplicates) (run `cargo fix --lib -p storage --tests` to apply 3 suggestions)
   Compiling api v0.1.0 (/Users/dmf/repos/doc-rag/src/api)
warning: unused import: `std::collections::HashMap`
 --> src/storage/tests/unit.rs:3:5
  |
3 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `BulkInsertError`, `ErrorMetrics`, `PerformanceConfig`, `PerformanceMetrics`, `TextSearchConfig`, and `VectorSearchConfig`
  --> src/storage/tests/unit.rs:11:20
   |
11 |     StorageConfig, VectorSearchConfig, TextSearchConfig, PerformanceConfig,
   |                    ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^
12 |     StorageError, ErrorContext, RecoveryStrategy, WithContext,
13 |     StorageMetrics, OperationMetrics, PerformanceMetrics, ErrorMetrics,
   |                                       ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^
14 |     BulkInsertRequest, BulkInsertResponse, BulkInsertError,
   |                                            ^^^^^^^^^^^^^^^

warning: unused import: `tokio_test`
  --> src/storage/tests/integration.rs:15:5
   |
15 | use tokio_test;
   |     ^^^^^^^^^^

warning: unused imports: `DocumentMetadata`, `MetadataDocument`, `ProcessingStats`, and `SecurityLevel`
  --> src/storage/tests/integration.rs:18:65
   |
18 |     VectorStorage, StorageConfig, ChunkDocument, ChunkMetadata, MetadataDocument, DocumentMetadata,
   |                                                                 ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^
19 |     BulkInsertRequest, SearchQuery, SearchType, SearchFilters, SortOptions, SortField, SortDirection,
20 |     DatabaseOperations, SearchOperations, TransactionOperations, SecurityLevel, ProcessingStats,
   |                                                                  ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^

warning: unused import: `WithContext`
  --> src/storage/tests/unit.rs:12:51
   |
12 |     StorageError, ErrorContext, RecoveryStrategy, WithContext,
   |                                                   ^^^^^^^^^^^

warning: unused variable: `document_id`
   --> src/storage/tests/unit.rs:370:9
    |
370 |     let document_id = Uuid::new_v4();
    |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_document_id`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `value`
   --> src/storage/tests/integration.rs:707:15
    |
707 |     for (key, value) in &original_chunk.metadata.custom_fields {
    |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_value`

warning: function `wait_for_mongodb` is never used
   --> src/storage/tests/integration.rs:722:18
    |
722 |     pub async fn wait_for_mongodb(port: u16, max_retries: u32) -> bool {
    |                  ^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: function `generate_realistic_embedding` is never used
   --> src/storage/tests/integration.rs:735:12
    |
735 |     pub fn generate_realistic_embedding(dimension: usize, seed: u64) -> Vec<f64> {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio_test`
  --> src/storage/tests/integration.rs:15:5
   |
15 | use tokio_test;
   |     ^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `value`
   --> src/storage/tests/integration.rs:707:15
    |
707 |     for (key, value) in &original_chunk.metadata.custom_fields {
    |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_value`
    |
    = note: `#[warn(unused_variables)]` on by default

   Compiling response-generator v0.1.0 (/Users/dmf/repos/doc-rag/src/response-generator)
warning: unused import: `error`
 --> src/response-generator/src/citation.rs:6:46
  |
6 | use tracing::{debug, instrument, warn, info, error};
  |                                              ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `base_generator`
   --> src/response-generator/src/mongodb_integration.rs:930:13
    |
930 |         let base_generator = ResponseGenerator::new(base_config).await;
    |             ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_base_generator`

warning: unused variable: `cache_perf`
   --> src/response-generator/src/mongodb_integration.rs:934:13
    |
934 |         let cache_perf = CachePerformanceMetrics {
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cache_perf`

warning: unused variable: `mongo_perf`
   --> src/response-generator/src/mongodb_integration.rs:941:13
    |
941 |         let mongo_perf = QueryPerformanceMetrics {
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_mongo_perf`

warning: unused variable: `total_time`
   --> src/response-generator/src/mongodb_integration.rs:953:13
    |
953 |         let total_time = Duration::from_millis(500);
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_total_time`

warning: unused import: `tokio_test`
 --> src/response-generator/tests/integration_tests.rs:8:5
  |
8 | use tokio_test;
  |     ^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `tokio_stream::StreamExt`
 --> src/response-generator/tests/integration_tests.rs:9:5
  |
9 | use tokio_stream::StreamExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: `storage` (test "mod") generated 9 warnings (run `cargo fix --test "mod"` to apply 4 suggestions)
warning: `storage` (test "integration") generated 5 warnings (3 duplicates) (run `cargo fix --test "integration"` to apply 1 suggestion)
warning: `storage` (test "unit") generated 4 warnings (4 duplicates)
warning: `response-generator` (lib test) generated 51 warnings (46 duplicates) (run `cargo fix --lib -p response-generator --tests` to apply 1 suggestion)
warning: `response-generator` (test "integration_tests") generated 2 warnings (run `cargo fix --test "integration_tests"` to apply 1 suggestion)
warning: unused import: `tokio_test`
 --> src/response-generator/tests/fact_integration_tests.rs:8:5
  |
8 | use tokio_test;
  |     ^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: variable does not need to be mutable
   --> src/response-generator/src/main.rs:147:9
    |
147 |     let mut generator = ResponseGenerator::new(config).await;
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> src/response-generator/src/main.rs:235:9
    |
235 |     let mut generator = ResponseGenerator::new(config).await;
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/response-generator/src/main.rs:347:9
    |
347 |     let mut generator = ResponseGenerator::new(config).await;
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: `response-generator` (test "fact_integration_tests") generated 1 warning (run `cargo fix --test "fact_integration_tests"` to apply 1 suggestion)
warning: `response-generator` (bin "response-generator" test) generated 3 warnings (run `cargo fix --bin "response-generator" --tests` to apply 3 suggestions)
   Compiling embedder v0.1.0 (/Users/dmf/repos/doc-rag/src/embedder)
warning: unused import: `Result`
 --> src/response-generator/tests/citation_basic_tests.rs:8:56
  |
8 |     ComprehensiveCitationSystem, IntermediateResponse, Result, TextRange
  |                                                        ^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `CitationConfig`, `CitationStyle`, `formatter::FormatterConfig`, and `validator::ValidationConfig`
 --> src/response-generator/examples/advanced_features.rs:5:16
  |
5 |     citation::{CitationStyle, CitationConfig},
  |                ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^
6 |     formatter::FormatterConfig,
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
7 |     validator::ValidationConfig,
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::time::Duration`
  --> src/response-generator/examples/advanced_features.rs:10:5
   |
10 | use std::time::Duration;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `DeliveryGuarantee`, `MessagePriority`, and `Message`
  --> src/integration/tests/e2e_tests.rs:14:19
   |
14 |     HealthStatus, MessagePriority, DeliveryGuarantee, Message,
   |                   ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `tracker`
  --> src/response-generator/tests/citation_basic_tests.rs:15:9
   |
15 |     let tracker = CitationTracker::new();
   |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tracker`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `qa`
  --> src/response-generator/tests/citation_basic_tests.rs:32:9
   |
32 |     let qa = CitationQualityAssurance::new();
   |         ^^ help: if this is intentional, prefix it with an underscore: `_qa`

warning: unused variable: `analyzer`
  --> src/response-generator/tests/citation_basic_tests.rs:39:9
   |
39 |     let analyzer = CitationCoverageAnalyzer::new();
   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_analyzer`

error[E0369]: binary operation `==` cannot be applied to type `integration::ResponseFormat`
   --> src/integration/tests/e2e_tests.rs:79:13
    |
79  |             assert_eq!(response.format, ResponseFormat::Json);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |             |
    |             integration::ResponseFormat
    |             integration::ResponseFormat
    |
note: the foreign item type `integration::ResponseFormat` doesn't implement `PartialEq`
   --> /Users/dmf/repos/doc-rag/src/integration/src/lib.rs:479:1
    |
479 | pub enum ResponseFormat {
    | ^^^^^^^^^^^^^^^^^^^^^^^ not implement `PartialEq`
    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: field `embedding_stats` is never read
   --> src/embedder/examples/model_comparison.rs:287:5
    |
280 | struct ModelResult {
    |        ----------- field in this struct
...
287 |     embedding_stats: EmbeddingStats,
    |     ^^^^^^^^^^^^^^^
    |
    = note: `ModelResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
    = note: `#[warn(dead_code)]` on by default

error[E0432]: unresolved import `integration::ComponentStatus`
  --> src/integration/tests/daa_integration_tests.rs:10:37
   |
10 |     DAAOrchestrator, ComponentType, ComponentStatus, SystemIntegration, 
   |                                     ^^^^^^^^^^^^^^^
   |                                     |
   |                                     no `ComponentStatus` in the root
   |                                     help: a similar name exists in the module: `ComponentHealth`

warning: unused imports: `Duration` and `sleep`
 --> src/integration/tests/daa_integration_tests.rs:6:19
  |
6 | use tokio::time::{sleep, Duration};
  |                   ^^^^^  ^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `Result`
  --> src/integration/tests/daa_integration_tests.rs:11:24
   |
11 |     IntegrationConfig, Result,
   |                        ^^^^^^

error[E0609]: no field `swarms_initialized` on type `OrchestrationMetrics`
  --> src/integration/tests/daa_integration_tests.rs:25:21
   |
25 |     assert!(metrics.swarms_initialized >= 2); // Claude Flow + Ruv Swarm
   |                     ^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: available fields are: `components_registered`, `coordination_events`, `consensus_operations`, `fault_recoveries`, `adaptive_adjustments` ... and 9 others

error[E0609]: no field `agents_spawned` on type `OrchestrationMetrics`
  --> src/integration/tests/daa_integration_tests.rs:26:21
   |
26 |     assert!(metrics.agents_spawned > 0);
   |                     ^^^^^^^^^^^^^^ unknown field
   |
   = note: available fields are: `components_registered`, `coordination_events`, `consensus_operations`, `fault_recoveries`, `adaptive_adjustments` ... and 9 others

error[E0599]: no variant or associated item named `Unhealthy` found for enum `HealthStatus` in the current scope
   --> src/integration/tests/e2e_tests.rs:164:31
    |
164 |                 HealthStatus::Unhealthy |
    |                               ^^^^^^^^^ variant or associated item not found in `HealthStatus`
    |
help: there is a variant with a similar name
    |
164 -                 HealthStatus::Unhealthy |
164 +                 HealthStatus::Healthy |
    |

error[E0599]: no method named `generate` found for opaque type `impl std::future::Future<Output = ResponseGenerator>` in the current scope
  --> src/response-generator/examples/advanced_features.rs:40:37
   |
40 |     let response = custom_generator.generate(request).await?;
   |                                     ^^^^^^^^ method not found in `impl Future<Output = ResponseGenerator>`
   |
help: consider `await`ing on the `Future` and calling the method on its `Output`
   |
40 |     let response = custom_generator.await.generate(request).await?;
   |                                     ++++++

error[E0599]: no method named `generate` found for opaque type `impl std::future::Future<Output = ResponseGenerator>` in the current scope
  --> src/response-generator/examples/basic_usage.rs:30:30
   |
30 |     let response = generator.generate(request).await?;
   |                              ^^^^^^^^ method not found in `impl Future<Output = ResponseGenerator>`
   |
help: consider `await`ing on the `Future` and calling the method on its `Output`
   |
30 |     let response = generator.await.generate(request).await?;
   |                              ++++++

error[E0599]: no method named `generate` found for opaque type `impl std::future::Future<Output = ResponseGenerator>` in the current scope
  --> src/response-generator/examples/basic_usage.rs:68:30
   |
68 |     let response = generator.generate(request).await?;
   |                              ^^^^^^^^ method not found in `impl Future<Output = ResponseGenerator>`
   |
help: consider `await`ing on the `Future` and calling the method on its `Output`
   |
68 |     let response = generator.await.generate(request).await?;
   |                              ++++++

error[E0599]: no method named `generate` found for opaque type `impl std::future::Future<Output = ResponseGenerator>` in the current scope
  --> src/response-generator/examples/basic_usage.rs:94:34
   |
94 |         let response = generator.generate(request).await?;
   |                                  ^^^^^^^^ method not found in `impl Future<Output = ResponseGenerator>`
   |
help: consider `await`ing on the `Future` and calling the method on its `Output`
   |
94 |         let response = generator.await.generate(request).await?;
   |                                  ++++++

error[E0308]: mismatched types
   --> src/integration/tests/e2e_tests.rs:318:23
    |
318 |     for (task_result, (i, request_id, query_result)) in results.into_iter().enumerate() {
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^     ------------------------------- this is an iterator with items of type `(usize, Result<({integer}, Uuid, Result<integration::QueryResponse, IntegrationError>), JoinError>)`
    |                       |
    |                       expected `Result<({integer}, Uuid, ...), ...>`, found `(_, _, _)`
    |
    = note: expected enum `Result<({integer}, Uuid, Result<integration::QueryResponse, IntegrationError>), JoinError>`
              found tuple `(_, _, _)`

For more information about this error, try `rustc --explain E0599`.
error[E0599]: no method named `generate_stream` found for opaque type `impl std::future::Future<Output = ResponseGenerator>` in the current scope
   --> src/response-generator/examples/basic_usage.rs:118:32
    |
118 |     let mut stream = generator.generate_stream(request).await?;
    |                                ^^^^^^^^^^^^^^^
    |
help: there is a method `into_stream` with a similar name, but with different arguments
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-util-0.3.31/src/future/future/mod.rs:278:5
    |
278 | /     fn into_stream(self) -> IntoStream<Self>
279 | |     where
280 | |         Self: Sized,
    | |____________________^
help: consider `await`ing on the `Future` and calling the method on its `Output`
    |
118 |     let mut stream = generator.await.generate_stream(request).await?;
    |                                ++++++

warning: `response-generator` (example "advanced_features") generated 2 warnings
error: could not compile `response-generator` (example "advanced_features") due to 1 previous error; 2 warnings emitted
warning: build failed, waiting for other jobs to finish...
error[E0599]: no method named `expect` found for type `usize` in the current scope
   --> src/integration/tests/e2e_tests.rs:320:14
    |
319 |           let (task_i, task_request_id, task_query_result) = task_result
    |  ____________________________________________________________-
320 | |             .expect("Task should not panic");
    | |             -^^^^^^ method not found in `usize`
    | |_____________|
    |

error[E0599]: no method named `generate` found for opaque type `impl std::future::Future<Output = ResponseGenerator>` in the current scope
   --> src/response-generator/examples/basic_usage.rs:159:37
    |
159 |     let response = custom_generator.generate(request).await?;
    |                                     ^^^^^^^^ method not found in `impl Future<Output = ResponseGenerator>`
    |
help: consider `await`ing on the `Future` and calling the method on its `Output`
    |
159 |     let response = custom_generator.await.generate(request).await?;
    |                                     ++++++

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `predicate`
   --> src/response-generator/tests/citation_system_tests.rs:184:37
    |
184 |         .with(eq("query_hash_123"), predicate::always())
    |                                     ^^^^^^^^^ use of unresolved module or unlinked crate `predicate`
    |
    = help: if you wanted to use a crate named `predicate`, use `cargo add predicate` to add it to your `Cargo.toml`
help: consider importing this module
    |
6   + use mockall::predicate;
    |

error[E0433]: failed to resolve: unresolved import
   --> src/response-generator/tests/citation_system_tests.rs:291:63
    |
291 |             assert_eq!(requirement.citation_necessity, crate::citation::CitationNecessity::Required);
    |                                                               ^^^^^^^^ unresolved import
    |
help: a similar path exists
    |
291 |             assert_eq!(requirement.citation_necessity, crate::response_generator::citation::CitationNecessity::Required);
    |                                                               ++++++++++++++++++++
help: consider importing this enum
    |
6   + use response_generator::CitationNecessity;
    |
help: if you import `CitationNecessity`, refer to it directly
    |
291 -             assert_eq!(requirement.citation_necessity, crate::citation::CitationNecessity::Required);
291 +             assert_eq!(requirement.citation_necessity, CitationNecessity::Required);
    |

error[E0433]: failed to resolve: use of undeclared type `CitationQualityCalculator`
   --> src/response-generator/tests/citation_system_tests.rs:386:30
    |
386 |     let quality_calculator = CitationQualityCalculator::new();
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `CitationQualityCalculator`
    |
help: a struct with a similar name exists
    |
386 -     let quality_calculator = CitationQualityCalculator::new();
386 +     let quality_calculator = CitationQualityAssurance::new();
    |
help: consider importing this struct
    |
6   + use response_generator::citation::CitationQualityCalculator;
    |

error[E0599]: no method named `is_nil` found for unit type `()` in the current scope
  --> src/integration/tests/daa_integration_tests.rs:41:27
   |
41 |     assert!(!component_id.is_nil());
   |                           ^^^^^^ method not found in `()`

error: could not compile `response-generator` (example "basic_usage") due to 5 previous errors
error[E0599]: no method named `get_component_health` found for struct `DAAOrchestrator` in the current scope
    --> src/integration/tests/daa_integration_tests.rs:44:31
     |
44   |     let health = orchestrator.get_component_health("test-chunker").await.unwrap();
     |                               ^^^^^^^^^^^^^^^^^^^^
     |
help: there is a method `components` with a similar name, but with different arguments
    --> /Users/dmf/repos/doc-rag/src/integration/src/daa_orchestrator.rs:1149:5
     |
1149 |     pub async fn components(&self) -> HashMap<String, ComponentInfo> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `tasks_orchestrated` on type `OrchestrationMetrics`
  --> src/integration/tests/daa_integration_tests.rs:49:21
   |
49 |     assert!(metrics.tasks_orchestrated > 0);
   |                     ^^^^^^^^^^^^^^^^^^ unknown field
   |
   = note: available fields are: `components_registered`, `coordination_events`, `consensus_operations`, `fault_recoveries`, `adaptive_adjustments` ... and 9 others

error[E0599]: no method named `consensus_decision` found for struct `DAAOrchestrator` in the current scope
  --> src/integration/tests/daa_integration_tests.rs:59:33
   |
59 |     let decision = orchestrator.consensus_decision("upgrade_embedder_model").await.unwrap();
   |                                 ^^^^^^^^^^^^^^^^^^ method not found in `DAAOrchestrator`

error[E0609]: no field `consensus_decisions` on type `OrchestrationMetrics`
  --> src/integration/tests/daa_integration_tests.rs:64:21
   |
64 |     assert!(metrics.consensus_decisions > 0);
   |                     ^^^^^^^^^^^^^^^^^^^ unknown field
   |
help: a field with a similar name exists
   |
64 -     assert!(metrics.consensus_decisions > 0);
64 +     assert!(metrics.consensus_operations > 0);
   |

error[E0599]: no method named `fault_recovery` found for struct `DAAOrchestrator` in the current scope
  --> src/integration/tests/daa_integration_tests.rs:80:31
   |
80 |     let result = orchestrator.fault_recovery("test-storage").await;
   |                               ^^^^^^^^^^^^^^ method not found in `DAAOrchestrator`

Some errors have detailed explanations: E0308, E0369, E0599.
For more information about an error, try `rustc --explain E0308`.
error[E0599]: no method named `get_system_status` found for struct `DAAOrchestrator` in the current scope
   --> src/integration/tests/daa_integration_tests.rs:105:31
    |
105 |     let status = orchestrator.get_system_status().await.unwrap();
    |                               ^^^^^^^^^^^^^^^^^ method not found in `DAAOrchestrator`

error[E0277]: the trait bound `MockFACTCitationProvider: FACTCitationProvider` is not satisfied
   --> src/response-generator/tests/citation_system_tests.rs:188:49
    |
188 |     let fact_manager = FACTCitationManager::new(Box::new(mock_fact));
    |                                                 ^^^^^^^^^^^^^^^^^^^ the trait `FACTCitationProvider` is not implemented for `MockFACTCitationProvider`
    |
    = note: required for the cast from `Box<MockFACTCitationProvider>` to `Box<(dyn FACTCitationProvider + 'static)>`

warning: `integration` (test "e2e_tests") generated 1 warning
error: could not compile `integration` (test "e2e_tests") due to 4 previous errors; 1 warning emitted
warning: unused import: `FACTCitationProvider`
  --> src/response-generator/tests/citation_system_tests.rs:11:27
   |
11 |     OutputFormat, Result, FACTCitationProvider, TextRange
   |                           ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `get_component_health` found for struct `DAAOrchestrator` in the current scope
    --> src/integration/tests/daa_integration_tests.rs:187:28
     |
187  |         match orchestrator.get_component_health(name).await {
     |                            ^^^^^^^^^^^^^^^^^^^^
     |
help: there is a method `components` with a similar name, but with different arguments
    --> /Users/dmf/repos/doc-rag/src/integration/src/daa_orchestrator.rs:1149:5
     |
1149 |     pub async fn components(&self) -> HashMap<String, ComponentInfo> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `get_system_status` found for struct `DAAOrchestrator` in the current scope
   --> src/integration/tests/daa_integration_tests.rs:205:31
    |
205 |     let status = orchestrator.get_system_status().await.unwrap();
    |                               ^^^^^^^^^^^^^^^^^ method not found in `DAAOrchestrator`

warning: variable does not need to be mutable
   --> src/response-generator/tests/citation_system_tests.rs:133:9
    |
133 |     let mut tracker = CitationTracker::new();
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

error[E0433]: failed to resolve: could not find `AnalyzerConfig` in `analyzer`
    --> src/query-processor/src/consensus.rs:2805:52
     |
2805 |             let analyzer_config = crate::analyzer::AnalyzerConfig::default();
     |                                                    ^^^^^^^^^^^^^^ could not find `AnalyzerConfig` in `analyzer`
     |
help: consider importing this struct
     |
2783 +     use crate::config::AnalyzerConfig;
     |
help: if you import `AnalyzerConfig`, refer to it directly
     |
2805 -             let analyzer_config = crate::analyzer::AnalyzerConfig::default();
2805 +             let analyzer_config = AnalyzerConfig::default();
     |

error[E0422]: cannot find struct, variant or union type `ClassificationMetadata` in this scope
    --> src/query-processor/src/metrics.rs:586:23
     |
586  |             metadata: ClassificationMetadata {
     |                       ^^^^^^^^^^^^^^^^^^^^^^ help: a struct with a similar name exists: `ClassificationResult`
     |
    ::: src/query-processor/src/types.rs:1148:1
     |
1148 | pub struct ClassificationResult {
     | ------------------------------- similarly named struct `ClassificationResult` defined here

error[E0422]: cannot find struct, variant or union type `PerformancePrediction` in this scope
   --> src/query-processor/src/metrics.rs:598:26
    |
598 |             predictions: PerformancePrediction {
    |                          ^^^^^^^^^^^^^^^^^^^^^ not found in this scope

warning: variable does not need to be mutable
   --> src/response-generator/tests/citation_system_tests.rs:333:9
    |
333 |     let mut tracker = CitationTracker::with_config(CitationConfig {
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

error[E0422]: cannot find struct, variant or union type `SelectionMetadata` in this scope
   --> src/query-processor/src/metrics.rs:605:23
    |
605 |             metadata: SelectionMetadata {
    |                       ^^^^^^^^^^^^^^^^^ not found in this scope

error[E0412]: cannot find type `ProcessorError` in this scope
    --> src/query-processor/src/strategy.rs:1050:61
     |
1050 |     async fn test_comparison_query_strategy() -> Result<(), ProcessorError> {
     |                                                             ^^^^^^^^^^^^^^ not found in this scope
     |
help: consider importing this enum through its public re-export
     |
1024 +     use crate::ProcessorError;
     |

error[E0433]: failed to resolve: use of undeclared type `ProcessorError`
    --> src/query-processor/src/strategy.rs:1065:28
     |
1065 |                 return Err(ProcessorError::InvalidStrategy(
     |                            ^^^^^^^^^^^^^^ use of undeclared type `ProcessorError`
     |
help: consider importing this enum through its public re-export
     |
1024 +     use crate::ProcessorError;
     |

error[E0574]: expected struct, variant or union type, found enum `ConsensusResult`
    --> src/query-processor/src/types.rs:1226:22
     |
1226 |         let result = ConsensusResult {
     |                      ^^^^^^^^^^^^^^^ not a struct, variant or union type

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> src/query-processor/src/validation.rs:709:33
    |
709 |                     properties: HashMap::new(),
    |                                 ^^^^^^^ use of undeclared type `HashMap`
    |
    = note: struct `crate::types::tests::HashMap` exists but is inaccessible
help: consider importing one of these items
    |
674 +     use std::collections::HashMap;
    |
674 +     use ahash::HashMap;
    |

Some errors have detailed explanations: E0432, E0599, E0609.
For more information about an error, try `rustc --explain E0432`.
error[E0433]: failed to resolve: use of undeclared type `Uuid`
   --> src/query-processor/src/validation.rs:716:21
    |
716 |                 id: Uuid::new_v4(),
    |                     ^^^^ use of undeclared type `Uuid`
    |
help: consider importing one of these structs
    |
674 +     use crate::Uuid;
    |
674 +     use uuid::Uuid;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> src/query-processor/src/validation.rs:725:27
    |
725 |                 metadata: HashMap::new(),
    |                           ^^^^^^^ use of undeclared type `HashMap`
    |
    = note: struct `crate::types::tests::HashMap` exists but is inaccessible
help: consider importing one of these items
    |
674 +     use std::collections::HashMap;
    |
674 +     use ahash::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> src/query-processor/src/validation.rs:732:28
    |
732 |             probabilities: HashMap::new(),
    |                            ^^^^^^^ use of undeclared type `HashMap`
    |
    = note: struct `crate::types::tests::HashMap` exists but is inaccessible
help: consider importing one of these items
    |
674 +     use std::collections::HashMap;
    |
674 +     use ahash::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `HashMap`
   --> src/query-processor/src/validation.rs:734:23
    |
734 |             features: HashMap::new(),
    |                       ^^^^^^^ use of undeclared type `HashMap`
    |
    = note: struct `crate::types::tests::HashMap` exists but is inaccessible
help: consider importing one of these items
    |
674 +     use std::collections::HashMap;
    |
674 +     use ahash::HashMap;
    |

error[E0433]: failed to resolve: use of undeclared type `Duration`
   --> src/query-processor/src/validation.rs:743:41
    |
743 |                 expected_response_time: Duration::from_millis(100),
    |                                         ^^^^^^^^ use of undeclared type `Duration`
    |
    = note: struct `crate::types::tests::Duration` exists but is inaccessible
help: consider importing one of these items
    |
674 +     use std::time::Duration;
    |
674 +     use chrono::Duration;
    |
674 +     use tokio::time::Duration;
    |

warning: `integration` (test "daa_integration_tests") generated 2 warnings
error: could not compile `integration` (test "daa_integration_tests") due to 12 previous errors; 2 warnings emitted
warning: unused import: `crate::types::*`
   --> src/query-processor/src/metrics.rs:557:9
    |
557 |     use crate::types::*;
    |         ^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

Some errors have detailed explanations: E0277, E0433.
For more information about an error, try `rustc --explain E0277`.
warning: `response-generator` (test "citation_system_tests") generated 3 warnings
error: could not compile `response-generator` (test "citation_system_tests") due to 4 previous errors; 3 warnings emitted
error[E0433]: failed to resolve: use of undeclared type `StorageUsage`
   --> src/api/src/models/domain.rs:119:23
    |
119 |         let storage = StorageUsage::default();
    |                       ^^^^^^^^^^^^ use of undeclared type `StorageUsage`
    |
help: consider importing one of these structs
    |
93  +     use crate::StorageUsage;
    |
93  +     use crate::api::StorageUsage;
    |

error[E0433]: failed to resolve: use of undeclared type `ProcessingStatistics`
   --> src/api/src/models/domain.rs:123:21
    |
123 |         let stats = ProcessingStatistics::default();
    |                     ^^^^^^^^^^^^^^^^^^^^ use of undeclared type `ProcessingStatistics`
    |
help: an enum with a similar name exists
    |
123 -         let stats = ProcessingStatistics::default();
123 +         let stats = ProcessingStatus::default();
    |
help: consider importing one of these structs
    |
93  +     use crate::ProcessingStatistics;
    |
93  +     use crate::api::ProcessingStatistics;
    |

error[E0433]: failed to resolve: use of undeclared type `ContentTypeStatistics`
   --> src/api/src/models/domain.rs:127:29
    |
127 |         let content_stats = ContentTypeStatistics::default();
    |                             ^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `ContentTypeStatistics`
    |
help: consider importing one of these structs
    |
93  +     use crate::ContentTypeStatistics;
    |
93  +     use crate::api::ContentTypeStatistics;
    |

warning: unused import: `crate::config::ApiConfig`
   --> src/api/src/handlers/documents.rs:470:9
    |
470 |     use crate::config::ApiConfig;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

warning: unused import: `crate::config::ApiConfig`
   --> src/api/src/handlers/health.rs:271:9
    |
271 |     use crate::config::ApiConfig;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::config::ApiConfig`
   --> src/api/src/handlers/files.rs:272:9
    |
272 |     use crate::config::ApiConfig;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HeaderValue`
   --> src/api/src/middleware/auth.rs:222:22
    |
222 |     use axum::http::{HeaderValue, Method, Request};
    |                      ^^^^^^^^^^^

warning: unused imports: `IpAddr` and `Ipv4Addr`
   --> src/api/src/middleware/request_logging.rs:332:20
    |
332 |     use std::net::{IpAddr, Ipv4Addr};
    |                    ^^^^^^  ^^^^^^^^

warning: unused imports: `IpAddr` and `Ipv4Addr`
   --> src/api/src/middleware/rate_limiting.rs:419:20
    |
419 |     use std::net::{IpAddr, Ipv4Addr};
    |                    ^^^^^^  ^^^^^^^^

warning: unused variable: `analysis`
   --> src/query-processor/src/entities.rs:405:9
    |
405 |         analysis: &SemanticAnalysis,
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_analysis`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `analysis`
   --> src/query-processor/src/entities.rs:484:9
    |
484 |         analysis: &SemanticAnalysis,
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_analysis`

warning: unused variable: `analysis`
  --> src/query-processor/src/entities.rs:94:9
   |
94 |         analysis: &SemanticAnalysis,
   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_analysis`

warning: unused variable: `input`
   --> src/query-processor/src/classifier.rs:752:35
    |
752 |     async fn run_inference(&self, input: &[f32]) -> Result<Vec<f32>> {
    |                                   ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `neural_net`
   --> src/query-processor/src/classifier.rs:584:25
    |
584 |         if let Some(ref neural_net) = self.neural_net {
    |                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_neural_net`

warning: unused variable: `inputs`
   --> src/query-processor/src/classifier.rs:588:17
    |
588 |             let inputs: Vec<Vec<f32>> = training_data.iter().map(|(input, _)| input.clone()).collect();
    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_inputs`

warning: unused variable: `outputs`
   --> src/query-processor/src/classifier.rs:589:17
    |
589 |             let outputs: Vec<Vec<f32>> = training_data.iter().map(|(_, output)| output.clone()).collect();
    |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_outputs`

warning: unused variable: `neural_net`
   --> src/query-processor/src/classifier.rs:617:25
    |
617 |         if let Some(ref neural_net) = self.neural_net {
    |                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_neural_net`

warning: unused variable: `config`
   --> src/query-processor/src/classifier.rs:686:22
    |
686 |     pub async fn new(config: &crate::config::IntentClassifierConfig) -> Result<Self> {
    |                      ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`

warning: unused variable: `client_id`
    --> src/query-processor/src/consensus.rs:1251:9
     |
1251 |         client_id: String,
     |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `timestamp`
    --> src/query-processor/src/consensus.rs:1252:9
     |
1252 |         timestamp: u64,
     |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_timestamp`

warning: unused variable: `reply`
    --> src/query-processor/src/consensus.rs:1423:21
     |
1423 |                 let reply = ConsensusMessage::Reply {
     |                     ^^^^^ help: if this is intentional, prefix it with an underscore: `_reply`

warning: unused variable: `client_id`
    --> src/query-processor/src/consensus.rs:1453:9
     |
1453 |         client_id: String,
     |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `query_text`
    --> src/query-processor/src/consensus.rs:1805:9
     |
1805 |         query_text: String,
     |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_query_text`

warning: unused variable: `query_text`
    --> src/query-processor/src/consensus.rs:1823:9
     |
1823 |         query_text: String,
     |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_query_text`

warning: unused variable: `query`
    --> src/query-processor/src/consensus.rs:1841:9
     |
1841 |         query: ProcessedQuery,
     |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_query`

warning: unused variable: `result`
    --> src/query-processor/src/consensus.rs:1859:9
     |
1859 |         result: QueryResult,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`

warning: unused variable: `result`
    --> src/query-processor/src/consensus.rs:1877:9
     |
1877 |         result: &QueryResult,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`

error[E0308]: mismatched types
   --> src/api/src/handlers/queries.rs:240:8
    |
238 |       let stream = ReceiverStream::new(rx).map(|event| Ok(event));
    |                                                ------- the found closure
239 |       
240 |       Ok(Sse::new(stream)
    |  _____--_^
    | |     |
    | |     arguments to this enum variant are incorrect
241 | |         .keep_alive(axum::response::sse::KeepAlive::default()))
    | |______________________________________________________________^ expected `Sse<ReceiverStream<Receiver<...>>>`, found `Sse<Map<ReceiverStream<Event>, ...>>`
    |
    = note: expected struct `Sse<ReceiverStream<tokio::sync::mpsc::Receiver<std::result::Result<axum::response::sse::Event, Infallible>>>>`
               found struct `Sse<futures::stream::Map<ReceiverStream<axum::response::sse::Event>, {closure@src/api/src/handlers/queries.rs:238:46: 238:53}>>`
help: the type constructed contains `Sse<futures::stream::Map<ReceiverStream<axum::response::sse::Event>, {closure@src/api/src/handlers/queries.rs:238:46: 238:53}>>` due to the type of the argument passed
   --> src/api/src/handlers/queries.rs:240:5
    |
240 |        Ok(Sse::new(stream)
    |   _____^  -
    |  |________|
241 | ||         .keep_alive(axum::response::sse::KeepAlive::default()))
    | ||______________________________________________________________-^
    | |_______________________________________________________________|
    |                                                                 this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/core/src/result.rs:552:5

warning: unused variable: `config`
    --> src/query-processor/src/consensus.rs:2143:56
     |
2143 |             ConsensusPayload::QueryProcessing { query, config } => {
     |                                                        ^^^^^^ help: try ignoring the field: `config: _`

warning: unused variable: `query_text`
    --> src/query-processor/src/consensus.rs:2147:50
     |
2147 |             ConsensusPayload::EntityExtraction { query_text, entity_results } => {
     |                                                  ^^^^^^^^^^ help: try ignoring the field: `query_text: _`

warning: unused variable: `query_text`
    --> src/query-processor/src/consensus.rs:2152:48
     |
2152 |             ConsensusPayload::Classification { query_text, classification_results } => {
     |                                                ^^^^^^^^^^ help: try ignoring the field: `query_text: _`

warning: unused variable: `query`
    --> src/query-processor/src/consensus.rs:2156:56
     |
2156 |             ConsensusPayload::StrategyRecommendation { query, strategy_results } => {
     |                                                        ^^^^^ help: try ignoring the field: `query: _`

warning: unused variable: `result`
    --> src/query-processor/src/consensus.rs:2160:50
     |
2160 |             ConsensusPayload::ResultValidation { result, validation_results } => {
     |                                                  ^^^^^^ help: try ignoring the field: `result: _`

warning: unused variable: `evidence`
    --> src/query-processor/src/consensus.rs:2341:9
     |
2341 |         evidence: ViewChangeEvidence,
     |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_evidence`

warning: unused variable: `view_change_messages`
    --> src/query-processor/src/consensus.rs:2352:9
     |
2352 |         view_change_messages: Vec<ConsensusMessage>,
     |         ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_view_change_messages`

warning: unused variable: `pre_prepare_messages`
    --> src/query-processor/src/consensus.rs:2353:9
     |
2353 |         pre_prepare_messages: Vec<ConsensusMessage>,
     |         ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_pre_prepare_messages`

warning: unused variable: `view`
    --> src/query-processor/src/consensus.rs:2365:9
     |
2365 |         view: ViewNumber,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_view`

warning: `response-generator` (test "citation_basic_tests") generated 4 warnings (run `cargo fix --test "citation_basic_tests"` to apply 1 suggestion)
warning: value assigned to `cpu_usage` is never read
    --> src/query-processor/src/consensus.rs:2688:13
     |
2688 |     let mut cpu_usage: f64 = 0.0;
     |             ^^^^^^^^^
     |
     = help: maybe it is overwritten before being read?
     = note: `#[warn(unused_assignments)]` on by default

warning: value assigned to `memory_usage` is never read
    --> src/query-processor/src/consensus.rs:2689:13
     |
2689 |     let mut memory_usage: f64 = 0.0;
     |             ^^^^^^^^^^^^
     |
     = help: maybe it is overwritten before being read?

warning: value assigned to `disk_usage` is never read
    --> src/query-processor/src/consensus.rs:2690:13
     |
2690 |     let mut disk_usage: f64 = 0.0;
     |             ^^^^^^^^^^
     |
     = help: maybe it is overwritten before being read?

warning: unused variable: `view_change_timeout`
    --> src/query-processor/src/consensus.rs:2487:13
     |
2487 |         let view_change_timeout = self.config.view_change_timeout;
     |             ^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_view_change_timeout`

error[E0277]: the `?` operator can only be applied to values that implement `Try`
    --> src/query-processor/src/consensus.rs:2806:28
     |
2806 |             let analyzer = crate::analyzer::QueryAnalyzer::new(analyzer_config)?;
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `impl Future<Output = Result<QueryAnalyzer, ProcessorError>>`
     |
     = help: the trait `Try` is not implemented for `impl Future<Output = Result<QueryAnalyzer, ProcessorError>>`
     = note: the full name for the type has been written to '/Users/dmf/repos/doc-rag/target/debug/deps/query_processor-663aa985c5beca4c.long-type-8264898561384298034.txt'
     = note: consider using `--verbose` to print the full type name to the console
help: consider `await`ing on the `Future`
     |
2806 |             let analyzer = crate::analyzer::QueryAnalyzer::new(analyzer_config).await?;
     |                                                                                ++++++

error[E0107]: type alias takes 1 generic argument but 2 generic arguments were supplied
    --> src/query-processor/src/strategy.rs:1050:50
     |
1050 |     async fn test_comparison_query_strategy() -> Result<(), ProcessorError> {
     |                                                  ^^^^^^   ---------------- help: remove the unnecessary generic argument
     |                                                  |
     |                                                  expected 1 generic argument
     |
note: type alias defined here, with 1 generic parameter: `T`
    --> src/query-processor/src/error.rs:10:10
     |
10   | pub type Result<T> = std::result::Result<T, ProcessorError>;
     |          ^^^^^^ -

error[E0308]: mismatched types
   --> src/integration/src/error.rs:490:34
    |
490 |             reqwest::Error::from(mock_error)
    |             -------------------- ^^^^^^^^^^ expected `reqwest::Error`, found `std::io::Error`
    |             |
    |             arguments to this function are incorrect
    |
    = note: `std::io::Error` and `reqwest::Error` have similar names, but are actually distinct types
note: `std::io::Error` is defined in crate `std`
   --> /rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/std/src/io/error.rs:65:1
note: `reqwest::Error` is defined in crate `reqwest`
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/reqwest-0.11.27/src/error.rs:16:1
    |
16  | pub struct Error {
    | ^^^^^^^^^^^^^^^^
note: associated function defined here
   --> /rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/core/src/convert/mod.rs:587:8

error[E0308]: mismatched types
   --> src/integration/src/error.rs:509:34
    |
509 |             reqwest::Error::from(url::ParseError::EmptyHost)
    |             -------------------- ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `ParseError`
    |             |
    |             arguments to this function are incorrect
    |
note: associated function defined here
   --> /rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/core/src/convert/mod.rs:587:8

error[E0308]: mismatched types
   --> src/integration/src/error.rs:542:34
    |
542 |             reqwest::Error::from(url::ParseError::EmptyHost)
    |             -------------------- ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Error`, found `ParseError`
    |             |
    |             arguments to this function are incorrect
    |
note: associated function defined here
   --> /rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/core/src/convert/mod.rs:587:8

error[E0599]: no method named `context` found for struct `ruv_fann::Network` in the current scope
   --> src/api/src/enhanced_handlers.rs:652:10
    |
651 |       let mut network = ruv_fann::Network::new(&[12, 8, 4, 1])
    |  _______________________-
652 | |         .context("Failed to create ruv-FANN model")?;
    | |_________-^^^^^^^
    |
help: there is a method `with_context` with a similar name
    |
652 |         .with_context("Failed to create ruv-FANN model")?;
    |          +++++

error[E0308]: mismatched types
    --> src/query-processor/src/analyzer.rs:1054:39
     |
1054 |         let result = analyzer.analyze(&query).await;
     |                               ------- ^^^^^^ expected `&Query`, found `&Result<Query, ProcessorError>`
     |                               |
     |                               arguments to this method are incorrect
     |
     = note: expected reference `&query::Query`
                found reference `&std::result::Result<query::Query, error::ProcessorError>`
note: method defined here
    --> src/query-processor/src/analyzer.rs:54:18
     |
54   |     pub async fn analyze(&self, query: &Query) -> Result<SemanticAnalysis> {
     |                  ^^^^^^^        -------------

warning: unused variable: `network`
   --> src/api/src/enhanced_handlers.rs:805:37
    |
805 | async fn rerank_results_with_neural(network: &mut ruv_fann::Network<f32>, agent_results: serde_json::Value, _question: &str) -> anyhow::R...
    |                                     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_network`
    |
    = note: `#[warn(unused_variables)]` on by default

error[E0308]: mismatched types
    --> src/query-processor/src/classifier.rs:1117:50
     |
1117 |         let classification = classifier.classify(&query, &analysis).await.unwrap();
     |                                         -------- ^^^^^^ expected `&Query`, found `&Result<Query, ProcessorError>`
     |                                         |
     |                                         arguments to this method are incorrect
     |
     = note: expected reference `&query::Query`
                found reference `&std::result::Result<query::Query, error::ProcessorError>`
note: method defined here
    --> src/query-processor/src/classifier.rs:68:18
     |
68   |     pub async fn classify(
     |                  ^^^^^^^^
69   |         &self,
70   |         query: &Query,
     |         -------------

error[E0308]: mismatched types
    --> src/query-processor/src/classifier.rs:1130:50
     |
1130 |         let classification = classifier.classify(&query, &analysis).await.unwrap();
     |                                         -------- ^^^^^^ expected `&Query`, found `&Result<Query, ProcessorError>`
     |                                         |
     |                                         arguments to this method are incorrect
     |
     = note: expected reference `&query::Query`
                found reference `&std::result::Result<query::Query, error::ProcessorError>`
note: method defined here
    --> src/query-processor/src/classifier.rs:68:18
     |
68   |     pub async fn classify(
     |                  ^^^^^^^^
69   |         &self,
70   |         query: &Query,
     |         -------------

error[E0308]: mismatched types
    --> src/query-processor/src/classifier.rs:1142:50
     |
1142 |         let classification = classifier.classify(&query, &analysis).await.unwrap();
     |                                         -------- ^^^^^^ expected `&Query`, found `&Result<Query, ProcessorError>`
     |                                         |
     |                                         arguments to this method are incorrect
     |
     = note: expected reference `&query::Query`
                found reference `&std::result::Result<query::Query, error::ProcessorError>`
note: method defined here
    --> src/query-processor/src/classifier.rs:68:18
     |
68   |     pub async fn classify(
     |                  ^^^^^^^^
69   |         &self,
70   |         query: &Query,
     |         -------------

error[E0308]: mismatched types
    --> src/query-processor/src/classifier.rs:1154:51
     |
1154 |         let features = extractor.extract_features(&query, &analysis).await.unwrap();
     |                                  ---------------- ^^^^^^ expected `&Query`, found `&Result<Query, ProcessorError>`
     |                                  |
     |                                  arguments to this method are incorrect
     |
     = note: expected reference `&query::Query`
                found reference `&std::result::Result<query::Query, error::ProcessorError>`
note: method defined here
    --> src/query-processor/src/classifier.rs:939:18
     |
939  |     pub async fn extract_features(
     |                  ^^^^^^^^^^^^^^^^
940  |         &self,
941  |         query: &Query,
     |         -------------

warning: unused variable: `result`
   --> src/api/src/clients.rs:278:13
    |
278 |         let result: Value = response.json().await
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`

error[E0308]: mismatched types
   --> src/api/src/clients.rs:485:59
    |
485 |         self.process_document_ingestion(task_id, content, metadata, chunking_strategy).await
    |              --------------------------                   ^^^^^^^^ expected `Option<Value>`, found `Option<HashMap<String, Value>>`
    |              |
    |              arguments to this method are incorrect
    |
    = note: expected enum `std::option::Option<serde_json::Value>`
               found enum `std::option::Option<HashMap<std::string::String, serde_json::Value>>`
note: method defined here
   --> src/api/src/clients.rs:134:18
    |
134 |     pub async fn process_document_ingestion(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
138 |         metadata: Option<Value>,
    |         -----------------------

error[E0063]: missing field `chunking_strategy` in initializer of `TaskDetails`
   --> src/api/src/clients.rs:640:12
    |
640 |         Ok(TaskDetails {
    |            ^^^^^^^^^^^ missing `chunking_strategy`

error[E0277]: `entities::EntityExtractor` doesn't implement `std::fmt::Debug`
    --> src/query-processor/src/consensus.rs:2790:9
     |
2787 |     #[derive(Debug)]
     |              ----- in this derive macro expansion
...
2790 |         entity_extractor: crate::entities::EntityExtractor,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `entities::EntityExtractor` cannot be formatted using `{:?}`
     |
     = help: the trait `std::fmt::Debug` is not implemented for `entities::EntityExtractor`
     = note: add `#[derive(Debug)]` to `entities::EntityExtractor` or manually `impl std::fmt::Debug for entities::EntityExtractor`

error[E0277]: `analyzer::QueryAnalyzer` doesn't implement `std::fmt::Debug`
    --> src/query-processor/src/consensus.rs:2794:9
     |
2787 |     #[derive(Debug)]
     |              ----- in this derive macro expansion
...
2794 |         analyzer: crate::analyzer::QueryAnalyzer,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `analyzer::QueryAnalyzer` cannot be formatted using `{:?}`
     |
     = help: the trait `std::fmt::Debug` is not implemented for `analyzer::QueryAnalyzer`
     = note: add `#[derive(Debug)]` to `analyzer::QueryAnalyzer` or manually `impl std::fmt::Debug for analyzer::QueryAnalyzer`

error[E0599]: no method named `analyze_query` found for struct `analyzer::QueryAnalyzer` in the current scope
    --> src/query-processor/src/consensus.rs:2828:49
     |
2828 |             let analysis_result = self.analyzer.analyze_query(&query.original_query).await?;
     |                                                 ^^^^^^^^^^^^^
     |
    ::: src/query-processor/src/analyzer.rs:24:1
     |
24   | pub struct QueryAnalyzer {
     | ------------------------ method `analyze_query` not found for this struct
     |
help: there is a method `analyze` with a similar name
     |
2828 -             let analysis_result = self.analyzer.analyze_query(&query.original_query).await?;
2828 +             let analysis_result = self.analyzer.analyze(&query.original_query).await?;
     |

warning: unused variable: `processed_query`
   --> src/api/src/pipeline.rs:108:9
    |
108 |     let processed_query = format!("Processed: {}", request.question);
    |         ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_processed_query`

warning: variable does not need to be mutable
   --> src/integration/src/config.rs:685:13
    |
685 |         let mut temp_file = NamedTempFile::new().unwrap();
    |             ----^^^^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

error[E0599]: no method named `extract_entities` found for struct `entities::EntityExtractor` in the current scope
    --> src/query-processor/src/consensus.rs:2841:35
     |
2841 |             self.entity_extractor.extract_entities(query_text).await
     |                                   ^^^^^^^^^^^^^^^^ method not found in `EntityExtractor`
     |
    ::: src/query-processor/src/entities.rs:19:1
     |
19   | pub struct EntityExtractor {
     | -------------------------- method `extract_entities` not found for this struct
     |
     = help: items from traits can only be used if the trait is implemented and in scope
note: `consensus::QueryProcessorInterface` defines an item `extract_entities`, perhaps you need to implement it
    --> src/query-processor/src/consensus.rs:926:1
     |
926  | pub trait QueryProcessorInterface: Debug + Send + Sync {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `classify_query` found for struct `classifier::IntentClassifier` in the current scope
    --> src/query-processor/src/consensus.rs:2846:29
     |
2846 |             self.classifier.classify_query(query_text).await
     |                             ^^^^^^^^^^^^^^
     |
    ::: src/query-processor/src/classifier.rs:24:1
     |
24   | pub struct IntentClassifier {
     | --------------------------- method `classify_query` not found for this struct
     |
     = help: items from traits can only be used if the trait is implemented and in scope
note: `consensus::QueryProcessorInterface` defines an item `classify_query`, perhaps you need to implement it
    --> src/query-processor/src/consensus.rs:926:1
     |
926  | pub trait QueryProcessorInterface: Debug + Send + Sync {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is a method `classify` with a similar name, but with different arguments
    --> src/query-processor/src/classifier.rs:68:5
     |
68   | /     pub async fn classify(
69   | |         &self,
70   | |         query: &Query,
71   | |         analysis: &SemanticAnalysis,
72   | |     ) -> Result<IntentClassification> {
     | |_____________________________________^

error[E0599]: no method named `analyze_query` found for struct `analyzer::QueryAnalyzer` in the current scope
    --> src/query-processor/src/consensus.rs:2851:42
     |
2851 |             let analysis = self.analyzer.analyze_query(&query.original_query).await?;
     |                                          ^^^^^^^^^^^^^
     |
    ::: src/query-processor/src/analyzer.rs:24:1
     |
24   | pub struct QueryAnalyzer {
     | ------------------------ method `analyze_query` not found for this struct
     |
help: there is a method `analyze` with a similar name
     |
2851 -             let analysis = self.analyzer.analyze_query(&query.original_query).await?;
2851 +             let analysis = self.analyzer.analyze(&query.original_query).await?;
     |

error[E0599]: no variant or associated item named `Confidence` found for enum `types::ValidationRule` in the current scope
    --> src/query-processor/src/consensus.rs:2864:43
     |
2864 |                     rule: ValidationRule::Confidence,
     |                                           ^^^^^^^^^^ variant or associated item not found in `ValidationRule`
     |
    ::: src/query-processor/src/types.rs:764:1
     |
764  | pub enum ValidationRule {
     | ----------------------- variant or associated item `Confidence` not found for this enum

error[E0599]: no variant or associated item named `Performance` found for enum `types::ValidationRule` in the current scope
    --> src/query-processor/src/consensus.rs:2886:43
     |
2886 |                     rule: ValidationRule::Performance,
     |                                           ^^^^^^^^^^^ variant or associated item not found in `ValidationRule`
     |
    ::: src/query-processor/src/types.rs:764:1
     |
764  | pub enum ValidationRule {
     | ----------------------- variant or associated item `Performance` not found for this enum

error[E0560]: struct `types::ExtractedEntity` has no field named `text`
    --> src/query-processor/src/consensus.rs:2979:13
     |
2979 |             text: "test_entity".to_string(),
     |             ^^^^ `types::ExtractedEntity` does not have this field
     |
     = note: available fields are: `entity`, `category`

error[E0560]: struct `types::ExtractedEntity` has no field named `entity_type`
    --> src/query-processor/src/consensus.rs:2980:13
     |
2980 |             entity_type: "ORGANIZATION".to_string(),
     |             ^^^^^^^^^^^ `types::ExtractedEntity` does not have this field
     |
     = note: available fields are: `entity`, `category`

error[E0560]: struct `types::ExtractedEntity` has no field named `confidence`
    --> src/query-processor/src/consensus.rs:2981:13
     |
2981 |             confidence: 0.9,
     |             ^^^^^^^^^^ `types::ExtractedEntity` does not have this field
     |
     = note: available fields are: `entity`, `category`

error[E0560]: struct `types::ExtractedEntity` has no field named `position`
    --> src/query-processor/src/consensus.rs:2982:13
     |
2982 |             position: (0, 11),
     |             ^^^^^^^^ `types::ExtractedEntity` does not have this field
     |
     = note: available fields are: `entity`, `category`

error[E0308]: mismatched types
    --> src/query-processor/src/consensus.rs:2983:23
     |
2983 |             metadata: HashMap::new(),
     |                       ^^^^^^^^^^^^^^ expected `EntityMetadata`, found `HashMap<_, _>`
     |
     = note: expected struct `types::EntityMetadata`
                found struct `std::collections::HashMap<_, _>`

error[E0560]: struct `types::ExtractedEntity` has no field named `text`
    --> src/query-processor/src/consensus.rs:3042:13
     |
3042 |             text: "test_entity".to_string(),
     |             ^^^^ `types::ExtractedEntity` does not have this field
     |
     = note: available fields are: `entity`, `category`

error[E0560]: struct `types::ExtractedEntity` has no field named `entity_type`
    --> src/query-processor/src/consensus.rs:3043:13
     |
3043 |             entity_type: "PERSON".to_string(),
     |             ^^^^^^^^^^^ `types::ExtractedEntity` does not have this field
     |
     = note: available fields are: `entity`, `category`

error[E0560]: struct `types::ExtractedEntity` has no field named `confidence`
    --> src/query-processor/src/consensus.rs:3044:13
     |
3044 |             confidence: 0.9,
     |             ^^^^^^^^^^ `types::ExtractedEntity` does not have this field
     |
     = note: available fields are: `entity`, `category`

error[E0560]: struct `types::ExtractedEntity` has no field named `position`
    --> src/query-processor/src/consensus.rs:3045:13
     |
3045 |             position: (0, 11),
     |             ^^^^^^^^ `types::ExtractedEntity` does not have this field
     |
     = note: available fields are: `entity`, `category`

error[E0308]: mismatched types
    --> src/query-processor/src/consensus.rs:3046:23
     |
3046 |             metadata: HashMap::new(),
     |                       ^^^^^^^^^^^^^^ expected `EntityMetadata`, found `HashMap<_, _>`
     |
     = note: expected struct `types::EntityMetadata`
                found struct `std::collections::HashMap<_, _>`

error[E0277]: can't compare `f64` with `&str`
    --> src/query-processor/src/consensus.rs:3129:9
     |
3129 |         assert_eq!(classification.features["consensus_nodes"], "2");
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no implementation for `f64 == &str`
     |
     = help: the trait `PartialEq<&str>` is not implemented for `f64`
     = help: the following other types implement trait `PartialEq<Rhs>`:
               `f64` implements `PartialEq<serde_json::Value>`
               `f64` implements `PartialEq`
     = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no function or associated item named `default` found for struct `consensus::ConsensusConfig` in the current scope
    --> src/query-processor/src/consensus.rs:3313:39
     |
809  | pub struct ConsensusConfig {
     | -------------------------- function or associated item `default` not found for this struct
...
3313 |         let config = ConsensusConfig::default();
     |                                       ^^^^^^^ function or associated item not found in `ConsensusConfig`
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `default`, perhaps you need to implement one of them:
             candidate #1: `Default`
             candidate #2: `tinyvec::array::Array`

error[E0560]: struct `types::ExtractedEntity` has no field named `text`
    --> src/query-processor/src/consensus.rs:3321:21
     |
3321 |                     text: "entity1".to_string(),
     |                     ^^^^ `types::ExtractedEntity` does not have this field
     |
     = note: available fields are: `entity`, `category`

error[E0560]: struct `types::ExtractedEntity` has no field named `entity_type`
    --> src/query-processor/src/consensus.rs:3322:21
     |
3322 |                     entity_type: "TYPE1".to_string(),
     |                     ^^^^^^^^^^^ `types::ExtractedEntity` does not have this field
     |
     = note: available fields are: `entity`, `category`

error[E0560]: struct `types::ExtractedEntity` has no field named `confidence`
    --> src/query-processor/src/consensus.rs:3323:21
     |
3323 |                     confidence: 0.9,
     |                     ^^^^^^^^^^ `types::ExtractedEntity` does not have this field
     |
     = note: available fields are: `entity`, `category`

error[E0560]: struct `types::ExtractedEntity` has no field named `position`
    --> src/query-processor/src/consensus.rs:3324:21
     |
3324 |                     position: (0, 7),
     |                     ^^^^^^^^ `types::ExtractedEntity` does not have this field
     |
     = note: available fields are: `entity`, `category`

error[E0308]: mismatched types
    --> src/query-processor/src/consensus.rs:3325:31
     |
3325 |                     metadata: HashMap::new(),
     |                               ^^^^^^^^^^^^^^ expected `EntityMetadata`, found `HashMap<_, _>`
     |
     = note: expected struct `types::EntityMetadata`
                found struct `std::collections::HashMap<_, _>`

error[E0560]: struct `types::ExtractedEntity` has no field named `text`
    --> src/query-processor/src/consensus.rs:3335:21
     |
3335 |                     text: "entity1".to_string(),
     |                     ^^^^ `types::ExtractedEntity` does not have this field
     |
     = note: available fields are: `entity`, `category`

error[E0560]: struct `types::ExtractedEntity` has no field named `entity_type`
    --> src/query-processor/src/consensus.rs:3336:21
     |
3336 |                     entity_type: "TYPE1".to_string(),
     |                     ^^^^^^^^^^^ `types::ExtractedEntity` does not have this field
     |
     = note: available fields are: `entity`, `category`

error[E0560]: struct `types::ExtractedEntity` has no field named `confidence`
    --> src/query-processor/src/consensus.rs:3337:21
     |
3337 |                     confidence: 0.8,
     |                     ^^^^^^^^^^ `types::ExtractedEntity` does not have this field
     |
     = note: available fields are: `entity`, `category`

error[E0560]: struct `types::ExtractedEntity` has no field named `position`
    --> src/query-processor/src/consensus.rs:3338:21
     |
3338 |                     position: (0, 7),
     |                     ^^^^^^^^ `types::ExtractedEntity` does not have this field
     |
     = note: available fields are: `entity`, `category`

error[E0308]: mismatched types
    --> src/query-processor/src/consensus.rs:3339:31
     |
3339 |                     metadata: HashMap::new(),
     |                               ^^^^^^^^^^^^^^ expected `EntityMetadata`, found `HashMap<_, _>`
     |
     = note: expected struct `types::EntityMetadata`
                found struct `std::collections::HashMap<_, _>`

error[E0599]: no method named `consensus_entity_extraction` found for opaque type `impl Future<Output = Result<ConsensusManager, ProcessorError>>` in the current scope
    --> src/query-processor/src/consensus.rs:3348:42
     |
3348 |         let consensus_entities = manager.consensus_entity_extraction(results).await.unwrap();
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `impl Future<Output = Result<ConsensusManager, ProcessorError>>`

error[E0063]: missing fields `processing_time` and `timestamp` in initializer of `types::SemanticAnalysis`
   --> src/query-processor/src/entities.rs:639:9
    |
639 |         SemanticAnalysis {
    |         ^^^^^^^^^^^^^^^^ missing `processing_time` and `timestamp`

error[E0308]: mismatched types
   --> src/query-processor/src/entities.rs:682:40
    |
682 |         let result = extractor.extract(&query, &analysis).await;
    |                                ------- ^^^^^^ expected `&Query`, found `&Result<Query, ProcessorError>`
    |                                |
    |                                arguments to this method are incorrect
    |
    = note: expected reference `&query::Query`
               found reference `&std::result::Result<query::Query, error::ProcessorError>`
note: method defined here
   --> src/query-processor/src/entities.rs:49:18
    |
49  |     pub async fn extract(
    |                  ^^^^^^^
50  |         &self,
51  |         query: &Query,
    |         -------------

error[E0308]: mismatched types
   --> src/query-processor/src/entities.rs:751:42
    |
751 |         let entities = extractor.extract(&query, &analysis).await.unwrap();
    |                                  ------- ^^^^^^ expected `&Query`, found `&Result<Query, ProcessorError>`
    |                                  |
    |                                  arguments to this method are incorrect
    |
    = note: expected reference `&query::Query`
               found reference `&std::result::Result<query::Query, error::ProcessorError>`
note: method defined here
   --> src/query-processor/src/entities.rs:402:18
    |
402 |     pub async fn extract(
    |                  ^^^^^^^
403 |         &self,
404 |         query: &Query,
    |         -------------

warning: `embedder` (example "model_comparison") generated 1 warning
error[E0063]: missing fields `processing_time` and `timestamp` in initializer of `types::SemanticAnalysis`
   --> src/query-processor/src/extractor.rs:467:9
    |
467 |         SemanticAnalysis {
    |         ^^^^^^^^^^^^^^^^ missing `processing_time` and `timestamp`

error[E0308]: mismatched types
   --> src/query-processor/src/extractor.rs:519:40
    |
519 |         let result = extractor.extract(&query, &analysis).await;
    |                                ------- ^^^^^^ expected `&Query`, found `&Result<Query, ProcessorError>`
    |                                |
    |                                arguments to this method are incorrect
    |
    = note: expected reference `&query::Query`
               found reference `&std::result::Result<query::Query, error::ProcessorError>`
note: method defined here
   --> src/query-processor/src/extractor.rs:54:18
    |
54  |     pub async fn extract(
    |                  ^^^^^^^
55  |         &self,
56  |         query: &Query,
    |         -------------

warning: unused variable: `bus`
   --> src/integration/src/message_bus.rs:839:13
    |
839 |         let bus = MessageBus::new(config).await.unwrap();
    |             ^^^ help: if this is intentional, prefix it with an underscore: `_bus`
    |
    = note: `#[warn(unused_variables)]` on by default

error[E0308]: mismatched types
   --> src/query-processor/src/extractor.rs:542:40
    |
542 |         let result = extractor.extract(&query, &analysis).await;
    |                                ------- ^^^^^^ expected `&Query`, found `&Result<Query, ProcessorError>`
    |                                |
    |                                arguments to this method are incorrect
    |
    = note: expected reference `&query::Query`
               found reference `&std::result::Result<query::Query, error::ProcessorError>`
note: method defined here
   --> src/query-processor/src/extractor.rs:54:18
    |
54  |     pub async fn extract(
    |                  ^^^^^^^
55  |         &self,
56  |         query: &Query,
    |         -------------

error[E0063]: missing fields `processing_time` and `timestamp` in initializer of `types::SemanticAnalysis`
   --> src/query-processor/src/metrics.rs:562:24
    |
562 |         let analysis = SemanticAnalysis {
    |                        ^^^^^^^^^^^^^^^^ missing `processing_time` and `timestamp`

error[E0560]: struct `types::IntentClassification` has no field named `primary_confidence`
   --> src/query-processor/src/metrics.rs:584:13
    |
584 |             primary_confidence: 0.9,
    |             ^^^^^^^^^^^^^^^^^^ `types::IntentClassification` does not have this field
    |
    = note: available fields are: `confidence`, `probabilities`, `method`, `features`

error[E0560]: struct `types::IntentClassification` has no field named `metadata`
   --> src/query-processor/src/metrics.rs:586:13
    |
586 |             metadata: ClassificationMetadata {
    |             ^^^^^^^^ `types::IntentClassification` does not have this field
    |
    = note: available fields are: `confidence`, `probabilities`, `method`, `features`

error[E0560]: struct `types::StrategySelection` has no field named `primary_strategy`
   --> src/query-processor/src/metrics.rs:594:13
    |
594 |             primary_strategy: SearchStrategy::VectorSimilarity,
    |             ^^^^^^^^^^^^^^^^ `types::StrategySelection` does not have this field
    |
    = note: available fields are: `strategy`, `confidence`, `expected_metrics`, `fallbacks`

error[E0560]: struct `types::StrategySelection` has no field named `primary_confidence`
   --> src/query-processor/src/metrics.rs:595:13
    |
595 |             primary_confidence: 0.85,
    |             ^^^^^^^^^^^^^^^^^^ `types::StrategySelection` does not have this field
    |
    = note: available fields are: `strategy`, `confidence`, `expected_metrics`, `fallbacks`

error[E0560]: struct `types::StrategySelection` has no field named `fallback_strategies`
   --> src/query-processor/src/metrics.rs:596:13
    |
596 |             fallback_strategies: vec![],
    |             ^^^^^^^^^^^^^^^^^^^ `types::StrategySelection` does not have this field
    |
    = note: available fields are: `strategy`, `confidence`, `expected_metrics`, `fallbacks`

error[E0560]: struct `types::StrategySelection` has no field named `metadata`
   --> src/query-processor/src/metrics.rs:605:13
    |
605 |             metadata: SelectionMetadata {
    |             ^^^^^^^^ `types::StrategySelection` does not have this field
    |
    = note: available fields are: `strategy`, `confidence`, `expected_metrics`, `fallbacks`

error[E0308]: mismatched types
   --> src/query-processor/src/metrics.rs:613:49
    |
613 |         let mut processed = ProcessedQuery::new(query, analysis, entities, key_terms, intent, strategy);
    |                             ------------------- ^^^^^ expected `Query`, found `Result<Query, ProcessorError>`
    |                             |
    |                             arguments to this function are incorrect
    |
    = note: expected struct `query::Query`
                 found enum `std::result::Result<query::Query, error::ProcessorError>`
note: associated function defined here
   --> src/query-processor/src/query.rs:455:12
    |
455 |     pub fn new(
    |            ^^^
456 |         query: Query,
    |         ------------
help: consider using `Result::expect` to unwrap the `std::result::Result<query::Query, error::ProcessorError>` value, panicking if the value is a `Result::Err`
    |
613 |         let mut processed = ProcessedQuery::new(query.expect("REASON"), analysis, entities, key_terms, intent, strategy);
    |                                                      +++++++++++++++++

error[E0277]: the trait bound `std::string::String: Borrow<types::SearchStrategy>` is not satisfied
   --> src/query-processor/src/metrics.rs:645:61
    |
645 |         assert!(metrics.strategy_effectiveness.contains_key(&SearchStrategy::VectorSimilarity));
    |                                                ------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Borrow<types::SearchStrategy>` is not implemented for `std::string::String`
    |                                                |
    |                                                required by a bound introduced by this call
    |
    = help: the trait `Borrow<types::SearchStrategy>` is not implemented for `std::string::String`
            but trait `Borrow<str>` is implemented for it
    = help: for that trait implementation, expected `str`, found `types::SearchStrategy`
note: required by a bound in `std::collections::HashMap::<K, V, S>::contains_key`
   --> /rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/std/src/collections/hash/map.rs:1139:5

error[E0277]: the trait bound `types::SearchStrategy: Hash` is not satisfied
   --> src/query-processor/src/metrics.rs:645:61
    |
645 |         assert!(metrics.strategy_effectiveness.contains_key(&SearchStrategy::VectorSimilarity));
    |                                                ------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Hash` is not implemented for `types::SearchStrategy`
    |                                                |
    |                                                required by a bound introduced by this call
    |
note: required by a bound in `std::collections::HashMap::<K, V, S>::contains_key`
   --> /rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/std/src/collections/hash/map.rs:1139:5

error[E0277]: the trait bound `types::SearchStrategy: std::cmp::Eq` is not satisfied
   --> src/query-processor/src/metrics.rs:645:61
    |
645 |         assert!(metrics.strategy_effectiveness.contains_key(&SearchStrategy::VectorSimilarity));
    |                                                ------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::cmp::Eq` is not implemented for `types::SearchStrategy`
    |                                                |
    |                                                required by a bound introduced by this call
    |
note: required by a bound in `std::collections::HashMap::<K, V, S>::contains_key`
   --> /rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/std/src/collections/hash/map.rs:1139:5

warning: unused variable: `config`
   --> src/query-processor/src/analyzer.rs:385:16
    |
385 |     pub fn new(config: &crate::config::AnalyzerConfig) -> Result<Self> {
    |                ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`

warning: unused variable: `config`
   --> src/query-processor/src/classifier.rs:165:16
    |
165 |     pub fn new(config: &crate::config::IntentClassifierConfig) -> Result<Self> {
    |                ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`

warning: unused variable: `config`
   --> src/query-processor/src/classifier.rs:928:16
    |
928 |     pub fn new(config: &crate::config::IntentClassifierConfig) -> Result<Self> {
    |                ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`

error[E0308]: mismatched types
   --> src/query-processor/src/performance_optimizer.rs:595:50
    |
595 |         let result = optimizer.process_optimized(query).await;
    |                                ----------------- ^^^^^ expected `Query`, found `Result<Query, ProcessorError>`
    |                                |
    |                                arguments to this method are incorrect
    |
    = note: expected struct `query::Query`
                 found enum `std::result::Result<query::Query, error::ProcessorError>`
note: method defined here
   --> src/query-processor/src/performance_optimizer.rs:190:18
    |
190 |     pub async fn process_optimized(&self, query: Query) -> Result<OptimizationResult> {
    |                  ^^^^^^^^^^^^^^^^^        ------------
help: consider using `Result::expect` to unwrap the `std::result::Result<query::Query, error::ProcessorError>` value, panicking if the value is a `Result::Err`
    |
595 |         let result = optimizer.process_optimized(query.expect("REASON")).await;
    |                                                       +++++++++++++++++

error[E0308]: mismatched types
   --> src/query-processor/src/performance_optimizer.rs:613:57
    |
613 |         let results = optimizer.process_batch_optimized(queries).await;
    |                                 ----------------------- ^^^^^^^ expected `Vec<Query>`, found `Vec<Result<Query, ProcessorError>>`
    |                                 |
    |                                 arguments to this method are incorrect
    |
    = note: expected struct `Vec<query::Query>`
               found struct `Vec<std::result::Result<query::Query, error::ProcessorError>>`
note: method defined here
   --> src/query-processor/src/performance_optimizer.rs:313:18
    |
313 |     pub async fn process_batch_optimized(&self, queries: Vec<Query>) -> Result<Vec<OptimizationResult>> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^        -------------------

error[E0308]: mismatched types
   --> src/query-processor/src/performance_optimizer.rs:637:51
    |
637 |         let result1 = optimizer.process_optimized(query.clone()).await.unwrap();
    |                                 ----------------- ^^^^^^^^^^^^^ expected `Query`, found `Result<Query, ProcessorError>`
    |                                 |
    |                                 arguments to this method are incorrect
    |
    = note: expected struct `query::Query`
                 found enum `std::result::Result<query::Query, error::ProcessorError>`
note: method defined here
   --> src/query-processor/src/performance_optimizer.rs:190:18
    |
190 |     pub async fn process_optimized(&self, query: Query) -> Result<OptimizationResult> {
    |                  ^^^^^^^^^^^^^^^^^        ------------
help: consider using `Result::expect` to unwrap the `std::result::Result<query::Query, error::ProcessorError>` value, panicking if the value is a `Result::Err`
    |
637 |         let result1 = optimizer.process_optimized(query.clone().expect("REASON")).await.unwrap();
    |                                                                +++++++++++++++++

error[E0277]: the trait bound `ResponseBody<Body, NeverClassifyEos<...>>: Default` is not satisfied
   --> src/api/src/server.rs:169:14
    |
169 |             .layer(middleware)
    |              ^^^^^ unsatisfied trait bound
    |
    = help: the trait `std::default::Default` is not implemented for `tower_http::trace::ResponseBody<axum::body::Body, NeverClassifyEos<ServerErrorsFailureClass>>`
    = help: the trait `Service<axum::http::Request<ReqBody>>` is implemented for `Cors<S>`
    = note: required for `Cors<Trace<RequestLoggingMiddleware<...>, ...>>` to implement `Service<axum::http::Request<axum::body::Body>>`
    = note: the full name for the type has been written to '/Users/dmf/repos/doc-rag/target/debug/deps/api-be4de7c567ec1254.long-type-7807543765881867285.txt'
    = note: consider using `--verbose` to print the full type name to the console

error[E0308]: mismatched types
   --> src/query-processor/src/performance_optimizer.rs:644:51
    |
644 |         let result2 = optimizer.process_optimized(query).await.unwrap();
    |                                 ----------------- ^^^^^ expected `Query`, found `Result<Query, ProcessorError>`
    |                                 |
    |                                 arguments to this method are incorrect
    |
    = note: expected struct `query::Query`
                 found enum `std::result::Result<query::Query, error::ProcessorError>`
note: method defined here
   --> src/query-processor/src/performance_optimizer.rs:190:18
    |
190 |     pub async fn process_optimized(&self, query: Query) -> Result<OptimizationResult> {
    |                  ^^^^^^^^^^^^^^^^^        ------------
help: consider using `Result::expect` to unwrap the `std::result::Result<query::Query, error::ProcessorError>` value, panicking if the value is a `Result::Err`
    |
644 |         let result2 = optimizer.process_optimized(query.expect("REASON")).await.unwrap();
    |                                                        +++++++++++++++++

error[E0308]: mismatched types
   --> src/query-processor/src/performance_optimizer.rs:656:49
    |
656 |             let _ = optimizer.process_optimized(query).await.unwrap();
    |                               ----------------- ^^^^^ expected `Query`, found `Result<Query, ProcessorError>`
    |                               |
    |                               arguments to this method are incorrect
    |
    = note: expected struct `query::Query`
                 found enum `std::result::Result<query::Query, error::ProcessorError>`
note: method defined here
   --> src/query-processor/src/performance_optimizer.rs:190:18
    |
190 |     pub async fn process_optimized(&self, query: Query) -> Result<OptimizationResult> {
    |                  ^^^^^^^^^^^^^^^^^        ------------
help: consider using `Result::expect` to unwrap the `std::result::Result<query::Query, error::ProcessorError>` value, panicking if the value is a `Result::Err`
    |
656 |             let _ = optimizer.process_optimized(query.expect("REASON")).await.unwrap();
    |                                                      +++++++++++++++++

error[E0308]: mismatched types
   --> src/api/src/routes.rs:47:28
    |
47  |         .route("/metrics", get(metrics::export_metrics))
    |          -----             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<MetricsRegistry>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<std::sync::Arc<AppState>>`
               found struct `MethodRouter<std::sync::Arc<middleware::metrics::MetricsRegistry>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
  --> src/api/src/routes.rs:65:5
   |
64 |   fn health_routes() -> Router<Arc<AppState>> {
   |                         --------------------- expected `Router<std::sync::Arc<AppState>>` because of return type
65 | /     Router::new()
66 | |         .route("/", get(health::health_check))
67 | |         .route("/ready", get(health::readiness_check))
68 | |         .route("/live", get(health::liveness_check))
69 | |         .route("/components", get(health::component_health))
   | |____________________________________________________________^ expected `Router<Arc<AppState>>`, found `Router<Arc<ComponentClients>>`
   |
   = note: expected struct `Router<std::sync::Arc<AppState>>`
              found struct `Router<std::sync::Arc<clients::ComponentClients>>`

error[E0308]: mismatched types
  --> src/api/src/routes.rs:73:5
   |
72 |   fn auth_routes() -> Router<Arc<AppState>> {
   |                       --------------------- expected `Router<std::sync::Arc<AppState>>` because of return type
73 | /     Router::new()
74 | |         .route("/login", post(auth::login))
75 | |         .route("/refresh", post(auth::refresh_token))
76 | |         .route("/logout", post(auth::logout))
77 | |         .route("/me", get(auth::user_info))
   | |___________________________________________^ expected `Router<Arc<AppState>>`, found `Router<Arc<ApiConfig>>`
   |
   = note: expected struct `Router<std::sync::Arc<AppState>>`
              found struct `Router<std::sync::Arc<config::ApiConfig>>`

error[E0308]: mismatched types
   --> src/query-processor/src/performance_optimizer.rs:676:50
    |
676 |         let result = optimizer.process_optimized(query).await.unwrap();
    |                                ----------------- ^^^^^ expected `Query`, found `Result<Query, ProcessorError>`
    |                                |
    |                                arguments to this method are incorrect
    |
    = note: expected struct `query::Query`
                 found enum `std::result::Result<query::Query, error::ProcessorError>`
note: method defined here
   --> src/query-processor/src/performance_optimizer.rs:190:18
    |
190 |     pub async fn process_optimized(&self, query: Query) -> Result<OptimizationResult> {
    |                  ^^^^^^^^^^^^^^^^^        ------------
help: consider using `Result::expect` to unwrap the `std::result::Result<query::Query, error::ProcessorError>` value, panicking if the value is a `Result::Err`
    |
676 |         let result = optimizer.process_optimized(query.expect("REASON")).await.unwrap();
    |                                                       +++++++++++++++++

error[E0277]: the trait bound `ResponseBody<Body, NeverClassifyEos<...>>: Default` is not satisfied
   --> src/api/src/server.rs:169:14
    |
169 |             .layer(middleware)
    |              ^^^^^ unsatisfied trait bound
    |
    = help: the trait `std::default::Default` is not implemented for `tower_http::trace::ResponseBody<axum::body::Body, NeverClassifyEos<ServerErrorsFailureClass>>`
    = help: the trait `Service<axum::http::Request<ReqBody>>` is implemented for `Cors<S>`
    = note: required for `Cors<Trace<RequestLoggingMiddleware<...>, ...>>` to implement `Service<axum::http::Request<axum::body::Body>>`
    = note: the full name for the type has been written to '/Users/dmf/repos/doc-rag/target/debug/deps/api-eeca49d2e4996cef.long-type-7837008128801322795.txt'
    = note: consider using `--verbose` to print the full type name to the console

error[E0308]: mismatched types
   --> src/api/src/routes.rs:88:27
    |
88  |         .route("/ingest", post(documents::ingest_document))
    |          -----            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<std::sync::Arc<AppState>>`
               found struct `MethodRouter<std::sync::Arc<clients::ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/api/src/routes.rs:47:28
    |
47  |         .route("/metrics", get(metrics::export_metrics))
    |          -----             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<MetricsRegistry>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<Arc<AppState>>`
               found struct `MethodRouter<Arc<MetricsRegistry>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/api/src/routes.rs:89:33
    |
89  |         .route("/ingest/batch", post(documents::batch_ingest))
    |          -----                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<std::sync::Arc<AppState>>`
               found struct `MethodRouter<std::sync::Arc<clients::ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
  --> src/api/src/routes.rs:65:5
   |
64 |   fn health_routes() -> Router<Arc<AppState>> {
   |                         --------------------- expected `Router<Arc<AppState>>` because of return type
65 | /     Router::new()
66 | |         .route("/", get(health::health_check))
67 | |         .route("/ready", get(health::readiness_check))
68 | |         .route("/live", get(health::liveness_check))
69 | |         .route("/components", get(health::component_health))
   | |____________________________________________________________^ expected `Router<Arc<AppState>>`, found `Router<Arc<ComponentClients>>`
   |
   = note: expected struct `Router<Arc<AppState>>`
              found struct `Router<Arc<ComponentClients>>`

error[E0308]: mismatched types
  --> src/api/src/routes.rs:73:5
   |
72 |   fn auth_routes() -> Router<Arc<AppState>> {
   |                       --------------------- expected `Router<Arc<AppState>>` because of return type
73 | /     Router::new()
74 | |         .route("/login", post(auth::login))
75 | |         .route("/refresh", post(auth::refresh_token))
76 | |         .route("/logout", post(auth::logout))
77 | |         .route("/me", get(auth::user_info))
   | |___________________________________________^ expected `Router<Arc<AppState>>`, found `Router<Arc<ApiConfig>>`
   |
   = note: expected struct `Router<Arc<AppState>>`
              found struct `Router<Arc<ApiConfig>>`

error[E0308]: mismatched types
   --> src/api/src/routes.rs:90:50
    |
90  |         .route("/documents/:document_id/status", get(documents::get_document_status))
    |          -----                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<std::sync::Arc<AppState>>`
               found struct `MethodRouter<std::sync::Arc<clients::ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0277]: the trait bound `std::sync::Arc<config::ApiConfig>: FromRef<std::sync::Arc<clients::ComponentClients>>` is not satisfied
   --> src/api/src/routes.rs:93:31
    |
93  |         .route("/files", post(files::upload_file))
    |                          ---- ^^^^^^^^^^^^^^^^^^ the trait `FromRef<std::sync::Arc<clients::ComponentClients>>` is not implemented for `std::sync::Arc<config::ApiConfig>`
    |                          |
    |                          required by a bound introduced by this call
    |
    = help: the following other types implement trait `Handler<T, S>`:
              `MethodRouter<S>` implements `Handler<(), S>`
              `axum::handler::Layered<L, H, T, S>` implements `Handler<T, S>`
    = note: required for `axum::extract::State<std::sync::Arc<config::ApiConfig>>` to implement `FromRequestParts<std::sync::Arc<clients::ComponentClients>>`
    = note: required for `fn(State<Arc<ComponentClients>>, State<...>, ...) -> ... {upload_file}` to implement `Handler<(axum_core::extract::private::ViaRequest, axum::extract::State<std::sync::Arc<clients::ComponentClients>>, axum::extract::State<std::sync::Arc<config::ApiConfig>>, Multipart), std::sync::Arc<clients::ComponentClients>>`
note: required by a bound in `post`
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/method_routing.rs:443:1
    |
443 | top_level_handler_fn!(post, POST);
    | ^^^^^^^^^^^^^^^^^^^^^^----^^^^^^^
    | |                     |
    | |                     required by a bound in this function
    | required by this bound in `post`
    = note: the full name for the type has been written to '/Users/dmf/repos/doc-rag/target/debug/deps/api-be4de7c567ec1254.long-type-9485536390157740448.txt'
    = note: consider using `--verbose` to print the full type name to the console
    = note: this error originates in the macro `top_level_handler_fn` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `text` found for enum `std::result::Result` in the current scope
   --> src/query-processor/src/query.rs:767:26
    |
767 |         assert_eq!(query.text(), "What is PCI DSS?");
    |                          ^^^^ method not found in `Result<Query, ProcessorError>`
    |
note: the method `text` exists on the type `query::Query`
   --> src/query-processor/src/query.rs:246:5
    |
246 |     pub fn text(&self) -> &str {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Result::expect` to unwrap the `query::Query` value, panicking if the value is a `Result::Err`
    |
767 |         assert_eq!(query.expect("REASON").text(), "What is PCI DSS?");
    |                         +++++++++++++++++

error[E0308]: mismatched types
   --> src/api/src/routes.rs:88:27
    |
88  |         .route("/ingest", post(documents::ingest_document))
    |          -----            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<Arc<AppState>>`
               found struct `MethodRouter<Arc<ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0599]: no method named `validate` found for enum `std::result::Result` in the current scope
   --> src/query-processor/src/query.rs:768:23
    |
768 |         assert!(query.validate().is_ok());
    |                       ^^^^^^^^ method not found in `Result<Query, ProcessorError>`
    |
note: the method `validate` exists on the type `query::Query`
   --> src/query-processor/src/query.rs:291:5
    |
291 |     pub fn validate(&self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
note: `validation::Validator` defines an item `validate`, perhaps you need to implement it
   --> src/query-processor/src/validation.rs:668:1
    |
668 | trait Validator {
    | ^^^^^^^^^^^^^^^
help: consider using `Result::expect` to unwrap the `query::Query` value, panicking if the value is a `Result::Err`
    |
768 |         assert!(query.expect("REASON").validate().is_ok());
    |                      +++++++++++++++++

error[E0308]: mismatched types
   --> src/api/src/routes.rs:93:26
    |
93  |         .route("/files", post(files::upload_file))
    |          -----           ^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<std::sync::Arc<AppState>>`
               found struct `MethodRouter<std::sync::Arc<clients::ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/api/src/routes.rs:89:33
    |
89  |         .route("/ingest/batch", post(documents::batch_ingest))
    |          -----                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<Arc<AppState>>`
               found struct `MethodRouter<Arc<ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0599]: no method named `complexity_estimate` found for enum `std::result::Result` in the current scope
   --> src/query-processor/src/query.rs:782:31
    |
782 |         assert!(complex_query.complexity_estimate() > simple_query.complexity_estimate());
    |                               ^^^^^^^^^^^^^^^^^^^ method not found in `Result<Query, ProcessorError>`
    |
note: the method `complexity_estimate` exists on the type `query::Query`
   --> src/query-processor/src/query.rs:333:5
    |
333 |     pub fn complexity_estimate(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Result::expect` to unwrap the `query::Query` value, panicking if the value is a `Result::Err`
    |
782 |         assert!(complex_query.expect("REASON").complexity_estimate() > simple_query.complexity_estimate());
    |                              +++++++++++++++++

error[E0308]: mismatched types
   --> src/api/src/routes.rs:94:35
    |
94  |         .route("/files/:file_id", get(files::get_file_info))
    |          -----                    ^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<std::sync::Arc<AppState>>`
               found struct `MethodRouter<std::sync::Arc<clients::ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/api/src/routes.rs:90:50
    |
90  |         .route("/documents/:document_id/status", get(documents::get_document_status))
    |          -----                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<Arc<AppState>>`
               found struct `MethodRouter<Arc<ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0599]: no method named `complexity_estimate` found for enum `std::result::Result` in the current scope
   --> src/query-processor/src/query.rs:782:68
    |
782 |         assert!(complex_query.complexity_estimate() > simple_query.complexity_estimate());
    |                                                                    ^^^^^^^^^^^^^^^^^^^ method not found in `Result<Query, ProcessorError>`
    |
note: the method `complexity_estimate` exists on the type `query::Query`
   --> src/query-processor/src/query.rs:333:5
    |
333 |     pub fn complexity_estimate(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Result::expect` to unwrap the `query::Query` value, panicking if the value is a `Result::Err`
    |
782 |         assert!(complex_query.complexity_estimate() > simple_query.expect("REASON").complexity_estimate());
    |                                                                   +++++++++++++++++

error[E0277]: the trait bound `Arc<ApiConfig>: FromRef<Arc<ComponentClients>>` is not satisfied
   --> src/api/src/routes.rs:93:31
    |
93  |         .route("/files", post(files::upload_file))
    |                          ---- ^^^^^^^^^^^^^^^^^^ the trait `FromRef<Arc<ComponentClients>>` is not implemented for `Arc<ApiConfig>`
    |                          |
    |                          required by a bound introduced by this call
    |
    = help: the following other types implement trait `Handler<T, S>`:
              `MethodRouter<S>` implements `Handler<(), S>`
              `axum::handler::Layered<L, H, T, S>` implements `Handler<T, S>`
    = note: required for `axum::extract::State<Arc<ApiConfig>>` to implement `FromRequestParts<Arc<ComponentClients>>`
    = note: required for `fn(State<Arc<ComponentClients>>, State<...>, ...) -> ... {upload_file}` to implement `Handler<(axum_core::extract::private::ViaRequest, axum::extract::State<Arc<ComponentClients>>, axum::extract::State<Arc<ApiConfig>>, Multipart), Arc<ComponentClients>>`
note: required by a bound in `post`
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/method_routing.rs:443:1
    |
443 | top_level_handler_fn!(post, POST);
    | ^^^^^^^^^^^^^^^^^^^^^^----^^^^^^^
    | |                     |
    | |                     required by a bound in this function
    | required by this bound in `post`
    = note: the full name for the type has been written to '/Users/dmf/repos/doc-rag/target/debug/deps/api-eeca49d2e4996cef.long-type-16767319582543888035.txt'
    = note: consider using `--verbose` to print the full type name to the console
    = note: this error originates in the macro `top_level_handler_fn` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `validate` found for enum `std::result::Result` in the current scope
   --> src/query-processor/src/query.rs:788:33
    |
788 |         assert!(malicious_query.validate().is_err());
    |                                 ^^^^^^^^ method not found in `Result<Query, ProcessorError>`
    |
note: the method `validate` exists on the type `query::Query`
   --> src/query-processor/src/query.rs:291:5
    |
291 |     pub fn validate(&self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
note: `validation::Validator` defines an item `validate`, perhaps you need to implement it
   --> src/query-processor/src/validation.rs:668:1
    |
668 | trait Validator {
    | ^^^^^^^^^^^^^^^
help: consider using `Result::expect` to unwrap the `query::Query` value, panicking if the value is a `Result::Err`
    |
788 |         assert!(malicious_query.expect("REASON").validate().is_err());
    |                                +++++++++++++++++

error[E0308]: mismatched types
   --> src/api/src/routes.rs:95:35
    |
95  |         .route("/files/:file_id", delete(files::delete_file))
    |          -----                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<std::sync::Arc<AppState>>`
               found struct `MethodRouter<std::sync::Arc<clients::ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/api/src/routes.rs:93:26
    |
93  |         .route("/files", post(files::upload_file))
    |          -----           ^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<Arc<AppState>>`
               found struct `MethodRouter<Arc<ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0599]: no method named `validate` found for enum `std::result::Result` in the current scope
   --> src/query-processor/src/query.rs:797:23
    |
797 |         assert!(query.validate().is_err());
    |                       ^^^^^^^^ method not found in `Result<Query, ProcessorError>`
    |
note: the method `validate` exists on the type `query::Query`
   --> src/query-processor/src/query.rs:291:5
    |
291 |     pub fn validate(&self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
note: `validation::Validator` defines an item `validate`, perhaps you need to implement it
   --> src/query-processor/src/validation.rs:668:1
    |
668 | trait Validator {
    | ^^^^^^^^^^^^^^^
help: consider using `Result::expect` to unwrap the `query::Query` value, panicking if the value is a `Result::Err`
    |
797 |         assert!(query.expect("REASON").validate().is_err());
    |                      +++++++++++++++++

error[E0063]: missing fields `processing_time` and `timestamp` in initializer of `types::SemanticAnalysis`
   --> src/query-processor/src/query.rs:805:24
    |
805 |         let analysis = SemanticAnalysis {
    |                        ^^^^^^^^^^^^^^^^ missing `processing_time` and `timestamp`

error[E0308]: mismatched types
   --> src/query-processor/src/query.rs:830:23
    |
830 |             features: HashMap::new(),
    |                       ^^^^^^^^^^^^^^ expected `Vec<String>`, found `HashMap<_, _>`
    |
    = note: expected struct `Vec<std::string::String>`
               found struct `std::collections::HashMap<_, _>`

error[E0308]: mismatched types
   --> src/api/src/routes.rs:98:29
    |
98  |         .route("/query/v1", post(queries::process_query))
    |          -----              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<std::sync::Arc<AppState>>`
               found struct `MethodRouter<std::sync::Arc<clients::ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/api/src/routes.rs:94:35
    |
94  |         .route("/files/:file_id", get(files::get_file_info))
    |          -----                    ^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<Arc<AppState>>`
               found struct `MethodRouter<Arc<ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0599]: no function or associated item named `new` found for struct `types::ProcessedQuery` in the current scope
    --> src/query-processor/src/query.rs:863:41
     |
863  |         let processed = ProcessedQuery::new(
     |                                         ^^^ function or associated item not found in `ProcessedQuery`
     |
    ::: src/query-processor/src/types.rs:1176:1
     |
1176 | pub struct ProcessedQuery {
     | ------------------------- function or associated item `new` not found for this struct
     |
     = help: items from traits can only be used if the trait is implemented and in scope
     = note: the following traits define an item `new`, perhaps you need to implement one of them:
             candidate #1: `Bit`
             candidate #2: `NewBlockCipher`
             candidate #3: `NewCipher`
             candidate #4: `NewMac`
             candidate #5: `ahash::HashMapExt`
             candidate #6: `ahash::HashSetExt`
             candidate #7: `candle_core::backend::BackendDevice`
             candidate #8: `candle_nn::optim::Optimizer`
             candidate #9: `criterion::stats::tuple::TupledDistributionsBuilder`
             candidate #10: `ndarray::data_traits::DataOwned`
             candidate #11: `parking_lot_core::thread_parker::ThreadParkerT`
             candidate #12: `plotters::style::font::FontData`
             candidate #13: `rand::distr::uniform::UniformSampler`
             candidate #14: `rand::distributions::uniform::UniformSampler`
             candidate #15: `rand::distributions::uniform::UniformSampler`
             candidate #16: `ring::aead::BoundKey`
             candidate #17: `smartcore::api::SupervisedEstimator`
             candidate #18: `smartcore::api::SupervisedEstimatorBorrow`
             candidate #19: `smartcore::metrics::Metrics`
             candidate #20: `sysctl::traits::Sysctl`
             candidate #21: `sysctl::traits::Sysctl`

error[E0308]: mismatched types
   --> src/api/src/routes.rs:95:35
    |
95  |         .route("/files/:file_id", delete(files::delete_file))
    |          -----                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<Arc<AppState>>`
               found struct `MethodRouter<Arc<ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/api/src/routes.rs:100:36
    |
100 |         .route("/queries/history", get(queries::get_query_history))
    |          -----                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<std::sync::Arc<AppState>>`
               found struct `MethodRouter<std::sync::Arc<clients::ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/api/src/routes.rs:98:29
    |
98  |         .route("/query/v1", post(queries::process_query))
    |          -----              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<Arc<AppState>>`
               found struct `MethodRouter<Arc<ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/api/src/routes.rs:101:36
    |
101 |         .route("/queries/metrics", get(queries::get_query_metrics))
    |          -----                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<std::sync::Arc<AppState>>`
               found struct `MethodRouter<std::sync::Arc<clients::ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
    --> src/query-processor/src/strategy.rs:1044:41
     |
1044 |         let selection = selector.select(&query, &analysis, &intent, &entities).await.unwrap();
     |                                  ------ ^^^^^^ expected `&Query`, found `&Result<Query, ProcessorError>`
     |                                  |
     |                                  arguments to this method are incorrect
     |
     = note: expected reference `&query::Query`
                found reference `&std::result::Result<query::Query, error::ProcessorError>`
note: method defined here
    --> src/query-processor/src/strategy.rs:57:18
     |
57   |     pub async fn select(
     |                  ^^^^^^
58   |         &self,
59   |         query: &Query,
     |         -------------

error[E0308]: mismatched types
   --> src/api/src/routes.rs:100:36
    |
100 |         .route("/queries/history", get(queries::get_query_history))
    |          -----                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<Arc<AppState>>`
               found struct `MethodRouter<Arc<ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/api/src/routes.rs:101:36
    |
101 |         .route("/queries/metrics", get(queries::get_query_metrics))
    |          -----                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<Arc<AppState>>`
               found struct `MethodRouter<Arc<ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/api/src/routes.rs:102:38
    |
102 |         .route("/queries/:query_id", get(queries::get_query_result))
    |          -----                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<std::sync::Arc<AppState>>`
               found struct `MethodRouter<std::sync::Arc<clients::ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

warning: unused variable: `err`
   --> src/query-processor/src/error.rs:483:13
    |
483 |     fn from(err: tokio::time::error::Elapsed) -> Self {
    |             ^^^ help: if this is intentional, prefix it with an underscore: `_err`

error[E0308]: mismatched types
   --> src/api/src/routes.rs:102:38
    |
102 |         .route("/queries/:query_id", get(queries::get_query_result))
    |          -----                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<Arc<AppState>>`
               found struct `MethodRouter<Arc<ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/api/src/routes.rs:103:38
    |
103 |         .route("/queries/:query_id", delete(queries::cancel_query))
    |          -----                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<std::sync::Arc<AppState>>`
               found struct `MethodRouter<std::sync::Arc<clients::ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/api/src/routes.rs:103:38
    |
103 |         .route("/queries/:query_id", delete(queries::cancel_query))
    |          -----                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<Arc<AppState>>`
               found struct `MethodRouter<Arc<ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/api/src/routes.rs:104:46
    |
104 |         .route("/queries/:query_id/similar", get(queries::get_similar_queries))
    |          -----                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<std::sync::Arc<AppState>>`
               found struct `MethodRouter<std::sync::Arc<clients::ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/api/src/routes.rs:104:46
    |
104 |         .route("/queries/:query_id/similar", get(queries::get_similar_queries))
    |          -----                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `MethodRouter<Arc<AppState>>`, found `MethodRouter<Arc<ComponentClients>>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected struct `MethodRouter<Arc<AppState>>`
               found struct `MethodRouter<Arc<ComponentClients>>`
note: method defined here
   --> /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-0.7.9/src/routing/mod.rs:164:12
    |
164 |     pub fn route(self, path: &str, method_router: MethodRouter<S>) -> Self {
    |            ^^^^^

error[E0308]: mismatched types
   --> src/api/src/routes.rs:108:5
    |
107 |   fn admin_routes() -> Router<Arc<AppState>> {
    |                        --------------------- expected `Router<std::sync::Arc<AppState>>` because of return type
108 | /     Router::new()
109 | |         .route("/system/info", get(admin::system_info))
110 | |         .route("/system/components", get(admin::component_status))
111 | |         .route("/system/reset", post(admin::reset_components))
    | |______________________________________________________________^ expected `Router<Arc<AppState>>`, found `Router<Arc<ComponentClients>>`
    |
    = note: expected struct `Router<std::sync::Arc<AppState>>`
               found struct `Router<std::sync::Arc<clients::ComponentClients>>`

error[E0308]: mismatched types
   --> src/api/src/routes.rs:108:5
    |
107 |   fn admin_routes() -> Router<Arc<AppState>> {
    |                        --------------------- expected `Router<Arc<AppState>>` because of return type
108 | /     Router::new()
109 | |         .route("/system/info", get(admin::system_info))
110 | |         .route("/system/components", get(admin::component_status))
111 | |         .route("/system/reset", post(admin::reset_components))
    | |______________________________________________________________^ expected `Router<Arc<AppState>>`, found `Router<Arc<ComponentClients>>`
    |
    = note: expected struct `Router<Arc<AppState>>`
               found struct `Router<Arc<ComponentClients>>`

For more information about this error, try `rustc --explain E0308`.
warning: `integration` (lib test) generated 4 warnings (2 duplicates)
error: could not compile `integration` (lib test) due to 3 previous errors; 4 warnings emitted
warning: unused variable: `characteristics`
   --> src/query-processor/src/strategy.rs:285:36
    |
285 |     fn get_default_strategy(&self, characteristics: &QueryCharacteristics) -> SearchStrategy {
    |                                    ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_characteristics`

warning: unused variable: `config`
   --> src/query-processor/src/strategy.rs:468:28
    |
468 |     fn load_strategy_rules(config: &crate::config::StrategyConfig) -> Result<Vec<StrategyRule>> {
    |                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`

error[E0599]: no method named `into_response` found for tuple `(axum::http::StatusCode, &'static str)` in the current scope
   --> src/api/src/middleware/request_logging.rs:383:43
    |
383 |                 (StatusCode::OK, "Hello").into_response()
    |                                           ^^^^^^^^^^^^^ method not found in `(StatusCode, &str)`
    |
   ::: /Users/dmf/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axum-core-0.4.5/src/response/into_response.rs:115:8
    |
115 |     fn into_response(self) -> Response;
    |        ------------- the method is available for `(axum::http::StatusCode, &'static str)` here
    |
    = help: items from traits can only be used if the trait is in scope
help: trait `IntoResponse` which provides `into_response` is implemented but not in scope; perhaps you want to import it
    |
330 +     use axum::response::IntoResponse;
    |

error[E0063]: missing fields `processing_time` and `timestamp` in initializer of `types::SemanticAnalysis`
   --> src/query-processor/src/validation.rs:680:24
    |
680 |         let analysis = SemanticAnalysis {
    |                        ^^^^^^^^^^^^^^^^ missing `processing_time` and `timestamp`

error[E0560]: struct `types::KeyTerm` has no field named `related_terms`
   --> src/query-processor/src/validation.rs:724:17
    |
724 |                 related_terms: vec![],
    |                 ^^^^^^^^^^^^^ `types::KeyTerm` does not have this field
    |
    = note: available fields are: `ngram_size`, `contexts`

error[E0560]: struct `types::KeyTerm` has no field named `metadata`
   --> src/query-processor/src/validation.rs:725:17
    |
725 |                 metadata: HashMap::new(),
    |                 ^^^^^^^^ `types::KeyTerm` does not have this field
    |
    = note: available fields are: `ngram_size`, `contexts`

error[E0308]: mismatched types
   --> src/query-processor/src/validation.rs:766:29
    |
766 |         ProcessedQuery::new(query, analysis, entities, key_terms, intent, strategy)
    |         ------------------- ^^^^^ expected `Query`, found `Result<Query, ProcessorError>`
    |         |
    |         arguments to this function are incorrect
    |
    = note: expected struct `query::Query`
                 found enum `std::result::Result<query::Query, error::ProcessorError>`
note: associated function defined here
   --> src/query-processor/src/query.rs:455:12
    |
455 |     pub fn new(
    |            ^^^
456 |         query: Query,
    |         ------------
help: consider using `Result::expect` to unwrap the `std::result::Result<query::Query, error::ProcessorError>` value, panicking if the value is a `Result::Err`
    |
766 |         ProcessedQuery::new(query.expect("REASON"), analysis, entities, key_terms, intent, strategy)
    |                                  +++++++++++++++++

error[E0308]: mismatched types
   --> src/query-processor/src/lib.rs:439:40
    |
439 |         let result = processor.process(query).await;
    |                                ------- ^^^^^ expected `Query`, found `Result<Query, ProcessorError>`
    |                                |
    |                                arguments to this method are incorrect
    |
    = note: expected struct `query::Query`
                 found enum `std::result::Result<query::Query, error::ProcessorError>`
note: method defined here
   --> src/query-processor/src/lib.rs:147:18
    |
147 |     pub async fn process(&self, query: Query) -> Result<ProcessedQuery> {
    |                  ^^^^^^^        ------------
help: consider using `Result::expect` to unwrap the `std::result::Result<query::Query, error::ProcessorError>` value, panicking if the value is a `Result::Err`
    |
439 |         let result = processor.process(query.expect("REASON")).await;
    |                                             +++++++++++++++++

error[E0308]: mismatched types
   --> src/query-processor/src/lib.rs:458:47
    |
458 |         let results = processor.process_batch(queries).await;
    |                                 ------------- ^^^^^^^ expected `Vec<Query>`, found `Vec<Result<Query, ProcessorError>>`
    |                                 |
    |                                 arguments to this method are incorrect
    |
    = note: expected struct `Vec<query::Query>`
               found struct `Vec<std::result::Result<query::Query, error::ProcessorError>>`
note: method defined here
   --> src/query-processor/src/lib.rs:222:18
    |
222 |     pub async fn process_batch(&self, queries: Vec<Query>) -> Result<Vec<ProcessedQuery>> {
    |                  ^^^^^^^^^^^^^        -------------------

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<(usize, usize), errors::ApiError>`
   --> src/api/src/validation.rs:303:9
    |
303 |         assert_eq!(validate_pagination(Some(50), Some(0)), Ok((50, 0)));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         std::result::Result<(usize, usize), errors::ApiError>
    |         std::result::Result<(usize, usize), errors::ApiError>
    |
note: an implementation of `PartialEq` might be missing for `errors::ApiError`
   --> src/api/src/errors.rs:11:1
    |
11  | pub enum ApiError {
    | ^^^^^^^^^^^^^^^^^ must implement `PartialEq`
    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `errors::ApiError` with `#[derive(PartialEq)]`
   --> src/api/src/errors.rs:11:1
    |
11  + #[derive(PartialEq)]
12  | pub enum ApiError {
    |

error[E0369]: binary operation `==` cannot be applied to type `std::result::Result<(usize, usize), errors::ApiError>`
   --> src/api/src/validation.rs:304:9
    |
304 |         assert_eq!(validate_pagination(None, None), Ok((50, 0)));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         std::result::Result<(usize, usize), errors::ApiError>
    |         std::result::Result<(usize, usize), errors::ApiError>
    |
note: an implementation of `PartialEq` might be missing for `errors::ApiError`
   --> src/api/src/errors.rs:11:1
    |
11  | pub enum ApiError {
    | ^^^^^^^^^^^^^^^^^ must implement `PartialEq`
    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `errors::ApiError` with `#[derive(PartialEq)]`
   --> src/api/src/errors.rs:11:1
    |
11  + #[derive(PartialEq)]
12  | pub enum ApiError {
    |

warning: unused variable: `feature`
   --> src/query-processor/src/lib.rs:348:27
    |
348 |                 .map(|(i, feature)| (format!("feature_{}", i), 1.0))
    |                           ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_feature`

warning: unused variable: `routes`
   --> src/api/src/routes.rs:122:13
    |
122 |         let routes = create_routes(config);
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_routes`

warning: unused variable: `health_router`
   --> src/api/src/routes.rs:131:13
    |
131 |         let health_router = health_routes();
    |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_health_router`

warning: unused variable: `auth_router`
   --> src/api/src/routes.rs:132:13
    |
132 |         let auth_router = auth_routes();
    |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_auth_router`

warning: unused variable: `api_router`
   --> src/api/src/routes.rs:133:13
    |
133 |         let api_router = api_routes();
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_api_router`

warning: unused variable: `admin_router`
   --> src/api/src/routes.rs:134:13
    |
134 |         let admin_router = admin_routes();
    |             ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_admin_router`

warning: variable does not need to be mutable
    --> src/query-processor/src/consensus.rs:2944:13
     |
2944 |         let mut manager = ConsensusManager::new(
     |             ----^^^^^^^
     |             |
     |             help: remove this `mut`
     |
     = note: `#[warn(unused_mut)]` on by default

warning: struct `QueryProcessorProxy` is never constructed
   --> src/query-processor/src/lib.rs:288:8
    |
288 | struct QueryProcessorProxy {
    |        ^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: field `topic_neural_net` is never read
   --> src/query-processor/src/analyzer.rs:615:5
    |
610 | pub struct SemanticAnalyzer {
    |            ---------------- field in this struct
...
615 |     topic_neural_net: Option<NeuralNet>,
    |     ^^^^^^^^^^^^^^^^

warning: field `model_config` is never read
   --> src/query-processor/src/classifier.rs:500:5
    |
499 | pub struct NeuralClassifier {
    |            ---------------- field in this struct
500 |     model_config: NeuralModelConfig,
    |     ^^^^^^^^^^^^
    |
    = note: `NeuralClassifier` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: associated function `parse_activation_function` is never used
   --> src/query-processor/src/classifier.rs:668:8
    |
508 | impl NeuralClassifier {
    | --------------------- associated function in this implementation
...
668 |     fn parse_activation_function(activation: &str) -> ruv_fann::ActivationFunction {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: fields `rule_weight`, `neural_weight`, and `combination_method` are never read
   --> src/query-processor/src/classifier.rs:876:5
    |
875 | pub struct EnsembleClassifier {
    |            ------------------ fields in this struct
876 |     rule_weight: f64,
    |     ^^^^^^^^^^^
877 |     neural_weight: f64,
    |     ^^^^^^^^^^^^^
878 |     combination_method: EnsembleCombination,
    |     ^^^^^^^^^^^^^^^^^^
    |
    = note: `EnsembleClassifier` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `stop_words` is never read
   --> src/query-processor/src/classifier.rs:924:5
    |
923 | pub struct FeatureExtractor {
    |            ---------------- field in this struct
924 |     stop_words: std::collections::HashSet<String>,
    |     ^^^^^^^^^^
    |
    = note: `FeatureExtractor` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: multiple methods are never used
    --> src/query-processor/src/consensus.rs:1156:14
     |
978  | impl ConsensusManager {
     | --------------------- methods in this implementation
...
1156 |     async fn initiate_consensus_round(
     |              ^^^^^^^^^^^^^^^^^^^^^^^^
...
1207 |     async fn process_message(&self, message: ConsensusMessage) -> Result<()> {
     |              ^^^^^^^^^^^^^^^
...
1247 |     async fn handle_request(
     |              ^^^^^^^^^^^^^^
...
1270 |     async fn handle_pre_prepare(
     |              ^^^^^^^^^^^^^^^^^^
...
1329 |     async fn handle_prepare(
     |              ^^^^^^^^^^^^^^
...
1380 |     async fn handle_commit(
     |              ^^^^^^^^^^^^^
...
2141 |     async fn fallback_consensus(&self, payload: ConsensusPayload) -> Result<ConsensusResult> {
     |              ^^^^^^^^^^^^^^^^^^
...
2168 |     async fn consensus_entity_extraction(&self, results: Vec<NodeEntityResult>) -> Result<Vec<ExtractedEntity>> {
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
2204 |     async fn consensus_classification(&self, results: Vec<NodeClassificationResult>) -> Result<ClassificationResult> {
     |              ^^^^^^^^^^^^^^^^^^^^^^^^
...
2244 |     async fn consensus_strategy(&self, results: Vec<NodeStrategyResult>) -> Result<StrategyRecommendation> {
     |              ^^^^^^^^^^^^^^^^^^
...
2285 |     async fn consensus_validation(&self, results: Vec<NodeValidationResult>) -> Result<ValidationResult> {
     |              ^^^^^^^^^^^^^^^^^^^^
...
2324 |     async fn complete_pending_request(&self, request_id: String, result: ConsensusResult) -> Result<()> {
     |              ^^^^^^^^^^^^^^^^^^^^^^^^
...
2337 |     async fn handle_view_change(
     |              ^^^^^^^^^^^^^^^^^^
...
2349 |     async fn handle_new_view(
     |              ^^^^^^^^^^^^^^^
...
2362 |     async fn handle_heartbeat(
     |              ^^^^^^^^^^^^^^^^
...
2401 |     async fn broadcast_message(&self, message: ConsensusMessage) -> Result<()> {
     |              ^^^^^^^^^^^^^^^^^
...
2415 |     async fn start_message_processor(&self) -> Result<()> {
     |              ^^^^^^^^^^^^^^^^^^^^^^^
...
2439 |     async fn start_heartbeat_task(&self) -> Result<()> {
     |              ^^^^^^^^^^^^^^^^^^^^
...
2485 |     async fn start_view_change_monitor(&self) -> Result<()> {
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^
...
2514 |     async fn execute_consensus_operation(&self, payload: ConsensusPayload) -> Result<ConsensusResult> {
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `generate_round_id` is never used
    --> src/query-processor/src/consensus.rs:2624:4
     |
2624 | fn generate_round_id() -> RoundId {
     |    ^^^^^^^^^^^^^^^^^

warning: function `compute_digest` is never used
    --> src/query-processor/src/consensus.rs:2632:4
     |
2632 | fn compute_digest(payload: &ConsensusPayload) -> String {
     |    ^^^^^^^^^^^^^^

warning: function `get_system_load` is never used
    --> src/query-processor/src/consensus.rs:2643:10
     |
2643 | async fn get_system_load() -> f64 {
     |          ^^^^^^^^^^^^^^^

warning: function `get_system_resources` is never used
    --> src/query-processor/src/consensus.rs:2687:10
     |
2687 | async fn get_system_resources() -> ResourceStatus {
     |          ^^^^^^^^^^^^^^^^^^^^

warning: field `threshold` is never read
   --> src/query-processor/src/consensus.rs:124:13
    |
123 |     pub struct FaultTolerance {
    |                -------------- field in this struct
124 |         pub threshold: f64,
    |             ^^^^^^^^^

warning: field `config` is never read
   --> src/query-processor/src/consensus.rs:150:13
    |
149 |     pub struct DAAManager {
    |                ---------- field in this struct
150 |         pub config: DAAConfig,
    |             ^^^^^^

warning: multiple fields are never read
   --> src/query-processor/src/consensus.rs:177:13
    |
176 |     pub struct DAAConfig {
    |                --------- fields in this struct
177 |         pub consensus_timeout: Duration,
    |             ^^^^^^^^^^^^^^^^^
178 |         pub fault_tolerance_threshold: f64,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^
179 |         pub enable_learning: bool,
    |             ^^^^^^^^^^^^^^^
180 |         pub learning_rate: f64,
    |             ^^^^^^^^^^^^^
181 |         pub min_nodes: usize,
    |             ^^^^^^^^^
182 |         pub heartbeat_interval: Duration,
    |             ^^^^^^^^^^^^^^^^^^
183 |         pub view_change_timeout: Duration,
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = note: `DAAConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `min_nodes` is never read
  --> src/query-processor/src/consensus.rs:35:17
   |
33 |         pub struct ByzantineConsensus {
   |                    ------------------ field in this struct
34 |             pub threshold: f64,
35 |             pub min_nodes: usize,
   |                 ^^^^^^^^^
   |
   = note: `ByzantineConsensus` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `description` is never read
   --> src/query-processor/src/entities.rs:559:5
    |
557 | pub struct EntityPattern {
    |            ------------- field in this struct
558 |     regex: Regex,
559 |     description: String,
    |     ^^^^^^^^^^^
    |
    = note: `EntityPattern` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `entries` and `access_times` are never read
   --> src/query-processor/src/performance_optimizer.rs:100:5
    |
99  | pub struct ValidationCache {
    |            --------------- fields in this struct
100 |     entries: HashMap<String, CachedValidationResult>,
    |     ^^^^^^^
101 |     access_times: HashMap<String, Instant>,
    |     ^^^^^^^^^^^^
    |
    = note: `ValidationCache` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `query_hash`, `access_count`, and `processing_time` are never read
   --> src/query-processor/src/performance_optimizer.rs:107:5
    |
106 | pub struct CachedQueryResult {
    |            ----------------- fields in this struct
107 |     query_hash: String,
    |     ^^^^^^^^^^
...
110 |     access_count: u64,
    |     ^^^^^^^^^^^^
111 |     processing_time: Duration,
    |     ^^^^^^^^^^^^^^^
    |
    = note: `CachedQueryResult` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `validation_hash`, `is_valid`, `confidence_score`, `created_at`, and `access_count` are never read
   --> src/query-processor/src/performance_optimizer.rs:117:5
    |
116 | pub struct CachedValidationResult {
    |            ---------------------- fields in this struct
117 |     validation_hash: String,
    |     ^^^^^^^^^^^^^^^
118 |     is_valid: bool,
    |     ^^^^^^^^
119 |     confidence_score: f64,
    |     ^^^^^^^^^^^^^^^^
120 |     created_at: Instant,
    |     ^^^^^^^^^^
121 |     access_count: u64,
    |     ^^^^^^^^^^^^
    |
    = note: `CachedValidationResult` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `task_id`, `query`, `validation_type`, and `priority` are never read
   --> src/query-processor/src/performance_optimizer.rs:127:5
    |
126 | pub struct ValidationTask {
    |            -------------- fields in this struct
127 |     task_id: Uuid,
    |     ^^^^^^^
128 |     query: Query,
    |     ^^^^^
129 |     validation_type: ValidationType,
    |     ^^^^^^^^^^^^^^^
130 |     priority: ValidationPriority,
    |     ^^^^^^^^
    |
    = note: `ValidationTask` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `strategy_templates` is never read
   --> src/query-processor/src/strategy.rs:431:5
    |
429 | pub struct StrategyEngine {
    |            -------------- field in this struct
430 |     strategy_rules: Vec<StrategyRule>,
431 |     strategy_templates: HashMap<String, SearchStrategy>,
    |     ^^^^^^^^^^^^^^^^^^
    |
    = note: `StrategyEngine` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: missing documentation for an associated function
   --> src/query-processor/src/analyzer.rs:220:5
    |
220 |     pub fn new(config: &crate::config::AnalyzerConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> src/query-processor/src/lib.rs:45:9
    |
45  | #![warn(missing_docs)]
    |         ^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/analyzer.rs:226:5
    |
226 |     pub fn detect(&self, text: &str) -> Result<Option<Language>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/analyzer.rs:263:5
    |
263 |     pub fn new(config: &crate::config::PreprocessingConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/analyzer.rs:269:5
    |
269 |     pub fn preprocess(&self, text: &str, language: &Option<Language>) -> Result<PreprocessedText> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/analyzer.rs:385:5
    |
385 |     pub fn new(config: &crate::config::AnalyzerConfig) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/analyzer.rs:391:5
    |
391 |     pub async fn analyze(&self, text: &PreprocessedText) -> Result<SyntacticFeatures> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/analyzer.rs:658:5
    |
658 |     pub async fn new(config: &crate::config::SemanticAnalysisConfig) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/analyzer.rs:680:5
    |
680 | /     pub async fn analyze(
681 | |         &self,
682 | |         text: &PreprocessedText,
683 | |         syntactic: &SyntacticFeatures,
684 | |     ) -> Result<SemanticFeatures> {
    | |_________________________________^

warning: missing documentation for an associated function
   --> src/query-processor/src/classifier.rs:165:5
    |
165 |     pub fn new(config: &crate::config::IntentClassifierConfig) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/classifier.rs:175:5
    |
175 | /     pub async fn classify(
176 | |         &self,
177 | |         query: &Query,
178 | |         analysis: &SemanticAnalysis,
179 | |         features: &ClassificationFeatures,
180 | |     ) -> Result<IntentClassification> {
    | |_____________________________________^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:372:5
    |
372 |     pub name: String,
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:373:5
    |
373 |     pub intent: QueryIntent,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:374:5
    |
374 |     pub conditions: Vec<RuleCondition>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:375:5
    |
375 |     pub confidence: f64,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/classifier.rs:379:5
    |
379 | /     pub fn evaluate(
380 | |         &self,
381 | |         text: &str,
382 | |         analysis: &SemanticAnalysis,
383 | |         _features: &ClassificationFeatures,
384 | |     ) -> Result<Option<f64>> {
    | |____________________________^

warning: missing documentation for a variant
   --> src/query-processor/src/classifier.rs:408:5
    |
408 |     ContainsPattern(String),
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/classifier.rs:409:5
    |
409 |     ContainsEntity(String),
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/classifier.rs:410:5
    |
410 |     HasSentiment(String),
    |     ^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/classifier.rs:411:5
    |
411 |     QuestionWordCount(usize),
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/classifier.rs:412:5
    |
412 |     TextLength(usize, usize), // min, max
    |     ^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/classifier.rs:416:5
    |
416 |     pub fn matches(&self, text: &str, analysis: &SemanticAnalysis) -> Result<bool> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:451:5
    |
451 |     pub name: String,
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:452:5
    |
452 |     pub keywords: Vec<String>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:453:5
    |
453 |     pub structures: Vec<String>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:454:5
    |
454 |     pub confidence: f64,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:455:5
    |
455 |     pub boost_factors: HashMap<String, f64>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/classifier.rs:459:5
    |
459 | /     pub fn calculate_score(
460 | |         &self,
461 | |         text: &str,
462 | |         _analysis: &SemanticAnalysis,
463 | |         _features: &ClassificationFeatures,
464 | |     ) -> Result<f64> {
    | |____________________^

warning: missing documentation for an associated function
   --> src/query-processor/src/classifier.rs:686:5
    |
686 |     pub async fn new(config: &crate::config::IntentClassifierConfig) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/classifier.rs:705:5
    |
705 | /     pub async fn classify(
706 | |         &self,
707 | |         query: &Query,
708 | |         _analysis: &SemanticAnalysis,
709 | |         features: &ClassificationFeatures,
710 | |     ) -> Result<IntentClassification> {
    | |_____________________________________^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:846:5
    |
846 |     pub model_path: Option<String>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:847:5
    |
847 |     pub input_size: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:848:5
    |
848 |     pub hidden_layers: Vec<usize>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:849:5
    |
849 |     pub output_size: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:850:5
    |
850 |     pub activation_function: String,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:851:5
    |
851 |     pub learning_rate: f32,
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:852:5
    |
852 |     pub training_algorithm: String,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:853:5
    |
853 |     pub max_epochs: u32,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/classifier.rs:854:5
    |
854 |     pub desired_error: f32,
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/classifier.rs:882:5
    |
882 | /     pub async fn new(
883 | |         _config: &crate::config::IntentClassifierConfig,
884 | |         _rule_classifier: &RuleBasedClassifier,
885 | |         _neural_classifier: Option<&NeuralClassifier>,
886 | |     ) -> Result<Self> {
    | |_____________________^

warning: missing documentation for a method
   --> src/query-processor/src/classifier.rs:894:5
    |
894 | /     pub async fn classify(
895 | |         &self,
896 | |         _query: &Query,
897 | |         _analysis: &SemanticAnalysis,
898 | |         features: &ClassificationFeatures,
899 | |     ) -> Result<IntentClassification> {
    | |_____________________________________^

warning: missing documentation for a variant
   --> src/query-processor/src/classifier.rs:916:5
    |
916 |     WeightedAverage,
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/classifier.rs:917:5
    |
917 |     Voting,
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/classifier.rs:918:5
    |
918 |     Stacking,
    |     ^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/classifier.rs:928:5
    |
928 |     pub fn new(config: &crate::config::IntentClassifierConfig) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/classifier.rs:939:5
    |
939 | /     pub async fn extract_features(
940 | |         &self,
941 | |         query: &Query,
942 | |         analysis: &SemanticAnalysis,
943 | |     ) -> Result<ClassificationFeatures> {
    | |_______________________________________^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1024:5
     |
1024 |     pub text_length: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1025:5
     |
1025 |     pub word_count: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1026:5
     |
1026 |     pub sentence_count: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1027:5
     |
1027 |     pub question_word_count: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1028:5
     |
1028 |     pub entity_count: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1029:5
     |
1029 |     pub has_question_mark: bool,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1030:5
     |
1030 |     pub has_comparison_words: bool,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1031:5
     |
1031 |     pub has_compliance_terms: bool,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1032:5
     |
1032 |     pub sentiment_score: f32,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1033:5
     |
1033 |     pub complexity_score: f32,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1034:5
     |
1034 |     pub pos_tag_distribution: HashMap<String, f32>,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1035:5
     |
1035 |     pub dependency_features: DependencyFeatures,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1036:5
     |
1036 |     pub semantic_features: ExtractedSemanticFeatures,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1037:5
     |
1037 |     pub feature_names: Vec<String>,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1043:5
     |
1043 |     pub dependency_count: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1044:5
     |
1044 |     pub has_subject_verb: bool,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1045:5
     |
1045 |     pub has_direct_object: bool,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1046:5
     |
1046 |     pub has_question_structure: bool,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1052:5
     |
1052 |     pub semantic_role_count: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1053:5
     |
1053 |     pub coreference_chain_count: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1054:5
     |
1054 |     pub has_sentiment: bool,
     |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1055:5
     |
1055 |     pub embedding_dimension: usize,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
    --> src/query-processor/src/classifier.rs:1066:5
     |
1066 |     pub fn new(max_size: usize) -> Result<Self> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
    --> src/query-processor/src/classifier.rs:1073:5
     |
1073 |     pub fn get(&self, key: &str) -> Option<IntentClassification> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
    --> src/query-processor/src/classifier.rs:1077:5
     |
1077 |     pub fn put(&self, key: String, value: IntentClassification) {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1092:5
     |
1092 |     pub pattern_type: String,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1093:5
     |
1093 |     pub confidence: f64,
     |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
    --> src/query-processor/src/classifier.rs:1094:5
     |
1094 |     pub semantic_weight: f64,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/entities.rs:335:5
    |
335 |     pub async fn new(config: Arc<EntityExtractorConfig>) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/entities.rs:341:5
    |
341 | /     pub async fn extract(
342 | |         &self,
343 | |         _query: &Query,
344 | |         analysis: &SemanticAnalysis,
345 | |     ) -> Result<Vec<ExtractedEntity>> {
    | |_____________________________________^

warning: missing documentation for an associated function
   --> src/query-processor/src/entities.rs:393:5
    |
393 |     pub async fn new(config: Arc<EntityExtractorConfig>) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/entities.rs:402:5
    |
402 | /     pub async fn extract(
403 | |         &self,
404 | |         query: &Query,
405 | |         analysis: &SemanticAnalysis,
406 | |     ) -> Result<Vec<ExtractedEntity>> {
    | |_____________________________________^

warning: missing documentation for an associated function
   --> src/query-processor/src/entities.rs:472:5
    |
472 |     pub async fn new(config: Arc<EntityExtractorConfig>) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/entities.rs:481:5
    |
481 | /     pub async fn extract(
482 | |         &self,
483 | |         query: &Query,
484 | |         analysis: &SemanticAnalysis,
485 | |     ) -> Result<Vec<ExtractedEntity>> {
    | |_____________________________________^

warning: missing documentation for an associated function
   --> src/query-processor/src/entities.rs:564:5
    |
564 |     pub fn new(pattern: &str, description: &str, confidence: f64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/entities.rs:574:5
    |
574 |     pub fn find_matches(&self, text: &str) -> Result<Vec<EntityMatch>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/entities.rs:595:5
    |
595 |     pub fn normalize(&self, text: &str) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/entities.rs:604:5
    |
604 |     pub text: String,
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/entities.rs:605:5
    |
605 |     pub start: usize,
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/entities.rs:606:5
    |
606 |     pub end: usize,
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/entities.rs:607:5
    |
607 |     pub confidence: f64,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/entities.rs:608:5
    |
608 |     pub groups: Vec<Option<String>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:17:21
   |
17 |     Configuration { message: String },
   |                     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:21:20
   |
21 |     InvalidQuery { reason: String },
   |                    ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:25:22
   |
25 |     AnalysisFailed { stage: String, reason: String },
   |                      ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:25:37
   |
25 |     AnalysisFailed { stage: String, reason: String },
   |                                     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:29:30
   |
29 |     EntityExtractionFailed { reason: String },
   |                              ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:33:28
   |
33 |     TermExtractionFailed { reason: String },
   |                            ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:37:34
   |
37 |     IntentClassificationFailed { reason: String },
   |                                  ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:41:31
   |
41 |     StrategySelectionFailed { reason: String },
   |                               ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:45:23
   |
45 |     ConsensusFailed { reason: String },
   |                       ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:49:24
   |
49 |     ValidationFailed { field: String, reason: String },
   |                        ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:49:39
   |
49 |     ValidationFailed { field: String, reason: String },
   |                                       ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:53:28
   |
53 |     PerformanceViolation { constraint: String, details: String },
   |                            ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:53:48
   |
53 |     PerformanceViolation { constraint: String, details: String },
   |                                                ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:57:21
   |
57 |     ResourceError { resource: String, reason: String },
   |                     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:57:39
   |
57 |     ResourceError { resource: String, reason: String },
   |                                       ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:61:20
   |
61 |     NetworkError { operation: String, reason: String },
   |                    ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:61:39
   |
61 |     NetworkError { operation: String, reason: String },
   |                                       ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:66:9
   |
66 |         operation: String,
   |         ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:67:9
   |
67 |         duration: std::time::Duration,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:72:24
   |
72 |     ConcurrencyError { reason: String },
   |                        ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:76:28
   |
76 |     ExternalServiceError { service: String, reason: String },
   |                            ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:76:45
   |
76 |     ExternalServiceError { service: String, reason: String },
   |                                             ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:80:27
   |
80 |     DataProcessingError { stage: String, reason: String },
   |                           ^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:80:42
   |
80 |     DataProcessingError { stage: String, reason: String },
   |                                          ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:84:26
   |
84 |     SerializationError { format: String, reason: String },
   |                          ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:84:42
   |
84 |     SerializationError { format: String, reason: String },
   |                                          ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:88:27
   |
88 |     AuthenticationError { reason: String },
   |                           ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:93:9
   |
93 |         limit: u32,
   |         ^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:94:9
   |
94 |         window: std::time::Duration,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> src/query-processor/src/error.rs:99:19
   |
99 |     MemoryError { reason: String },
   |                   ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/error.rs:103:26
    |
103 |     NeuralNetworkError { model: String, reason: String },
    |                          ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/error.rs:103:41
    |
103 |     NeuralNetworkError { model: String, reason: String },
    |                                         ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/error.rs:107:31
    |
107 |     ConsensusAlgorithmError { algorithm: String, reason: String },
    |                               ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/error.rs:107:50
    |
107 |     ConsensusAlgorithmError { algorithm: String, reason: String },
    |                                                  ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/error.rs:111:22
    |
111 |     ByzantineFault { details: String },
    |                      ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/error.rs:115:21
    |
115 |     CitationError { reason: String },
    |                     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/error.rs:119:21
    |
119 |     DatabaseError { operation: String, reason: String },
    |                     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/error.rs:119:40
    |
119 |     DatabaseError { operation: String, reason: String },
    |                                        ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/error.rs:123:18
    |
123 |     CacheError { operation: String, reason: String },
    |                  ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/error.rs:123:37
    |
123 |     CacheError { operation: String, reason: String },
    |                                     ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/error.rs:127:20
    |
127 |     MetricsError { metric: String, reason: String },
    |                    ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/error.rs:127:36
    |
127 |     MetricsError { metric: String, reason: String },
    |                                    ^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/error.rs:135:16
    |
135 |     Internal { reason: String },
    |                ^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/extractor.rs:307:5
    |
307 |     pub async fn new(config: Arc<TermExtractorConfig>) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/extractor.rs:311:5
    |
311 | /     pub async fn extract_ngrams(
312 | |         &self,
313 | |         query: &Query,
314 | |         analysis: &SemanticAnalysis,
315 | |         n: usize,
316 | |     ) -> Result<Vec<KeyTerm>> {
    | |_____________________________^

warning: missing documentation for an associated function
   --> src/query-processor/src/extractor.rs:433:5
    |
433 |     pub async fn new() -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/extractor.rs:437:5
    |
437 |     pub async fn calculate_tfidf(&self, term: &str, document: &str) -> Result<f64> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/metrics.rs:281:5
    |
281 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/metrics.rs:291:5
    |
291 |     pub fn record_latency(&mut self, duration: Duration) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/metrics.rs:305:5
    |
305 |     pub fn average(&self) -> Duration {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/metrics.rs:313:5
    |
313 |     pub fn percentile(&self, p: u8) -> Duration {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/metrics.rs:335:5
    |
335 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/metrics.rs:342:5
    |
342 |     pub fn record_processing(&mut self, timestamp: Instant) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/metrics.rs:356:5
    |
356 |     pub fn current_qps(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/metrics.rs:378:5
    |
378 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/metrics.rs:387:5
    |
387 |     pub fn record_confidence(&mut self, confidence: f64) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/metrics.rs:395:5
    |
395 |     pub fn average_confidence(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/metrics.rs:415:5
    |
415 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/metrics.rs:425:5
    |
425 |     pub fn record_usage(&mut self, usage: &crate::query::ResourceUsage) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/metrics.rs:433:5
    |
433 |     pub fn cache_hit_rate(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/metrics.rs:452:5
    |
452 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/metrics.rs:460:5
    |
460 |     pub fn record_duration(&mut self, duration: Duration) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/metrics.rs:476:5
    |
476 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/metrics.rs:484:5
    |
484 |     pub fn record_processing(&mut self, confidence: f64) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/metrics.rs:500:5
    |
500 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/metrics.rs:508:5
    |
508 |     pub fn record_usage(&mut self, confidence: f64) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/metrics.rs:516:5
    |
516 |     pub fn average_confidence(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/metrics.rs:524:5
    |
524 |     pub fn success_rate(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/metrics.rs:536:5
    |
536 |     pub total_processed: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/metrics.rs:537:5
    |
537 |     pub success_rate: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/metrics.rs:538:5
    |
538 |     pub average_latency: Duration,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/metrics.rs:539:5
    |
539 |     pub current_throughput: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/metrics.rs:540:5
    |
540 |     pub average_confidence: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/metrics.rs:541:5
    |
541 |     pub top_intent: Option<QueryIntent>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/metrics.rs:542:5
    |
542 |     pub top_strategy: Option<String>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/metrics.rs:543:5
    |
543 |     pub uptime: Duration,
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/metrics.rs:544:5
    |
544 |     pub last_updated: DateTime<Utc>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/performance_optimizer.rs:136:5
    |
136 |     Semantic,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/performance_optimizer.rs:137:5
    |
137 |     Entity,
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/performance_optimizer.rs:138:5
    |
138 |     Intent,
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/performance_optimizer.rs:139:5
    |
139 |     Strategy,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/performance_optimizer.rs:140:5
    |
140 |     Consensus,
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/performance_optimizer.rs:146:5
    |
146 |     Low = 1,
    |     ^^^

warning: missing documentation for a variant
   --> src/query-processor/src/performance_optimizer.rs:147:5
    |
147 |     Medium = 2,
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/performance_optimizer.rs:148:5
    |
148 |     High = 3,
    |     ^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/performance_optimizer.rs:149:5
    |
149 |     Critical = 4,
    |     ^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/performance_optimizer.rs:155:5
    |
155 |     pub query_id: Uuid,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/performance_optimizer.rs:156:5
    |
156 |     pub result: ProcessedQuery,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/performance_optimizer.rs:157:5
    |
157 |     pub processing_time: Duration,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/performance_optimizer.rs:158:5
    |
158 |     pub cache_hit: bool,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/performance_optimizer.rs:159:5
    |
159 |     pub parallel_tasks_used: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/performance_optimizer.rs:160:5
    |
160 |     pub performance_score: f64, // 0.0 to 1.0 based on target achievement
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/performance_optimizer.rs:551:5
    |
551 |     pub target_response_time_ms: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/performance_optimizer.rs:552:5
    |
552 |     pub average_response_time_ms: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/performance_optimizer.rs:553:5
    |
553 |     pub target_achievement_rate: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/performance_optimizer.rs:554:5
    |
554 |     pub cache_hit_rate: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/performance_optimizer.rs:555:5
    |
555 |     pub total_queries_processed: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/performance_optimizer.rs:556:5
    |
556 |     pub queries_under_target: u64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/performance_optimizer.rs:557:5
    |
557 |     pub cache_size: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/performance_optimizer.rs:558:5
    |
558 |     pub performance_grade: PerformanceGrade,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/performance_optimizer.rs:564:5
    |
564 |     Excellent, // >95% target achievement
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/performance_optimizer.rs:565:5
    |
565 |     Good,      // 85-95% target achievement  
    |     ^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/performance_optimizer.rs:566:5
    |
566 |     Fair,      // 70-85% target achievement
    |     ^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/performance_optimizer.rs:567:5
    |
567 |     Poor,      // <70% target achievement
    |     ^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/query.rs:889:5
    |
889 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/query.rs:893:5
    |
893 |     pub fn query(mut self, query: impl Into<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/query.rs:898:5
    |
898 |     pub fn query_id(mut self, id: Uuid) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/query.rs:903:5
    |
903 |     pub fn build(self) -> Result<Query> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/strategy.rs:435:5
    |
435 |     pub fn new(config: &crate::config::StrategyConfig) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/strategy.rs:445:5
    |
445 | /     pub async fn recommend_strategies(
446 | |         &self,
447 | |         characteristics: &QueryCharacteristics,
448 | |     ) -> Result<Vec<StrategyRecommendation>> {
    | |____________________________________________^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:646:5
    |
646 |     pub name: String,
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:647:5
    |
647 |     pub conditions: Vec<RuleCondition>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:648:5
    |
648 |     pub strategy_template: String,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:649:5
    |
649 |     pub confidence: f64,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:650:5
    |
650 |     pub parameters: HashMap<String, f64>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/strategy.rs:654:5
    |
654 |     pub fn evaluate(&self, characteristics: &QueryCharacteristics) -> Result<Option<StrategyRecommendation>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/strategy.rs:742:5
    |
742 |     IntentEquals(QueryIntent),
    |     ^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/strategy.rs:743:5
    |
743 |     ComplexityAbove(f64),
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/strategy.rs:744:5
    |
744 |     ComplexityBelow(f64),
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/strategy.rs:745:5
    |
745 |     EntityCountAbove(usize),
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/strategy.rs:746:5
    |
746 |     EntityCountBelow(usize),
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/strategy.rs:747:5
    |
747 |     HasTechnicalTerms,
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/strategy.rs:748:5
    |
748 |     HasComplianceTerms,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/strategy.rs:749:5
    |
749 |     RequiresHighAccuracy,
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/strategy.rs:750:5
    |
750 |     MaxLatencyBelow(Duration),
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/strategy.rs:754:5
    |
754 |     pub fn matches(&self, characteristics: &QueryCharacteristics) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:772:5
    |
772 |     pub strategy: SearchStrategy,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:773:5
    |
773 |     pub confidence: f64,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:774:5
    |
774 |     pub reasoning: String,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:775:5
    |
775 |     pub performance_estimate: Option<PerformanceMetrics>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:781:5
    |
781 |     pub query_length: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:782:5
    |
782 |     pub word_count: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:783:5
    |
783 |     pub entity_count: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:784:5
    |
784 |     pub entity_density: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:785:5
    |
785 |     pub intent: QueryIntent,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:786:5
    |
786 |     pub intent_confidence: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:787:5
    |
787 |     pub complexity_score: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:788:5
    |
788 |     pub has_technical_terms: bool,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:789:5
    |
789 |     pub has_compliance_terms: bool,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:790:5
    |
790 |     pub has_comparison_indicators: bool,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:791:5
    |
791 |     pub semantic_complexity: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:792:5
    |
792 |     pub syntactic_complexity: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:793:5
    |
793 |     pub requires_high_accuracy: bool,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:794:5
    |
794 |     pub performance_requirements: PerformanceRequirements,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:800:5
    |
800 |     pub max_latency: Duration,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:801:5
    |
801 |     pub min_accuracy: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:802:5
    |
802 |     pub min_recall: f64,
    |     ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:803:5
    |
803 |     pub min_precision: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/strategy.rs:814:5
    |
814 |     pub fn new(_config: &crate::config::StrategyConfig) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/strategy.rs:821:5
    |
821 | /     pub async fn record_performance(
822 | |         &mut self,
823 | |         selection: &StrategySelection,
824 | |         actual: ActualPerformance,
825 | |     ) -> Result<()> {
    | |___________________^

warning: missing documentation for a method
   --> src/query-processor/src/strategy.rs:871:5
    |
871 |     pub fn get_strategy_performance(&self, strategy: &SearchStrategy) -> Option<&StrategyMetrics> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:880:5
    |
880 |     pub timestamp: chrono::DateTime<chrono::Utc>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:881:5
    |
881 |     pub expected_metrics: PerformanceMetrics,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:882:5
    |
882 |     pub actual_performance: ActualPerformance,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:883:5
    |
883 |     pub accuracy_delta: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:884:5
    |
884 |     pub latency_delta: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:890:5
    |
890 |     pub accuracy: f64,
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:891:5
    |
891 |     pub recall: f64,
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:892:5
    |
892 |     pub precision: f64,
    |     ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:893:5
    |
893 |     pub latency: Duration,
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:894:5
    |
894 |     pub resource_usage: ResourceUsage,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:895:5
    |
895 |     pub result_count: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:896:5
    |
896 |     pub user_satisfaction: Option<f64>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:902:5
    |
902 |     pub total_queries: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:903:5
    |
903 |     pub high_accuracy_count: usize,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:904:5
    |
904 |     pub total_accuracy: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:905:5
    |
905 |     pub average_accuracy: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:906:5
    |
906 |     pub total_latency: Duration,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:907:5
    |
907 |     pub average_latency: Duration,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:908:5
    |
908 |     pub accuracy_variance: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:909:5
    |
909 |     pub latency_variance: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/strategy.rs:910:5
    |
910 |     pub last_updated: Option<chrono::DateTime<chrono::Utc>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/strategy.rs:922:5
    |
922 |     pub async fn new(config: &crate::config::StrategyConfig) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/strategy.rs:930:5
    |
930 | /     pub async fn refine_recommendations(
931 | |         &self,
932 | |         mut recommendations: Vec<StrategyRecommendation>,
933 | |         _characteristics: &QueryCharacteristics,
934 | |     ) -> Result<Vec<StrategyRecommendation>> {
    | |____________________________________________^

warning: missing documentation for a method
   --> src/query-processor/src/strategy.rs:949:5
    |
949 | /     pub async fn update_from_performance(
950 | |         &mut self,
951 | |         selection: &StrategySelection,
952 | |         actual: &ActualPerformance,
953 | |     ) -> Result<()> {
    | |___________________^

warning: missing documentation for an associated function
   --> src/query-processor/src/strategy.rs:982:5
    |
982 |     pub fn new(max_size: usize) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/strategy.rs:989:5
    |
989 |     pub fn get(&self, key: &str) -> Option<StrategySelection> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/strategy.rs:993:5
    |
993 |     pub fn put(&self, key: String, value: StrategySelection) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
  --> src/query-processor/src/types.rs:38:5
   |
38 |     pub fn new(code: String, name: String, confidence: f64) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/types.rs:97:5
    |
97  | /     pub fn new(
98  | |         syntactic_features: SyntacticFeatures,
99  | |         semantic_features: SemanticFeatures,
100 | |         dependencies: Vec<Dependency>,
...   |
103 | |         processing_time: Duration,
104 | |     ) -> Self {
    | |_____________^

warning: missing documentation for an associated function
   --> src/query-processor/src/types.rs:171:5
    |
171 | /     pub fn new(
172 | |         text: String,
173 | |         entity_type: String,
174 | |         start: usize,
175 | |         end: usize,
176 | |         confidence: f64,
177 | |     ) -> Self {
    | |_____________^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:195:5
    |
195 |     RuleBased,
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:196:5
    |
196 |     Neural,
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:197:5
    |
197 |     Hybrid,
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:198:5
    |
198 |     External,
    |     ^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/types.rs:249:5
    |
249 |     pub fn new(predicate: String, arguments: Vec<Argument>, confidence: f64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/types.rs:392:5
    |
392 |     pub fn confidence_weight(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> src/query-processor/src/types.rs:409:5
    |
409 |     pub fn is_complex(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:439:5
    |
439 |     RuleBased,
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:440:5
    |
440 |     Neural,
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:441:5
    |
441 |     Ensemble,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:442:5
    |
442 |     Hybrid,
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:473:5
    |
473 |     TechnicalTerm,
    |     ^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:474:5
    |
474 |     ComplianceKeyword,
    |     ^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:475:5
    |
475 |     BusinessTerm,
    |     ^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:476:5
    |
476 |     GeneralTerm,
    |     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:477:5
    |
477 |     StopWord,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:479:5
    |
479 |     Domain,
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:480:5
    |
480 |     Compliance,
    |     ^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:481:5
    |
481 |     Technical,
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:482:5
    |
482 |     Concept,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:483:5
    |
483 |     Action,
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:484:5
    |
484 |     General,
    |     ^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:492:9
    |
492 |         model: String,
    |         ^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:493:9
    |
493 |         similarity_threshold: f64,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:494:9
    |
494 |         max_results: usize,
    |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:498:9
    |
498 |         algorithm: KeywordAlgorithm,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:499:9
    |
499 |         boost_factors: HashMap<String, f64>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:500:9
    |
500 |         fuzzy_matching: bool,
    |         ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:504:9
    |
504 |         strategies: Vec<SearchStrategy>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:505:9
    |
505 |         weights: HashMap<String, f64>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:506:9
    |
506 |         combination_method: CombinationMethod,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:510:9
    |
510 |         graph_traversal: GraphTraversal,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:511:9
    |
511 |         relationship_types: Vec<String>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:512:9
    |
512 |         depth_limit: usize,
    |         ^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:516:9
    |
516 |         base_strategy: Box<SearchStrategy>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:517:9
    |
517 |         adaptation_rules: Vec<AdaptationRule>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:518:9
    |
518 |         learning_enabled: bool,
    |         ^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:543:5
    |
543 |     BM25,
    |     ^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:544:5
    |
544 |     TfIdf,
    |     ^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:545:5
    |
545 |     Boolean,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:546:5
    |
546 |     Fuzzy,
    |     ^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:552:5
    |
552 |     WeightedSum,
    |     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:553:5
    |
553 |     RankFusion,
    |     ^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:554:5
    |
554 |     Cascade,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:555:5
    |
555 |     Voting,
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:561:5
    |
561 |     BreadthFirst,
    |     ^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:562:5
    |
562 |     DepthFirst,
    |     ^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:563:5
    |
563 |     PageRank,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:564:5
    |
564 |     RandomWalk,
    |     ^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:583:5
    |
583 |     QueryComplexity(f64),
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:584:5
    |
584 |     EntityCount(usize),
    |     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:585:5
    |
585 |     IntentConfidence(f64),
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:586:5
    |
586 |     HistoricalPerformance(f64),
    |     ^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:587:5
    |
587 |     ResponseTime(Duration),
    |     ^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:593:5
    |
593 |     SwitchStrategy(SearchStrategy),
    |     ^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:594:5
    |
594 |     ModifyParameters(HashMap<String, f64>),
    |     ^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:595:5
    |
595 |     AddFallback(SearchStrategy),
    |     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:596:5
    |
596 |     IncreaseTimeout(Duration),
    |     ^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:682:5
    |
682 |     Byzantine,
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:683:5
    |
683 |     Majority,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:684:5
    |
684 |     Weighted,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:685:5
    |
685 |     Raft,
    |     ^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:686:5
    |
686 |     Proof,
    |     ^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:724:5
    |
724 |     Approve,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:725:5
    |
725 |     Reject,
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:726:5
    |
726 |     Abstain,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:727:5
    |
727 |     Conditional(String),
    |     ^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:751:23
    |
751 |     QueryProcessing { result: QueryResult },
    |                       ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:753:24
    |
753 |     EntityExtraction { entities: Vec<ExtractedEntity> },
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:755:22
    |
755 |     Classification { classification: ClassificationResult },
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:757:30
    |
757 |     StrategyRecommendation { strategy: StrategyRecommendation },
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
   --> src/query-processor/src/types.rs:759:24
    |
759 |     ResultValidation { validation: ValidationResult },
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:765:5
    |
765 |     Required,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:766:5
    |
766 |     MinValue(f64),
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:767:5
    |
767 |     MaxValue(f64),
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:768:5
    |
768 |     Range(f64, f64),
    |     ^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:769:5
    |
769 |     Pattern(String),
    |     ^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:770:5
    |
770 |     Custom(String),
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:771:5
    |
771 |     Dependency(String),
    |     ^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:816:5
    |
816 |     Low,
    |     ^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:817:5
    |
817 |     Medium,
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:818:5
    |
818 |     High,
    |     ^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:819:5
    |
819 |     Critical,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:952:5
    |
952 |     Classifier,
    |     ^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:953:5
    |
953 |     Embedder,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:954:5
    |
954 |     Transformer,
    |     ^^^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:955:5
    |
955 |     Custom(String),
    |     ^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:980:5
    |
980 |     Healthy,
    |     ^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:981:5
    |
981 |     Degraded,
    |     ^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:982:5
    |
982 |     Unhealthy,
    |     ^^^^^^^^^

warning: missing documentation for a variant
   --> src/query-processor/src/types.rs:983:5
    |
983 |     Offline,
    |     ^^^^^^^

warning: associated constant `ComplianceTerm` should have an upper case name
    --> src/query-processor/src/types.rs:1110:15
     |
1110 |     pub const ComplianceTerm: EntityType = EntityType::Standard;
     |               ^^^^^^^^^^^^^^ help: convert the identifier to upper case: `COMPLIANCE_TERM`
     |
     = note: `#[warn(non_upper_case_globals)]` on by default

warning: missing documentation for an associated constant
    --> src/query-processor/src/types.rs:1110:5
     |
1110 |     pub const ComplianceTerm: EntityType = EntityType::Standard;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated constant `Location` should have an upper case name
    --> src/query-processor/src/types.rs:1111:15
     |
1111 |     pub const Location: EntityType = EntityType::Location;
     |               ^^^^^^^^ help: convert the identifier to upper case: `LOCATION`

warning: missing documentation for an associated constant
    --> src/query-processor/src/types.rs:1111:5
     |
1111 |     pub const Location: EntityType = EntityType::Location;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/validation.rs:270:5
    |
270 |     pub async fn new(config: Arc<ValidationConfig>) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/validation.rs:343:5
    |
343 |     pub async fn new(config: Arc<ValidationConfig>) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/validation.rs:423:5
    |
423 |     pub async fn new(config: Arc<ValidationConfig>) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/validation.rs:521:5
    |
521 |     pub async fn new(config: Arc<ValidationConfig>) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> src/query-processor/src/validation.rs:593:5
    |
593 |     pub async fn new(config: Arc<ValidationConfig>) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0063, E0277, E0308, E0599.
For more information about an error, try `rustc --explain E0063`.
warning: `api` (lib) generated 3 warnings (3 duplicates)
error: could not compile `api` (lib) due to 22 previous errors; 3 warnings emitted
Some errors have detailed explanations: E0063, E0277, E0308, E0369, E0433, E0599.
warning: `api` (lib test) generated 14 warnings
error: could not compile `api` (lib test) due to 28 previous errors; 14 warnings emitted
Some errors have detailed explanations: E0063, E0107, E0277, E0308, E0412, E0422, E0433, E0560, E0574...
warning: `query-processor` (lib test) generated 40 warnings (21 duplicates)
error: could not compile `query-processor` (lib test) due to 90 previous errors; 40 warnings emitted
warning: `query-processor` (lib) generated 427 warnings (17 duplicates)
