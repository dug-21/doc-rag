[workspace]
members = [
    "src/api",
    "src/chunker",
    "src/embedder", 
    "src/storage",
    "src/query-processor",
    "src/response-generator",
    "src/integration",
]
exclude = [
    "src/mcp-adapter",
]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2021"
authors = ["Doc-RAG Team <team@doc-rag.io>"]
license = "MIT"
repository = "https://github.com/doc-rag/doc-rag"
homepage = "https://doc-rag.io"
description = "High-performance document retrieval and augmented generation system"
keywords = ["rag", "retrieval", "nlp", "embeddings", "search"]
categories = ["text-processing", "web-programming", "science"]
rust-version = "1.75.0"

[workspace.dependencies]
# Core async runtime
tokio = { version = "1.35", features = ["full"] }
tokio-util = "0.7"
futures = "0.3"
async-trait = "0.1"

# HTTP and API
axum = { version = "0.7", features = ["ws", "multipart", "macros"] }
tower = { version = "0.4", features = ["full"] }
tower-http = { version = "0.5", features = ["fs", "cors", "trace", "compression-gzip"] }
hyper = { version = "1.0", features = ["full"] }
reqwest = { version = "0.11", features = ["json", "stream", "multipart"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
toml = { version = "0.8", features = ["preserve_order"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"
eyre = "0.6"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-opentelemetry = "0.22"
opentelemetry = "0.21"
opentelemetry-jaeger = { version = "0.20", features = ["rt-tokio"] }

# Configuration
config = "0.14"
clap = { version = "4.4", features = ["derive", "env"] }

# Database and storage
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres", "uuid", "chrono", "json"] }
redis = { version = "0.24", features = ["tokio-comp", "connection-manager", "streams"] }
minio = "0.1"
mongodb = { version = "2.7", features = ["tokio-runtime"] }
bson = { version = "2.7", features = ["chrono-0_4"] }

# Vector operations and ML
candle-core = { version = "0.4", features = ["cuda", "accelerate"] }
candle-nn = "0.4"
candle-transformers = "0.4"
hf-hub = "0.3"
tokenizers = "0.15"
ort = { version = "2.0.0-rc.10", features = ["cuda", "tensorrt"] }
sha2 = "0.10"
ndarray = { version = "0.15", features = ["serde"] }

# Vector databases
qdrant-client = "1.7"
pinecone-sdk = "0.6"
weaviate-client = "0.3"

# Text processing
tiktoken-rs = "0.5"
regex = "1.10"
unicode-segmentation = "1.10"
html2text = "0.8"
scraper = "0.18"
pdf-extract = "0.6"
docx-rs = "0.4"

# Utilities
uuid = { version = "1.6", features = ["v4", "serde"] }
tokio-stream = { version = "0.1", features = ["sync"] }
chrono = { version = "0.4", features = ["serde"] }
url = { version = "2.5", features = ["serde"] }
mime = "0.3"
bytes = "1.5"
dashmap = "5.5"
arc-swap = "1.6"
once_cell = "1.19"
parking_lot = "0.12"

# Monitoring and metrics
prometheus = "0.13"
metrics = "0.22"
metrics-exporter-prometheus = "0.12"

# Security
jsonwebtoken = "9.2"
argon2 = "0.5"
ring = "0.17"

# Additional API Gateway dependencies
validator = { version = "0.16", features = ["derive"] }
tower-sessions = "0.10"
tower-sessions-redis-store = "0.10"
tower-governor = "0.6.2"
tower-request-id = "0.2"
num_cpus = "1.16"
base64 = "0.22"

# Development and testing
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.4"
mockall = "0.12"
tokio-test = "0.4"
rand = "0.8"
tempfile = "3.8"

[profile.release]
opt-level = 3
lto = "fat"
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
opt-level = 0
debug = true
incremental = true

[profile.test]
opt-level = 1
debug = true

[profile.bench]
opt-level = 3
debug = false
lto = true

# Integration tests package
[package]
name = "doc-rag-integration"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
description = "Week 3 Integration Tests and Benchmarks for Doc-RAG System"

[dependencies]
# Core dependencies
tokio = { workspace = true }
futures = { workspace = true }
anyhow = { workspace = true }
thiserror = { workspace = true }
uuid = { workspace = true }
chrono = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tracing = { workspace = true }

# Development dependencies
criterion = { workspace = true }
tokio-test = { workspace = true }
rand = { workspace = true }

# Component dependencies
chunker = { path = "src/chunker" }
embedder = { path = "src/embedder" }
storage = { path = "src/storage" }
query-processor = { path = "src/query-processor" }
response-generator = { path = "src/response-generator" }

[dev-dependencies]
tokio-test = { workspace = true }
criterion = { workspace = true }
proptest = { workspace = true }
mockall = { workspace = true }
rand = { workspace = true }

[[bench]]
name = "week3_pipeline_benchmarks"
harness = false
required-features = []

[features]
default = ["integration-tests", "benchmarks"]
integration-tests = []
benchmarks = []