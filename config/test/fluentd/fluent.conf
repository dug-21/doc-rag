# Fluentd Configuration for Test Environment
# Optimized for development and debugging

<system>
  log_level info
  workers 1
</system>

# Input from Docker logging driver
<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

# Input from local log files
<source>
  @type tail
  path /var/log/*.log
  pos_file /fluentd/log/test.log.pos
  tag test.file
  <parse>
    @type multiline
    format_firstline /^\d{4}-\d{2}-\d{2}/
    format1 /^(?<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3}) \[(?<level>\w+)\] (?<message>.*)/
  </parse>
</source>

# Filter for test environment
<filter test.**>
  @type record_transformer
  <record>
    environment test
    hostname "#{Socket.gethostname}"
    timestamp ${time}
  </record>
</filter>

# Filter for API logs
<filter docker.api-test>
  @type parser
  key_name log
  reserve_data true
  <parse>
    @type json
    time_key timestamp
    time_format %Y-%m-%dT%H:%M:%S%.%LZ
  </parse>
</filter>

# Filter for test metrics
<filter docker.*-test>
  @type record_transformer
  <record>
    service ${tag_parts[1]}
    test_environment true
  </record>
</filter>

# Output to stdout for debugging
<match test.**>
  @type stdout
  <format>
    @type json
  </format>
</match>

# Output Docker logs to file
<match docker.**>
  @type file
  path /var/log/test-services
  append true
  time_slice_format %Y%m%d%H
  time_slice_wait 1m
  time_format %Y-%m-%dT%H:%M:%S%z
  <format>
    @type json
  </format>
  <buffer>
    flush_interval 10s
    chunk_limit_size 8m
  </buffer>
</match>

# Catch-all for other logs
<match **>
  @type file
  path /var/log/test-other
  append true
  time_slice_format %Y%m%d
  <format>
    @type json
  </format>
</match>